PDSC: Verifying ./Benchmarks_msat/subsume_ref_ref.smt2
Namespace(file='./Benchmarks_msat/subsume_ref_ref.smt2', log=False, msat=True, property=None, qe=False, sygus=False)
In if ladder True
Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, ]
--->[2]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
count_0_1, ]
--->[2]

[abs_h_0, 
abs_h_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
count_0_1, ]
--->[1]

[abs_h_0, 
abs_h_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, ]
--->[2]

[abs_h_0, 
abs_h_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, ]
--->[0]


6 SMT queries performed.
before complete_trace: [abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, ]
--->[0]


after complete_trace [abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, ]
--->[-1]


-----------------------------------check_spur-------------------------------
final init cond And(0 == count_0,
    0 == count_1,
    And(x_0 == x_1, h_0 == 1, h_1 == 1))
Initial concrete state  {'count_0_1': True, 'abs_h_1': True, 'count_0_0': True, 'abs_h_0': True, 'x0_eq_x1': True, 'h_1': 1, 'h_0': 1, 'x_1': 0, 'x_0': 0, 'count_1': 0, 'count_0': 0}
Next concrete state {'count_1': 1, 'x_1': 8, 'count_0': 0, 'h_0': 1, 'x_0': 0, 'h_1': 1}
Next concrete state {'count_0': 1, 'x_0': 8, 'count_1': 1, 'h_1': 1, 'x_1': 8, 'h_0': 1}
Next concrete state {'x_1': 8, 'count_0': 1, 'x_0': 8, 'count_1': 1, 'h_1': 1, 'h_0': 1}
Writing an smt file to be run using mathsat
Checking output from mathsat 5
hi
paren_dict {19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 89: 99, 79: 101, 77: 103, 130: 144, 124: 146, 113: 148, 111: 150, 185: 208, 171: 210, 160: 212, 158: 214, 235: 258, 224: 260, 222: 262, 326: 350, 312: 352, 298: 354, 283: 356, 272: 358, 270: 360, 417: 431, 411: 433, 507: 531, 492: 533, 478: 535, 464: 537, 449: 539, 435: 541, 405: 543, 390: 545, 376: 547, 362: 549, 264: 551, 216: 553, 152: 555, 105: 557, 71: 559, 37: 561, 1: 563}
aux_vars_first_occ_dict {'.def_17 ': 11, '.def_20 ': 47, '.def_22 ': 81, '.def_407 ': 115, '.def_411 ': 162, '.def_412 ': 226, '.def_436 ': 274}
aux_vars_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and .def_22 ( and .def_17 .def_407 ) ) ', '.def_412 ': '( and .def_17 .def_411 ) ', '.def_436 ': '( and .def_411 ( and .def_17 ( and .def_22 ( and .def_407 .def_412 ) ) ) ) '}
subs1 ( = x_0 x_1 ) 
remove lets from formula
subs2 ( = x_0 x_1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( and .def_22 ( and .def_17 .def_407 ) ) 
remove lets from formula
subs2 ( and .def_22 ( and .def_17 .def_407 ) ) 
.def_17 
20
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) '}
.def_22 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and .def_22 ( and ( = x_0 x_1 ) .def_407 ) ) '}
.def_407 
38
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) .def_407 ) ) '}
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( = x_0 x_1 ) 
remove lets from formula
subs2 ( = x_0 x_1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( and .def_17 .def_411 ) 
remove lets from formula
subs2 ( and .def_17 .def_411 ) 
.def_17 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) '}
.def_411 
20
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) .def_411 ) '}
subs1 ( = x_0 x_1 ) 
remove lets from formula
subs2 ( = x_0 x_1 ) 
subs1 ( and .def_22 ( and .def_17 .def_407 ) ) 
remove lets from formula
subs2 ( and .def_22 ( and .def_17 .def_407 ) ) 
.def_17 
20
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) '}
.def_22 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and .def_22 ( and ( = x_0 x_1 ) .def_407 ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) '}
.def_407 
38
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) .def_407 ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) '}
subs1 ( and .def_411 ( and .def_17 ( and .def_22 ( and .def_407 .def_412 ) ) ) ) 
remove lets from formula
subs2 ( and .def_411 ( and .def_17 ( and .def_22 ( and .def_407 .def_412 ) ) ) ) 
.def_17 
21
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) '}
.def_22 
41
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_436 ': '( and .def_411 ( and ( = x_0 x_1 ) ( and .def_22 ( and .def_407 .def_412 ) ) ) ) '}
.def_407 
59
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_436 ': '( and .def_411 ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and .def_407 .def_412 ) ) ) ) '}
.def_411 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_436 ': '( and .def_411 ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) .def_412 ) ) ) ) '}
.def_412 
140
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_436 ': '( and ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) .def_412 ) ) ) ) '}
subs1 ( and .def_22 ( and .def_17 .def_407 ) ) 
remove lets from formula
subs2 ( and .def_22 ( and .def_17 .def_407 ) ) 
.def_17 
20
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_436 ': '( and ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) ) '}
.def_22 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and .def_22 ( and ( = x_0 x_1 ) .def_407 ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_436 ': '( and ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) ) '}
.def_407 
38
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) .def_407 ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_436 ': '( and ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) ) '}
subs1 ( = x_0 x_1 ) 
remove lets from formula
subs2 ( = x_0 x_1 ) 
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( and .def_17 .def_411 ) 
remove lets from formula
subs2 ( and .def_17 .def_411 ) 
.def_17 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_436 ': '( and ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) ) '}
.def_411 
20
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) .def_411 ) ', '.def_436 ': '( and ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) ) '}
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( and .def_411 ( and .def_17 ( and .def_22 ( and .def_407 .def_412 ) ) ) ) 
remove lets from formula
subs2 ( and .def_411 ( and .def_17 ( and .def_22 ( and .def_407 .def_412 ) ) ) ) 
.def_17 
21
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_436 ': '( and ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) ) '}
.def_22 
41
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_436 ': '( and .def_411 ( and ( = x_0 x_1 ) ( and .def_22 ( and .def_407 .def_412 ) ) ) ) '}
.def_407 
59
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_436 ': '( and .def_411 ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and .def_407 .def_412 ) ) ) ) '}
.def_411 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_436 ': '( and .def_411 ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) .def_412 ) ) ) ) '}
.def_412 
140
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_436 ': '( and ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) .def_412 ) ) ) ) '}
subs1 ( = x_0 x_1 ) 
remove lets from formula
subs2 ( = x_0 x_1 ) 
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( and .def_17 .def_411 ) 
remove lets from formula
subs2 ( and .def_17 .def_411 ) 
.def_17 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_436 ': '( and ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) ) '}
.def_411 
20
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) .def_411 ) ', '.def_436 ': '( and ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) ) '}
subs1 ( and .def_411 ( and .def_17 ( and .def_22 ( and .def_407 .def_412 ) ) ) ) 
remove lets from formula
subs2 ( and .def_411 ( and .def_17 ( and .def_22 ( and .def_407 .def_412 ) ) ) ) 
.def_17 
21
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_436 ': '( and ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) ) '}
.def_22 
41
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_436 ': '( and .def_411 ( and ( = x_0 x_1 ) ( and .def_22 ( and .def_407 .def_412 ) ) ) ) '}
.def_407 
59
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_436 ': '( and .def_411 ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and .def_407 .def_412 ) ) ) ) '}
.def_411 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_436 ': '( and .def_411 ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) .def_412 ) ) ) ) '}
.def_412 
140
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_436 ': '( and ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) .def_412 ) ) ) ) '}
aux_vars_subs_dict  {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_407 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_412 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_436 ': '( and ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) ) '}
{19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 89: 99, 79: 101, 77: 103, 130: 144, 124: 146, 113: 148, 111: 150, 185: 208, 171: 210, 160: 212, 158: 214, 235: 258, 224: 260, 222: 262, 326: 350, 312: 352, 298: 354, 283: 356, 272: 358, 270: 360, 417: 431, 411: 433, 507: 531, 492: 533, 478: 535, 464: 537, 449: 539, 435: 541, 405: 543, 390: 545, 376: 547, 362: 549, 264: 551, 216: 553, 152: 555, 105: 557, 71: 559, 37: 561, 1: 563}
{20: 30, 10: 32, 8: 34, 54: 64, 44: 66, 42: 68, 95: 109, 89: 111, 78: 113, 76: 115, 150: 173, 136: 175, 125: 177, 123: 179, 200: 223, 189: 225, 187: 227, 291: 315, 277: 317, 263: 319, 248: 321, 237: 323, 235: 325, 382: 396, 376: 398, 472: 496, 457: 498, 443: 500, 429: 502, 414: 504, 400: 506, 370: 508, 355: 510, 341: 512, 327: 514, 229: 516, 181: 518, 117: 520, 70: 522, 36: 524, 2: 526}
{21: 31, 11: 33, 9: 35, 62: 76, 56: 78, 45: 80, 43: 82, 117: 140, 103: 142, 92: 144, 90: 146, 167: 190, 156: 192, 154: 194, 258: 282, 244: 284, 230: 286, 215: 288, 204: 290, 202: 292, 349: 363, 343: 365, 439: 463, 424: 465, 410: 467, 396: 469, 381: 471, 367: 473, 337: 475, 322: 477, 308: 479, 294: 481, 196: 483, 148: 485, 84: 487, 37: 489, 3: 491}
{29: 43, 23: 45, 12: 47, 10: 49, 84: 107, 70: 109, 59: 111, 57: 113, 134: 157, 123: 159, 121: 161, 225: 249, 211: 251, 197: 253, 182: 255, 171: 257, 169: 259, 316: 330, 310: 332, 406: 430, 391: 432, 377: 434, 363: 436, 348: 438, 334: 440, 304: 442, 289: 444, 275: 446, 261: 448, 163: 450, 115: 452, 51: 454, 4: 456}
{38: 61, 24: 63, 13: 65, 11: 67, 88: 111, 77: 113, 75: 115, 179: 203, 165: 205, 151: 207, 136: 209, 125: 211, 123: 213, 270: 284, 264: 286, 360: 384, 345: 386, 331: 388, 317: 390, 302: 392, 288: 394, 258: 396, 243: 398, 229: 400, 215: 402, 117: 404, 69: 406, 5: 408}
{25: 48, 14: 50, 12: 52, 116: 140, 102: 142, 88: 144, 73: 146, 62: 148, 60: 150, 207: 221, 201: 223, 297: 321, 282: 323, 268: 325, 254: 327, 239: 329, 225: 331, 195: 333, 180: 335, 166: 337, 152: 339, 54: 341, 6: 343}
{69: 93, 55: 95, 41: 97, 26: 99, 15: 101, 13: 103, 160: 174, 154: 176, 250: 274, 235: 276, 221: 278, 207: 280, 192: 282, 178: 284, 148: 286, 133: 288, 119: 290, 105: 292, 7: 294}
remove lets from formula
final_formula  ( and .def_22 ( and .def_20 ( and .def_407 ( and ( not ( = count_0 1 ) ) ( and .def_20 ( and .def_436 ( and .def_17 ( and .def_22 ( and .def_407 ( and .def_412 .def_436 ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = h_1 1 ) ( and ( = h_0 1 ) ( and ( not ( = count_1 1 ) ) ( and ( not ( = count_0 1 ) ) ( and ( = h_0 1 ) ( and ( and ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ( and ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {19: 30, 9: 32, 7: 34, 54: 69, 44: 71, 42: 73, 93: 104, 83: 106, 81: 108, 129: 140, 118: 142, 116: 144, 165: 179, 154: 181, 152: 183, 204: 217, 193: 219, 191: 221, 242: 257, 231: 259, 229: 261, 282: 297, 271: 299, 269: 301, 341: 347, 362: 370, 372: 387, 358: 389, 349: 391, 337: 393, 328: 395, 322: 397, 311: 399, 309: 401, 422: 437, 411: 439, 409: 441, 487: 493, 508: 516, 518: 533, 504: 535, 495: 537, 483: 539, 474: 541, 468: 543, 462: 545, 451: 547, 449: 549, 576: 590, 570: 592, 559: 594, 557: 596, 623: 636, 617: 638, 606: 640, 604: 642, 663: 677, 652: 679, 650: 681, 717: 740, 702: 742, 691: 744, 689: 746, 767: 791, 756: 793, 754: 795, 897: 921, 882: 923, 867: 925, 852: 927, 837: 929, 822: 931, 816: 933, 805: 935, 803: 937, 1063: 1086, 1048: 1088, 1033: 1090, 1018: 1092, 1003: 1094, 988: 1096, 973: 1098, 958: 1100, 947: 1102, 945: 1104, 1125: 1140, 1114: 1142, 1112: 1144, 1192: 1206, 1177: 1208, 1171: 1210, 1236: 1259, 1230: 1261, 1309: 1332, 1295: 1334, 1289: 1336, 1283: 1347, 1277: 1358, 1263: 1360, 1224: 1362, 1218: 1364, 1402: 1426, 1387: 1428, 1372: 1430, 1366: 1432, 1212: 1434, 1165: 1436, 1154: 1438, 1152: 1440, 1469: 1484, 1463: 1486, 1494: 1505, 1578: 1601, 1563: 1603, 1640: 1663, 1737: 1760, 1722: 1762, 1707: 1764, 1701: 1766, 1686: 1768, 1671: 1770, 1665: 1772, 1634: 1774, 1620: 1776, 1605: 1778, 1558: 1780, 1543: 1782, 1826: 1849, 1811: 1851, 1805: 1853, 1790: 1855, 1784: 1857, 1537: 1859, 1522: 1861, 1507: 1863, 1488: 1865, 1457: 1867, 1442: 1869, 1146: 1871, 1106: 1873, 939: 1875, 797: 1877, 748: 1879, 683: 1881, 644: 1883, 598: 1885, 551: 1887, 443: 1889, 403: 1891, 303: 1893, 263: 1895, 223: 1897, 185: 1899, 146: 1901, 110: 1903, 75: 1905, 36: 1907, 1: 1909}
aux_vars_first_occ_dict {'.def_47 ': 11, '.def_49 ': 46, '.def_53 ': 85, '.def_100 ': 120, '.def_117 ': 156, '.def_120 ': 195, '.def_123 ': 233, '.def_127 ': 273, '.def_449 ': 313, '.def_450 ': 413, '.def_458 ': 453, '.def_460 ': 561, '.def_462 ': 608, '.def_463 ': 654, '.def_493 ': 693, '.def_520 ': 758, '.def_522 ': 807, '.def_530 ': 949, '.def_531 ': 1116, '.def_543 ': 1156}
aux_vars_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not .def_120 ) ', '.def_127 ': '( not .def_117 ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not .def_449 ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and .def_462 ( and .def_49 .def_460 ) ) ', '.def_520 ': '( and .def_123 .def_127 ) ', '.def_522 ': '( not ( and .def_462 ( and .def_127 ( and .def_123 ( and .def_463 ( and .def_127 ( and .def_450 .def_463 ) ) ) ) ) ) ) ', '.def_530 ': '( and .def_127 ( and .def_123 ( and .def_458 ( and .def_460 ( and .def_462 ( and .def_450 ( and .def_127 ( and .def_49 .def_463 ) ) ) ) ) ) ) ) ', '.def_531 ': '( not .def_530 ) ', '.def_543 ': '( and ( not ( and .def_449 ( not .def_47 ) ) ) ( and ( not ( and ( not ( and .def_47 .def_449 ) ) ( or .def_449 ( and ( and ( not ( and .def_53 ( or .def_117 .def_120 ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
subs1 ( = xp_1 8 ) 
remove lets from formula
subs2 ( = xp_1 8 ) 
subs1 ( = countp_1 1 ) 
remove lets from formula
subs2 ( = countp_1 1 ) 
subs1 ( = xp_1 1 ) 
remove lets from formula
subs2 ( = xp_1 1 ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( = xp_0 1009 ) 
remove lets from formula
subs2 ( = xp_0 1009 ) 
subs1 ( = xp_0 383 ) 
remove lets from formula
subs2 ( = xp_0 383 ) 
subs1 ( not .def_120 ) 
remove lets from formula
subs2 ( not .def_120 ) 
.def_120 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not .def_120 ) '}
subs1 ( = xp_0 383 ) 
remove lets from formula
subs2 ( = xp_0 383 ) 
subs1 ( not .def_117 ) 
remove lets from formula
subs2 ( not .def_117 ) 
.def_117 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not .def_117 ) '}
subs1 ( = xp_0 1009 ) 
remove lets from formula
subs2 ( = xp_0 1009 ) 
subs1 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
subs1 ( not .def_449 ) 
remove lets from formula
subs2 ( not .def_449 ) 
.def_449 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not .def_449 ) '}
subs1 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
subs1 ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) 
subs1 ( not ( = xp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 1009 ) ) 
subs1 ( not ( = xp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 383 ) ) 
subs1 ( = xp_1 xp_0 ) 
remove lets from formula
subs2 ( = xp_1 xp_0 ) 
subs1 ( and .def_462 ( and .def_49 .def_460 ) ) 
remove lets from formula
subs2 ( and .def_462 ( and .def_49 .def_460 ) ) 
.def_49 
21
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and .def_462 ( and .def_49 .def_460 ) ) '}
.def_460 
38
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and .def_462 ( and ( = countp_1 1 ) .def_460 ) ) '}
.def_462 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and .def_462 ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) '}
subs1 ( not ( = xp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 383 ) ) 
subs1 ( = countp_1 1 ) 
remove lets from formula
subs2 ( = countp_1 1 ) 
subs1 ( not ( = xp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 1009 ) ) 
subs1 ( and .def_123 .def_127 ) 
remove lets from formula
subs2 ( and .def_123 .def_127 ) 
.def_123 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and .def_123 .def_127 ) '}
.def_127 
29
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) .def_127 ) '}
subs1 ( not .def_120 ) 
remove lets from formula
subs2 ( not .def_120 ) 
.def_120 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not .def_120 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) '}
subs1 ( not .def_117 ) 
remove lets from formula
subs2 ( not .def_117 ) 
.def_117 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not .def_117 ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) '}
subs1 ( not ( and .def_462 ( and .def_127 ( and .def_123 ( and .def_463 ( and .def_127 ( and .def_450 .def_463 ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_462 ( and .def_127 ( and .def_123 ( and .def_463 ( and .def_127 ( and .def_450 .def_463 ) ) ) ) ) ) ) 
.def_123 
42
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and .def_462 ( and .def_127 ( and .def_123 ( and .def_463 ( and .def_127 ( and .def_450 .def_463 ) ) ) ) ) ) ) '}
.def_127 
86
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and .def_462 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and .def_463 ( and .def_127 ( and .def_450 .def_463 ) ) ) ) ) ) ) '}
27
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and .def_462 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and .def_463 ( and .def_127 ( and .def_450 .def_463 ) ) ) ) ) ) ) '}
.def_450 
131
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and .def_462 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_463 ( and ( not ( = xp_0 1009 ) ) ( and .def_450 .def_463 ) ) ) ) ) ) ) '}
.def_462 
12
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and .def_462 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_463 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) .def_463 ) ) ) ) ) ) ) '}
.def_463 
230
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_463 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) .def_463 ) ) ) ) ) ) ) '}
100
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_463 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) .def_463 ) ) ) ) ) ) ) '}
subs1 ( not ( = xp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 383 ) ) 
subs1 ( not .def_117 ) 
remove lets from formula
subs2 ( not .def_117 ) 
.def_117 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not .def_117 ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) '}
subs1 ( not .def_120 ) 
remove lets from formula
subs2 ( not .def_120 ) 
.def_120 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not .def_120 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) '}
subs1 ( = xp_1 xp_0 ) 
remove lets from formula
subs2 ( = xp_1 xp_0 ) 
subs1 ( not .def_117 ) 
remove lets from formula
subs2 ( not .def_117 ) 
.def_117 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not .def_117 ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) '}
subs1 ( not .def_449 ) 
remove lets from formula
subs2 ( not .def_449 ) 
.def_449 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not .def_449 ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) '}
subs1 ( = xp_1 xp_0 ) 
remove lets from formula
subs2 ( = xp_1 xp_0 ) 
subs1 ( and .def_127 ( and .def_123 ( and .def_458 ( and .def_460 ( and .def_462 ( and .def_450 ( and .def_127 ( and .def_49 .def_463 ) ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( and .def_127 ( and .def_123 ( and .def_458 ( and .def_460 ( and .def_462 ( and .def_450 ( and .def_127 ( and .def_49 .def_463 ) ) ) ) ) ) ) ) 
.def_49 
111
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and .def_127 ( and .def_123 ( and .def_458 ( and .def_460 ( and .def_462 ( and .def_450 ( and .def_127 ( and .def_49 .def_463 ) ) ) ) ) ) ) ) '}
.def_123 
21
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and .def_127 ( and .def_123 ( and .def_458 ( and .def_460 ( and .def_462 ( and .def_450 ( and .def_127 ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) '}
.def_127 
110
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and .def_458 ( and .def_460 ( and .def_462 ( and .def_450 ( and .def_127 ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) '}
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and .def_458 ( and .def_460 ( and .def_462 ( and .def_450 ( and .def_127 ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) '}
.def_450 
110
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_458 ( and .def_460 ( and .def_462 ( and .def_450 ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) '}
.def_458 
65
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_458 ( and .def_460 ( and .def_462 ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) '}
.def_460 
156
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and .def_460 ( and .def_462 ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) '}
.def_462 
186
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and .def_462 ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) '}
.def_463 
353
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) '}
subs1 ( not .def_117 ) 
remove lets from formula
subs2 ( not .def_117 ) 
.def_117 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not .def_117 ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) '}
subs1 ( not .def_120 ) 
remove lets from formula
subs2 ( not .def_120 ) 
.def_120 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not .def_120 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) '}
subs1 ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) 
subs1 ( not ( = xp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 1009 ) ) 
subs1 ( not ( = xp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 383 ) ) 
subs1 ( not .def_449 ) 
remove lets from formula
subs2 ( not .def_449 ) 
.def_449 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not .def_449 ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) '}
subs1 ( not .def_117 ) 
remove lets from formula
subs2 ( not .def_117 ) 
.def_117 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not .def_117 ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) '}
subs1 ( = countp_1 1 ) 
remove lets from formula
subs2 ( = countp_1 1 ) 
subs1 ( = xp_1 xp_0 ) 
remove lets from formula
subs2 ( = xp_1 xp_0 ) 
subs1 ( not .def_530 ) 
remove lets from formula
subs2 ( not .def_530 ) 
.def_530 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not .def_530 ) '}
subs1 ( and .def_127 ( and .def_123 ( and .def_458 ( and .def_460 ( and .def_462 ( and .def_450 ( and .def_127 ( and .def_49 .def_463 ) ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( and .def_127 ( and .def_123 ( and .def_458 ( and .def_460 ( and .def_462 ( and .def_450 ( and .def_127 ( and .def_49 .def_463 ) ) ) ) ) ) ) ) 
.def_49 
111
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and .def_127 ( and .def_123 ( and .def_458 ( and .def_460 ( and .def_462 ( and .def_450 ( and .def_127 ( and .def_49 .def_463 ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
.def_123 
21
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and .def_127 ( and .def_123 ( and .def_458 ( and .def_460 ( and .def_462 ( and .def_450 ( and .def_127 ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
.def_127 
110
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and .def_458 ( and .def_460 ( and .def_462 ( and .def_450 ( and .def_127 ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and .def_458 ( and .def_460 ( and .def_462 ( and .def_450 ( and .def_127 ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
.def_450 
110
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_458 ( and .def_460 ( and .def_462 ( and .def_450 ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
.def_458 
65
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_458 ( and .def_460 ( and .def_462 ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
.def_460 
156
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and .def_460 ( and .def_462 ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
.def_462 
186
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and .def_462 ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
.def_463 
353
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
subs1 ( and ( not ( and .def_449 ( not .def_47 ) ) ) ( and ( not ( and ( not ( and .def_47 .def_449 ) ) ( or .def_449 ( and ( and ( not ( and .def_53 ( or .def_117 .def_120 ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) 
remove lets from formula
subs2 ( and ( not ( and .def_449 ( not .def_47 ) ) ) ( and ( not ( and ( not ( and .def_47 .def_449 ) ) ( or .def_449 ( and ( and ( not ( and .def_53 ( or .def_117 .def_120 ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) 
.def_47 
77
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
33
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
.def_53 
146
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and .def_449 ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) .def_449 ) ) ( or .def_449 ( and ( and ( not ( and .def_53 ( or .def_117 .def_120 ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
.def_117 
164
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and .def_449 ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) .def_449 ) ) ( or .def_449 ( and ( and ( not ( and ( = xp_1 1 ) ( or .def_117 .def_120 ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
.def_120 
180
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and .def_449 ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) .def_449 ) ) ( or .def_449 ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) .def_120 ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
.def_449 
113
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and .def_449 ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) .def_449 ) ) ( or .def_449 ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
95
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and .def_449 ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) .def_449 ) ) ( or .def_449 ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
18
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and .def_449 ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) .def_449 ) ) ( or .def_449 ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
.def_450 
445
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
.def_520 
551
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
.def_522 
606
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and .def_531 ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) .def_522 ) ) ) ) ) ) '}
405
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and .def_531 ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) .def_522 ) ) ) ) ) ) '}
.def_531 
794
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) .def_531 ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and .def_531 ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
674
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) .def_531 ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and .def_531 ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
subs1 ( = xp_1 8 ) 
remove lets from formula
subs2 ( = xp_1 8 ) 
subs1 ( = xp_1 8 ) 
remove lets from formula
subs2 ( = xp_1 8 ) 
subs1 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
subs1 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
subs1 ( = xp_1 1 ) 
remove lets from formula
subs2 ( = xp_1 1 ) 
subs1 ( = xp_0 1009 ) 
remove lets from formula
subs2 ( = xp_0 1009 ) 
subs1 ( = xp_0 383 ) 
remove lets from formula
subs2 ( = xp_0 383 ) 
subs1 ( not ( and .def_462 ( and .def_127 ( and .def_123 ( and .def_463 ( and .def_127 ( and .def_450 .def_463 ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_462 ( and .def_127 ( and .def_123 ( and .def_463 ( and .def_127 ( and .def_450 .def_463 ) ) ) ) ) ) ) 
.def_123 
42
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and .def_462 ( and .def_127 ( and .def_123 ( and .def_463 ( and .def_127 ( and .def_450 .def_463 ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_127 
86
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and .def_462 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and .def_463 ( and .def_127 ( and .def_450 .def_463 ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
27
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and .def_462 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and .def_463 ( and .def_127 ( and .def_450 .def_463 ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_450 
131
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and .def_462 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_463 ( and ( not ( = xp_0 1009 ) ) ( and .def_450 .def_463 ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_462 
12
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and .def_462 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_463 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) .def_463 ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_463 
230
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_463 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) .def_463 ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
100
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_463 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) .def_463 ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( not .def_530 ) 
remove lets from formula
subs2 ( not .def_530 ) 
.def_530 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not .def_530 ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( not .def_449 ) 
remove lets from formula
subs2 ( not .def_449 ) 
.def_449 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not .def_449 ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( not .def_530 ) 
remove lets from formula
subs2 ( not .def_530 ) 
.def_530 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not .def_530 ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( and .def_123 .def_127 ) 
remove lets from formula
subs2 ( and .def_123 .def_127 ) 
.def_123 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and .def_123 .def_127 ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_127 
29
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) .def_127 ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( not ( and .def_462 ( and .def_127 ( and .def_123 ( and .def_463 ( and .def_127 ( and .def_450 .def_463 ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_462 ( and .def_127 ( and .def_123 ( and .def_463 ( and .def_127 ( and .def_450 .def_463 ) ) ) ) ) ) ) 
.def_123 
42
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and .def_462 ( and .def_127 ( and .def_123 ( and .def_463 ( and .def_127 ( and .def_450 .def_463 ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_127 
86
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and .def_462 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and .def_463 ( and .def_127 ( and .def_450 .def_463 ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
27
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and .def_462 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and .def_463 ( and .def_127 ( and .def_450 .def_463 ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_450 
131
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and .def_462 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_463 ( and ( not ( = xp_0 1009 ) ) ( and .def_450 .def_463 ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_462 
12
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and .def_462 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_463 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) .def_463 ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_463 
230
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_463 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) .def_463 ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
100
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_463 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) .def_463 ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( and ( not ( and .def_449 ( not .def_47 ) ) ) ( and ( not ( and ( not ( and .def_47 .def_449 ) ) ( or .def_449 ( and ( and ( not ( and .def_53 ( or .def_117 .def_120 ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) 
remove lets from formula
subs2 ( and ( not ( and .def_449 ( not .def_47 ) ) ) ( and ( not ( and ( not ( and .def_47 .def_449 ) ) ( or .def_449 ( and ( and ( not ( and .def_53 ( or .def_117 .def_120 ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) 
.def_47 
77
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
33
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_53 
146
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and .def_449 ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) .def_449 ) ) ( or .def_449 ( and ( and ( not ( and .def_53 ( or .def_117 .def_120 ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
.def_117 
164
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and .def_449 ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) .def_449 ) ) ( or .def_449 ( and ( and ( not ( and ( = xp_1 1 ) ( or .def_117 .def_120 ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
.def_120 
180
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and .def_449 ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) .def_449 ) ) ( or .def_449 ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) .def_120 ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
.def_449 
113
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and .def_449 ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) .def_449 ) ) ( or .def_449 ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
95
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and .def_449 ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) .def_449 ) ) ( or .def_449 ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
18
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and .def_449 ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) .def_449 ) ) ( or .def_449 ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
.def_450 
445
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
.def_520 
551
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
.def_522 
606
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and .def_531 ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) .def_522 ) ) ) ) ) ) '}
405
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and .def_531 ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) .def_522 ) ) ) ) ) ) '}
.def_531 
794
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) .def_531 ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and .def_531 ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
674
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) .def_531 ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and .def_531 ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( and ( not ( and .def_449 ( not .def_47 ) ) ) ( and ( not ( and ( not ( and .def_47 .def_449 ) ) ( or .def_449 ( and ( and ( not ( and .def_53 ( or .def_117 .def_120 ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) 
remove lets from formula
subs2 ( and ( not ( and .def_449 ( not .def_47 ) ) ) ( and ( not ( and ( not ( and .def_47 .def_449 ) ) ( or .def_449 ( and ( and ( not ( and .def_53 ( or .def_117 .def_120 ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) 
.def_47 
77
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
33
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_53 
146
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and .def_449 ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) .def_449 ) ) ( or .def_449 ( and ( and ( not ( and .def_53 ( or .def_117 .def_120 ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
.def_117 
164
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and .def_449 ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) .def_449 ) ) ( or .def_449 ( and ( and ( not ( and ( = xp_1 1 ) ( or .def_117 .def_120 ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
.def_120 
180
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and .def_449 ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) .def_449 ) ) ( or .def_449 ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) .def_120 ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
.def_449 
113
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and .def_449 ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) .def_449 ) ) ( or .def_449 ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
95
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and .def_449 ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) .def_449 ) ) ( or .def_449 ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
18
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and .def_449 ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) .def_449 ) ) ( or .def_449 ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
.def_450 
445
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and .def_450 ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
.def_520 
551
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and .def_531 ( and .def_520 .def_522 ) ) ) ) ) ) '}
.def_522 
606
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and .def_531 ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) .def_522 ) ) ) ) ) ) '}
405
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) .def_522 ) .def_531 ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and .def_531 ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) .def_522 ) ) ) ) ) ) '}
.def_531 
794
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) .def_531 ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and .def_531 ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
674
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) .def_531 ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and .def_531 ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
subs1 ( = xp_1 8 ) 
remove lets from formula
subs2 ( = xp_1 8 ) 
subs1 ( and .def_462 ( and .def_49 .def_460 ) ) 
remove lets from formula
subs2 ( and .def_462 ( and .def_49 .def_460 ) ) 
.def_49 
21
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and .def_462 ( and .def_49 .def_460 ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_460 
38
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and .def_462 ( and ( = countp_1 1 ) .def_460 ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_462 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and .def_462 ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( not .def_449 ) 
remove lets from formula
subs2 ( not .def_449 ) 
.def_449 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not .def_449 ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( and .def_127 ( and .def_123 ( and .def_458 ( and .def_460 ( and .def_462 ( and .def_450 ( and .def_127 ( and .def_49 .def_463 ) ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( and .def_127 ( and .def_123 ( and .def_458 ( and .def_460 ( and .def_462 ( and .def_450 ( and .def_127 ( and .def_49 .def_463 ) ) ) ) ) ) ) ) 
.def_49 
111
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and .def_127 ( and .def_123 ( and .def_458 ( and .def_460 ( and .def_462 ( and .def_450 ( and .def_127 ( and .def_49 .def_463 ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_123 
21
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and .def_127 ( and .def_123 ( and .def_458 ( and .def_460 ( and .def_462 ( and .def_450 ( and .def_127 ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_127 
110
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and .def_458 ( and .def_460 ( and .def_462 ( and .def_450 ( and .def_127 ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and .def_458 ( and .def_460 ( and .def_462 ( and .def_450 ( and .def_127 ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_450 
110
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_458 ( and .def_460 ( and .def_462 ( and .def_450 ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_458 
65
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_458 ( and .def_460 ( and .def_462 ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_460 
156
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and .def_460 ( and .def_462 ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_462 
186
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and .def_462 ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_463 
353
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) .def_463 ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( = xp_1 1 ) 
remove lets from formula
subs2 ( = xp_1 1 ) 
subs1 ( and .def_462 ( and .def_49 .def_460 ) ) 
remove lets from formula
subs2 ( and .def_462 ( and .def_49 .def_460 ) ) 
.def_49 
21
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and .def_462 ( and .def_49 .def_460 ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_460 
38
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and .def_462 ( and ( = countp_1 1 ) .def_460 ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_462 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and .def_462 ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( and .def_123 .def_127 ) 
remove lets from formula
subs2 ( and .def_123 .def_127 ) 
.def_123 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and .def_123 .def_127 ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_127 
29
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) .def_127 ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( not .def_117 ) 
remove lets from formula
subs2 ( not .def_117 ) 
.def_117 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not .def_117 ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) 
subs1 ( not ( = xp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 1009 ) ) 
subs1 ( = countp_1 1 ) 
remove lets from formula
subs2 ( = countp_1 1 ) 
subs1 ( not ( = xp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 383 ) ) 
subs1 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
subs1 ( not ( = xp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 1009 ) ) 
subs1 ( = xp_1 8 ) 
remove lets from formula
subs2 ( = xp_1 8 ) 
subs1 ( not ( = xp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 383 ) ) 
aux_vars_subs_dict  {'.def_47 ': '( = xp_1 8 ) ', '.def_49 ': '( = countp_1 1 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_120 ': '( = xp_0 383 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_460 ': '( not ( = xp_1 1009 ) ) ', '.def_462 ': '( not ( = xp_1 383 ) ) ', '.def_463 ': '( = xp_1 xp_0 ) ', '.def_493 ': '( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ', '.def_520 ': '( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ', '.def_522 ': '( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_530 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_531 ': '( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_543 ': '( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) '}
{19: 30, 9: 32, 7: 34, 54: 69, 44: 71, 42: 73, 93: 104, 83: 106, 81: 108, 129: 140, 118: 142, 116: 144, 165: 179, 154: 181, 152: 183, 204: 217, 193: 219, 191: 221, 242: 257, 231: 259, 229: 261, 282: 297, 271: 299, 269: 301, 341: 347, 362: 370, 372: 387, 358: 389, 349: 391, 337: 393, 328: 395, 322: 397, 311: 399, 309: 401, 422: 437, 411: 439, 409: 441, 487: 493, 508: 516, 518: 533, 504: 535, 495: 537, 483: 539, 474: 541, 468: 543, 462: 545, 451: 547, 449: 549, 576: 590, 570: 592, 559: 594, 557: 596, 623: 636, 617: 638, 606: 640, 604: 642, 663: 677, 652: 679, 650: 681, 717: 740, 702: 742, 691: 744, 689: 746, 767: 791, 756: 793, 754: 795, 897: 921, 882: 923, 867: 925, 852: 927, 837: 929, 822: 931, 816: 933, 805: 935, 803: 937, 1063: 1086, 1048: 1088, 1033: 1090, 1018: 1092, 1003: 1094, 988: 1096, 973: 1098, 958: 1100, 947: 1102, 945: 1104, 1125: 1140, 1114: 1142, 1112: 1144, 1192: 1206, 1177: 1208, 1171: 1210, 1236: 1259, 1230: 1261, 1309: 1332, 1295: 1334, 1289: 1336, 1283: 1347, 1277: 1358, 1263: 1360, 1224: 1362, 1218: 1364, 1402: 1426, 1387: 1428, 1372: 1430, 1366: 1432, 1212: 1434, 1165: 1436, 1154: 1438, 1152: 1440, 1469: 1484, 1463: 1486, 1494: 1505, 1578: 1601, 1563: 1603, 1640: 1663, 1737: 1760, 1722: 1762, 1707: 1764, 1701: 1766, 1686: 1768, 1671: 1770, 1665: 1772, 1634: 1774, 1620: 1776, 1605: 1778, 1558: 1780, 1543: 1782, 1826: 1849, 1811: 1851, 1805: 1853, 1790: 1855, 1784: 1857, 1537: 1859, 1522: 1861, 1507: 1863, 1488: 1865, 1457: 1867, 1442: 1869, 1146: 1871, 1106: 1873, 939: 1875, 797: 1877, 748: 1879, 683: 1881, 644: 1883, 598: 1885, 551: 1887, 443: 1889, 403: 1891, 303: 1893, 263: 1895, 223: 1897, 185: 1899, 146: 1901, 110: 1903, 75: 1905, 36: 1907, 1: 1909}
{20: 35, 10: 37, 8: 39, 59: 70, 49: 72, 47: 74, 95: 106, 84: 108, 82: 110, 131: 145, 120: 147, 118: 149, 170: 183, 159: 185, 157: 187, 208: 223, 197: 225, 195: 227, 248: 263, 237: 265, 235: 267, 307: 313, 328: 336, 338: 353, 324: 355, 315: 357, 303: 359, 294: 361, 288: 363, 277: 365, 275: 367, 388: 403, 377: 405, 375: 407, 453: 459, 474: 482, 484: 499, 470: 501, 461: 503, 449: 505, 440: 507, 434: 509, 428: 511, 417: 513, 415: 515, 542: 556, 536: 558, 525: 560, 523: 562, 589: 602, 583: 604, 572: 606, 570: 608, 629: 643, 618: 645, 616: 647, 683: 706, 668: 708, 657: 710, 655: 712, 733: 757, 722: 759, 720: 761, 863: 887, 848: 889, 833: 891, 818: 893, 803: 895, 788: 897, 782: 899, 771: 901, 769: 903, 1029: 1052, 1014: 1054, 999: 1056, 984: 1058, 969: 1060, 954: 1062, 939: 1064, 924: 1066, 913: 1068, 911: 1070, 1091: 1106, 1080: 1108, 1078: 1110, 1158: 1172, 1143: 1174, 1137: 1176, 1202: 1225, 1196: 1227, 1275: 1298, 1261: 1300, 1255: 1302, 1249: 1313, 1243: 1324, 1229: 1326, 1190: 1328, 1184: 1330, 1368: 1392, 1353: 1394, 1338: 1396, 1332: 1398, 1178: 1400, 1131: 1402, 1120: 1404, 1118: 1406, 1435: 1450, 1429: 1452, 1460: 1471, 1544: 1567, 1529: 1569, 1606: 1629, 1703: 1726, 1688: 1728, 1673: 1730, 1667: 1732, 1652: 1734, 1637: 1736, 1631: 1738, 1600: 1740, 1586: 1742, 1571: 1744, 1524: 1746, 1509: 1748, 1792: 1815, 1777: 1817, 1771: 1819, 1756: 1821, 1750: 1823, 1503: 1825, 1488: 1827, 1473: 1829, 1454: 1831, 1423: 1833, 1408: 1835, 1112: 1837, 1072: 1839, 905: 1841, 763: 1843, 714: 1845, 649: 1847, 610: 1849, 564: 1851, 517: 1853, 409: 1855, 369: 1857, 269: 1859, 229: 1861, 189: 1863, 151: 1865, 112: 1867, 76: 1869, 41: 1871, 2: 1873}
{21: 32, 11: 34, 9: 36, 57: 68, 46: 70, 44: 72, 93: 107, 82: 109, 80: 111, 132: 145, 121: 147, 119: 149, 170: 185, 159: 187, 157: 189, 210: 225, 199: 227, 197: 229, 269: 275, 290: 298, 300: 315, 286: 317, 277: 319, 265: 321, 256: 323, 250: 325, 239: 327, 237: 329, 350: 365, 339: 367, 337: 369, 415: 421, 436: 444, 446: 461, 432: 463, 423: 465, 411: 467, 402: 469, 396: 471, 390: 473, 379: 475, 377: 477, 504: 518, 498: 520, 487: 522, 485: 524, 551: 564, 545: 566, 534: 568, 532: 570, 591: 605, 580: 607, 578: 609, 645: 668, 630: 670, 619: 672, 617: 674, 695: 719, 684: 721, 682: 723, 825: 849, 810: 851, 795: 853, 780: 855, 765: 857, 750: 859, 744: 861, 733: 863, 731: 865, 991: 1014, 976: 1016, 961: 1018, 946: 1020, 931: 1022, 916: 1024, 901: 1026, 886: 1028, 875: 1030, 873: 1032, 1053: 1068, 1042: 1070, 1040: 1072, 1120: 1134, 1105: 1136, 1099: 1138, 1164: 1187, 1158: 1189, 1237: 1260, 1223: 1262, 1217: 1264, 1211: 1275, 1205: 1286, 1191: 1288, 1152: 1290, 1146: 1292, 1330: 1354, 1315: 1356, 1300: 1358, 1294: 1360, 1140: 1362, 1093: 1364, 1082: 1366, 1080: 1368, 1397: 1412, 1391: 1414, 1422: 1433, 1506: 1529, 1491: 1531, 1568: 1591, 1665: 1688, 1650: 1690, 1635: 1692, 1629: 1694, 1614: 1696, 1599: 1698, 1593: 1700, 1562: 1702, 1548: 1704, 1533: 1706, 1486: 1708, 1471: 1710, 1754: 1777, 1739: 1779, 1733: 1781, 1718: 1783, 1712: 1785, 1465: 1787, 1450: 1789, 1435: 1791, 1416: 1793, 1385: 1795, 1370: 1797, 1074: 1799, 1034: 1801, 867: 1803, 725: 1805, 676: 1807, 611: 1809, 572: 1811, 526: 1813, 479: 1815, 371: 1817, 331: 1819, 231: 1821, 191: 1823, 151: 1825, 113: 1827, 74: 1829, 38: 1831, 3: 1833}
{23: 34, 12: 36, 10: 38, 59: 73, 48: 75, 46: 77, 98: 111, 87: 113, 85: 115, 136: 151, 125: 153, 123: 155, 176: 191, 165: 193, 163: 195, 235: 241, 256: 264, 266: 281, 252: 283, 243: 285, 231: 287, 222: 289, 216: 291, 205: 293, 203: 295, 316: 331, 305: 333, 303: 335, 381: 387, 402: 410, 412: 427, 398: 429, 389: 431, 377: 433, 368: 435, 362: 437, 356: 439, 345: 441, 343: 443, 470: 484, 464: 486, 453: 488, 451: 490, 517: 530, 511: 532, 500: 534, 498: 536, 557: 571, 546: 573, 544: 575, 611: 634, 596: 636, 585: 638, 583: 640, 661: 685, 650: 687, 648: 689, 791: 815, 776: 817, 761: 819, 746: 821, 731: 823, 716: 825, 710: 827, 699: 829, 697: 831, 957: 980, 942: 982, 927: 984, 912: 986, 897: 988, 882: 990, 867: 992, 852: 994, 841: 996, 839: 998, 1019: 1034, 1008: 1036, 1006: 1038, 1086: 1100, 1071: 1102, 1065: 1104, 1130: 1153, 1124: 1155, 1203: 1226, 1189: 1228, 1183: 1230, 1177: 1241, 1171: 1252, 1157: 1254, 1118: 1256, 1112: 1258, 1296: 1320, 1281: 1322, 1266: 1324, 1260: 1326, 1106: 1328, 1059: 1330, 1048: 1332, 1046: 1334, 1363: 1378, 1357: 1380, 1388: 1399, 1472: 1495, 1457: 1497, 1534: 1557, 1631: 1654, 1616: 1656, 1601: 1658, 1595: 1660, 1580: 1662, 1565: 1664, 1559: 1666, 1528: 1668, 1514: 1670, 1499: 1672, 1452: 1674, 1437: 1676, 1720: 1743, 1705: 1745, 1699: 1747, 1684: 1749, 1678: 1751, 1431: 1753, 1416: 1755, 1401: 1757, 1382: 1759, 1351: 1761, 1336: 1763, 1040: 1765, 1000: 1767, 833: 1769, 691: 1771, 642: 1773, 577: 1775, 538: 1777, 492: 1779, 445: 1781, 337: 1783, 297: 1785, 197: 1787, 157: 1789, 117: 1791, 79: 1793, 40: 1795, 4: 1797}
{24: 38, 13: 40, 11: 42, 63: 76, 52: 78, 50: 80, 101: 116, 90: 118, 88: 120, 141: 156, 130: 158, 128: 160, 200: 206, 221: 229, 231: 246, 217: 248, 208: 250, 196: 252, 187: 254, 181: 256, 170: 258, 168: 260, 281: 296, 270: 298, 268: 300, 346: 352, 367: 375, 377: 392, 363: 394, 354: 396, 342: 398, 333: 400, 327: 402, 321: 404, 310: 406, 308: 408, 435: 449, 429: 451, 418: 453, 416: 455, 482: 495, 476: 497, 465: 499, 463: 501, 522: 536, 511: 538, 509: 540, 576: 599, 561: 601, 550: 603, 548: 605, 626: 650, 615: 652, 613: 654, 756: 780, 741: 782, 726: 784, 711: 786, 696: 788, 681: 790, 675: 792, 664: 794, 662: 796, 922: 945, 907: 947, 892: 949, 877: 951, 862: 953, 847: 955, 832: 957, 817: 959, 806: 961, 804: 963, 984: 999, 973: 1001, 971: 1003, 1051: 1065, 1036: 1067, 1030: 1069, 1095: 1118, 1089: 1120, 1168: 1191, 1154: 1193, 1148: 1195, 1142: 1206, 1136: 1217, 1122: 1219, 1083: 1221, 1077: 1223, 1261: 1285, 1246: 1287, 1231: 1289, 1225: 1291, 1071: 1293, 1024: 1295, 1013: 1297, 1011: 1299, 1328: 1343, 1322: 1345, 1353: 1364, 1437: 1460, 1422: 1462, 1499: 1522, 1596: 1619, 1581: 1621, 1566: 1623, 1560: 1625, 1545: 1627, 1530: 1629, 1524: 1631, 1493: 1633, 1479: 1635, 1464: 1637, 1417: 1639, 1402: 1641, 1685: 1708, 1670: 1710, 1664: 1712, 1649: 1714, 1643: 1716, 1396: 1718, 1381: 1720, 1366: 1722, 1347: 1724, 1316: 1726, 1301: 1728, 1005: 1730, 965: 1732, 798: 1734, 656: 1736, 607: 1738, 542: 1740, 503: 1742, 457: 1744, 410: 1746, 302: 1748, 262: 1750, 162: 1752, 122: 1754, 82: 1756, 44: 1758, 5: 1760}
{25: 38, 14: 40, 12: 42, 63: 78, 52: 80, 50: 82, 103: 118, 92: 120, 90: 122, 162: 168, 183: 191, 193: 208, 179: 210, 170: 212, 158: 214, 149: 216, 143: 218, 132: 220, 130: 222, 243: 258, 232: 260, 230: 262, 308: 314, 329: 337, 339: 354, 325: 356, 316: 358, 304: 360, 295: 362, 289: 364, 283: 366, 272: 368, 270: 370, 397: 411, 391: 413, 380: 415, 378: 417, 444: 457, 438: 459, 427: 461, 425: 463, 484: 498, 473: 500, 471: 502, 538: 561, 523: 563, 512: 565, 510: 567, 588: 612, 577: 614, 575: 616, 718: 742, 703: 744, 688: 746, 673: 748, 658: 750, 643: 752, 637: 754, 626: 756, 624: 758, 884: 907, 869: 909, 854: 911, 839: 913, 824: 915, 809: 917, 794: 919, 779: 921, 768: 923, 766: 925, 946: 961, 935: 963, 933: 965, 1013: 1027, 998: 1029, 992: 1031, 1057: 1080, 1051: 1082, 1130: 1153, 1116: 1155, 1110: 1157, 1104: 1168, 1098: 1179, 1084: 1181, 1045: 1183, 1039: 1185, 1223: 1247, 1208: 1249, 1193: 1251, 1187: 1253, 1033: 1255, 986: 1257, 975: 1259, 973: 1261, 1290: 1305, 1284: 1307, 1315: 1326, 1399: 1422, 1384: 1424, 1461: 1484, 1558: 1581, 1543: 1583, 1528: 1585, 1522: 1587, 1507: 1589, 1492: 1591, 1486: 1593, 1455: 1595, 1441: 1597, 1426: 1599, 1379: 1601, 1364: 1603, 1647: 1670, 1632: 1672, 1626: 1674, 1611: 1676, 1605: 1678, 1358: 1680, 1343: 1682, 1328: 1684, 1309: 1686, 1278: 1688, 1263: 1690, 967: 1692, 927: 1694, 760: 1696, 618: 1698, 569: 1700, 504: 1702, 465: 1704, 419: 1706, 372: 1708, 264: 1710, 224: 1712, 124: 1714, 84: 1716, 44: 1718, 6: 1720}
{26: 41, 15: 43, 13: 45, 66: 81, 55: 83, 53: 85, 125: 131, 146: 154, 156: 171, 142: 173, 133: 175, 121: 177, 112: 179, 106: 181, 95: 183, 93: 185, 206: 221, 195: 223, 193: 225, 271: 277, 292: 300, 302: 317, 288: 319, 279: 321, 267: 323, 258: 325, 252: 327, 246: 329, 235: 331, 233: 333, 360: 374, 354: 376, 343: 378, 341: 380, 407: 420, 401: 422, 390: 424, 388: 426, 447: 461, 436: 463, 434: 465, 501: 524, 486: 526, 475: 528, 473: 530, 551: 575, 540: 577, 538: 579, 681: 705, 666: 707, 651: 709, 636: 711, 621: 713, 606: 715, 600: 717, 589: 719, 587: 721, 847: 870, 832: 872, 817: 874, 802: 876, 787: 878, 772: 880, 757: 882, 742: 884, 731: 886, 729: 888, 909: 924, 898: 926, 896: 928, 976: 990, 961: 992, 955: 994, 1020: 1043, 1014: 1045, 1093: 1116, 1079: 1118, 1073: 1120, 1067: 1131, 1061: 1142, 1047: 1144, 1008: 1146, 1002: 1148, 1186: 1210, 1171: 1212, 1156: 1214, 1150: 1216, 996: 1218, 949: 1220, 938: 1222, 936: 1224, 1253: 1268, 1247: 1270, 1278: 1289, 1362: 1385, 1347: 1387, 1424: 1447, 1521: 1544, 1506: 1546, 1491: 1548, 1485: 1550, 1470: 1552, 1455: 1554, 1449: 1556, 1418: 1558, 1404: 1560, 1389: 1562, 1342: 1564, 1327: 1566, 1610: 1633, 1595: 1635, 1589: 1637, 1574: 1639, 1568: 1641, 1321: 1643, 1306: 1645, 1291: 1647, 1272: 1649, 1241: 1651, 1226: 1653, 930: 1655, 890: 1657, 723: 1659, 581: 1661, 532: 1663, 467: 1665, 428: 1667, 382: 1669, 335: 1671, 227: 1673, 187: 1675, 87: 1677, 47: 1679, 7: 1681}
{27: 42, 16: 44, 14: 46, 86: 92, 107: 115, 117: 132, 103: 134, 94: 136, 82: 138, 73: 140, 67: 142, 56: 144, 54: 146, 167: 182, 156: 184, 154: 186, 232: 238, 253: 261, 263: 278, 249: 280, 240: 282, 228: 284, 219: 286, 213: 288, 207: 290, 196: 292, 194: 294, 321: 335, 315: 337, 304: 339, 302: 341, 368: 381, 362: 383, 351: 385, 349: 387, 408: 422, 397: 424, 395: 426, 462: 485, 447: 487, 436: 489, 434: 491, 512: 536, 501: 538, 499: 540, 642: 666, 627: 668, 612: 670, 597: 672, 582: 674, 567: 676, 561: 678, 550: 680, 548: 682, 808: 831, 793: 833, 778: 835, 763: 837, 748: 839, 733: 841, 718: 843, 703: 845, 692: 847, 690: 849, 870: 885, 859: 887, 857: 889, 937: 951, 922: 953, 916: 955, 981: 1004, 975: 1006, 1054: 1077, 1040: 1079, 1034: 1081, 1028: 1092, 1022: 1103, 1008: 1105, 969: 1107, 963: 1109, 1147: 1171, 1132: 1173, 1117: 1175, 1111: 1177, 957: 1179, 910: 1181, 899: 1183, 897: 1185, 1214: 1229, 1208: 1231, 1239: 1250, 1323: 1346, 1308: 1348, 1385: 1408, 1482: 1505, 1467: 1507, 1452: 1509, 1446: 1511, 1431: 1513, 1416: 1515, 1410: 1517, 1379: 1519, 1365: 1521, 1350: 1523, 1303: 1525, 1288: 1527, 1571: 1594, 1556: 1596, 1550: 1598, 1535: 1600, 1529: 1602, 1282: 1604, 1267: 1606, 1252: 1608, 1233: 1610, 1202: 1612, 1187: 1614, 891: 1616, 851: 1618, 684: 1620, 542: 1622, 493: 1624, 428: 1626, 389: 1628, 343: 1630, 296: 1632, 188: 1634, 148: 1636, 48: 1638, 8: 1640}
{47: 53, 68: 76, 78: 93, 64: 95, 55: 97, 43: 99, 34: 101, 28: 103, 17: 105, 15: 107, 128: 143, 117: 145, 115: 147, 193: 199, 214: 222, 224: 239, 210: 241, 201: 243, 189: 245, 180: 247, 174: 249, 168: 251, 157: 253, 155: 255, 282: 296, 276: 298, 265: 300, 263: 302, 329: 342, 323: 344, 312: 346, 310: 348, 369: 383, 358: 385, 356: 387, 423: 446, 408: 448, 397: 450, 395: 452, 473: 497, 462: 499, 460: 501, 603: 627, 588: 629, 573: 631, 558: 633, 543: 635, 528: 637, 522: 639, 511: 641, 509: 643, 769: 792, 754: 794, 739: 796, 724: 798, 709: 800, 694: 802, 679: 804, 664: 806, 653: 808, 651: 810, 831: 846, 820: 848, 818: 850, 898: 912, 883: 914, 877: 916, 942: 965, 936: 967, 1015: 1038, 1001: 1040, 995: 1042, 989: 1053, 983: 1064, 969: 1066, 930: 1068, 924: 1070, 1108: 1132, 1093: 1134, 1078: 1136, 1072: 1138, 918: 1140, 871: 1142, 860: 1144, 858: 1146, 1175: 1190, 1169: 1192, 1200: 1211, 1284: 1307, 1269: 1309, 1346: 1369, 1443: 1466, 1428: 1468, 1413: 1470, 1407: 1472, 1392: 1474, 1377: 1476, 1371: 1478, 1340: 1480, 1326: 1482, 1311: 1484, 1264: 1486, 1249: 1488, 1532: 1555, 1517: 1557, 1511: 1559, 1496: 1561, 1490: 1563, 1243: 1565, 1228: 1567, 1213: 1569, 1194: 1571, 1163: 1573, 1148: 1575, 852: 1577, 812: 1579, 645: 1581, 503: 1583, 454: 1585, 389: 1587, 350: 1589, 304: 1591, 257: 1593, 149: 1595, 109: 1597, 9: 1599}
{29: 44, 18: 46, 16: 48, 94: 100, 115: 123, 125: 140, 111: 142, 102: 144, 90: 146, 81: 148, 75: 150, 69: 152, 58: 154, 56: 156, 183: 197, 177: 199, 166: 201, 164: 203, 230: 243, 224: 245, 213: 247, 211: 249, 270: 284, 259: 286, 257: 288, 324: 347, 309: 349, 298: 351, 296: 353, 374: 398, 363: 400, 361: 402, 504: 528, 489: 530, 474: 532, 459: 534, 444: 536, 429: 538, 423: 540, 412: 542, 410: 544, 670: 693, 655: 695, 640: 697, 625: 699, 610: 701, 595: 703, 580: 705, 565: 707, 554: 709, 552: 711, 732: 747, 721: 749, 719: 751, 799: 813, 784: 815, 778: 817, 843: 866, 837: 868, 916: 939, 902: 941, 896: 943, 890: 954, 884: 965, 870: 967, 831: 969, 825: 971, 1009: 1033, 994: 1035, 979: 1037, 973: 1039, 819: 1041, 772: 1043, 761: 1045, 759: 1047, 1076: 1091, 1070: 1093, 1101: 1112, 1185: 1208, 1170: 1210, 1247: 1270, 1344: 1367, 1329: 1369, 1314: 1371, 1308: 1373, 1293: 1375, 1278: 1377, 1272: 1379, 1241: 1381, 1227: 1383, 1212: 1385, 1165: 1387, 1150: 1389, 1433: 1456, 1418: 1458, 1412: 1460, 1397: 1462, 1391: 1464, 1144: 1466, 1129: 1468, 1114: 1470, 1095: 1472, 1064: 1474, 1049: 1476, 753: 1478, 713: 1480, 546: 1482, 404: 1484, 355: 1486, 290: 1488, 251: 1490, 205: 1492, 158: 1494, 50: 1496, 10: 1498}
{55: 61, 76: 84, 86: 101, 72: 103, 63: 105, 51: 107, 42: 109, 36: 111, 30: 113, 19: 115, 17: 117, 144: 158, 138: 160, 127: 162, 125: 164, 191: 204, 185: 206, 174: 208, 172: 210, 231: 245, 220: 247, 218: 249, 285: 308, 270: 310, 259: 312, 257: 314, 335: 359, 324: 361, 322: 363, 465: 489, 450: 491, 435: 493, 420: 495, 405: 497, 390: 499, 384: 501, 373: 503, 371: 505, 631: 654, 616: 656, 601: 658, 586: 660, 571: 662, 556: 664, 541: 666, 526: 668, 515: 670, 513: 672, 693: 708, 682: 710, 680: 712, 760: 774, 745: 776, 739: 778, 804: 827, 798: 829, 877: 900, 863: 902, 857: 904, 851: 915, 845: 926, 831: 928, 792: 930, 786: 932, 970: 994, 955: 996, 940: 998, 934: 1000, 780: 1002, 733: 1004, 722: 1006, 720: 1008, 1037: 1052, 1031: 1054, 1062: 1073, 1146: 1169, 1131: 1171, 1208: 1231, 1305: 1328, 1290: 1330, 1275: 1332, 1269: 1334, 1254: 1336, 1239: 1338, 1233: 1340, 1202: 1342, 1188: 1344, 1173: 1346, 1126: 1348, 1111: 1350, 1394: 1417, 1379: 1419, 1373: 1421, 1358: 1423, 1352: 1425, 1105: 1427, 1090: 1429, 1075: 1431, 1056: 1433, 1025: 1435, 1010: 1437, 714: 1439, 674: 1441, 507: 1443, 365: 1445, 316: 1447, 251: 1449, 212: 1451, 166: 1453, 119: 1455, 11: 1457}
{37: 51, 31: 53, 20: 55, 18: 57, 84: 97, 78: 99, 67: 101, 65: 103, 124: 138, 113: 140, 111: 142, 178: 201, 163: 203, 152: 205, 150: 207, 228: 252, 217: 254, 215: 256, 358: 382, 343: 384, 328: 386, 313: 388, 298: 390, 283: 392, 277: 394, 266: 396, 264: 398, 524: 547, 509: 549, 494: 551, 479: 553, 464: 555, 449: 557, 434: 559, 419: 561, 408: 563, 406: 565, 586: 601, 575: 603, 573: 605, 653: 667, 638: 669, 632: 671, 697: 720, 691: 722, 770: 793, 756: 795, 750: 797, 744: 808, 738: 819, 724: 821, 685: 823, 679: 825, 863: 887, 848: 889, 833: 891, 827: 893, 673: 895, 626: 897, 615: 899, 613: 901, 930: 945, 924: 947, 955: 966, 1039: 1062, 1024: 1064, 1101: 1124, 1198: 1221, 1183: 1223, 1168: 1225, 1162: 1227, 1147: 1229, 1132: 1231, 1126: 1233, 1095: 1235, 1081: 1237, 1066: 1239, 1019: 1241, 1004: 1243, 1287: 1310, 1272: 1312, 1266: 1314, 1251: 1316, 1245: 1318, 998: 1320, 983: 1322, 968: 1324, 949: 1326, 918: 1328, 903: 1330, 607: 1332, 567: 1334, 400: 1336, 258: 1338, 209: 1340, 144: 1342, 105: 1344, 59: 1346, 12: 1348}
{38: 51, 32: 53, 21: 55, 19: 57, 78: 92, 67: 94, 65: 96, 132: 155, 117: 157, 106: 159, 104: 161, 182: 206, 171: 208, 169: 210, 312: 336, 297: 338, 282: 340, 267: 342, 252: 344, 237: 346, 231: 348, 220: 350, 218: 352, 478: 501, 463: 503, 448: 505, 433: 507, 418: 509, 403: 511, 388: 513, 373: 515, 362: 517, 360: 519, 540: 555, 529: 557, 527: 559, 607: 621, 592: 623, 586: 625, 651: 674, 645: 676, 724: 747, 710: 749, 704: 751, 698: 762, 692: 773, 678: 775, 639: 777, 633: 779, 817: 841, 802: 843, 787: 845, 781: 847, 627: 849, 580: 851, 569: 853, 567: 855, 884: 899, 878: 901, 909: 920, 993: 1016, 978: 1018, 1055: 1078, 1152: 1175, 1137: 1177, 1122: 1179, 1116: 1181, 1101: 1183, 1086: 1185, 1080: 1187, 1049: 1189, 1035: 1191, 1020: 1193, 973: 1195, 958: 1197, 1241: 1264, 1226: 1266, 1220: 1268, 1205: 1270, 1199: 1272, 952: 1274, 937: 1276, 922: 1278, 903: 1280, 872: 1282, 857: 1284, 561: 1286, 521: 1288, 354: 1290, 212: 1292, 163: 1294, 98: 1296, 59: 1298, 13: 1300}
{33: 47, 22: 49, 20: 51, 87: 110, 72: 112, 61: 114, 59: 116, 137: 161, 126: 163, 124: 165, 267: 291, 252: 293, 237: 295, 222: 297, 207: 299, 192: 301, 186: 303, 175: 305, 173: 307, 433: 456, 418: 458, 403: 460, 388: 462, 373: 464, 358: 466, 343: 468, 328: 470, 317: 472, 315: 474, 495: 510, 484: 512, 482: 514, 562: 576, 547: 578, 541: 580, 606: 629, 600: 631, 679: 702, 665: 704, 659: 706, 653: 717, 647: 728, 633: 730, 594: 732, 588: 734, 772: 796, 757: 798, 742: 800, 736: 802, 582: 804, 535: 806, 524: 808, 522: 810, 839: 854, 833: 856, 864: 875, 948: 971, 933: 973, 1010: 1033, 1107: 1130, 1092: 1132, 1077: 1134, 1071: 1136, 1056: 1138, 1041: 1140, 1035: 1142, 1004: 1144, 990: 1146, 975: 1148, 928: 1150, 913: 1152, 1196: 1219, 1181: 1221, 1175: 1223, 1160: 1225, 1154: 1227, 907: 1229, 892: 1231, 877: 1233, 858: 1235, 827: 1237, 812: 1239, 516: 1241, 476: 1243, 309: 1245, 167: 1247, 118: 1249, 53: 1251, 14: 1253}
{49: 72, 34: 74, 23: 76, 21: 78, 99: 123, 88: 125, 86: 127, 229: 253, 214: 255, 199: 257, 184: 259, 169: 261, 154: 263, 148: 265, 137: 267, 135: 269, 395: 418, 380: 420, 365: 422, 350: 424, 335: 426, 320: 428, 305: 430, 290: 432, 279: 434, 277: 436, 457: 472, 446: 474, 444: 476, 524: 538, 509: 540, 503: 542, 568: 591, 562: 593, 641: 664, 627: 666, 621: 668, 615: 679, 609: 690, 595: 692, 556: 694, 550: 696, 734: 758, 719: 760, 704: 762, 698: 764, 544: 766, 497: 768, 486: 770, 484: 772, 801: 816, 795: 818, 826: 837, 910: 933, 895: 935, 972: 995, 1069: 1092, 1054: 1094, 1039: 1096, 1033: 1098, 1018: 1100, 1003: 1102, 997: 1104, 966: 1106, 952: 1108, 937: 1110, 890: 1112, 875: 1114, 1158: 1181, 1143: 1183, 1137: 1185, 1122: 1187, 1116: 1189, 869: 1191, 854: 1193, 839: 1195, 820: 1197, 789: 1199, 774: 1201, 478: 1203, 438: 1205, 271: 1207, 129: 1209, 80: 1211, 15: 1213}
{35: 59, 24: 61, 22: 63, 165: 189, 150: 191, 135: 193, 120: 195, 105: 197, 90: 199, 84: 201, 73: 203, 71: 205, 331: 354, 316: 356, 301: 358, 286: 360, 271: 362, 256: 364, 241: 366, 226: 368, 215: 370, 213: 372, 393: 408, 382: 410, 380: 412, 460: 474, 445: 476, 439: 478, 504: 527, 498: 529, 577: 600, 563: 602, 557: 604, 551: 615, 545: 626, 531: 628, 492: 630, 486: 632, 670: 694, 655: 696, 640: 698, 634: 700, 480: 702, 433: 704, 422: 706, 420: 708, 737: 752, 731: 754, 762: 773, 846: 869, 831: 871, 908: 931, 1005: 1028, 990: 1030, 975: 1032, 969: 1034, 954: 1036, 939: 1038, 933: 1040, 902: 1042, 888: 1044, 873: 1046, 826: 1048, 811: 1050, 1094: 1117, 1079: 1119, 1073: 1121, 1058: 1123, 1052: 1125, 805: 1127, 790: 1129, 775: 1131, 756: 1133, 725: 1135, 710: 1137, 414: 1139, 374: 1141, 207: 1143, 65: 1145, 16: 1147}
{117: 141, 102: 143, 87: 145, 72: 147, 57: 149, 42: 151, 36: 153, 25: 155, 23: 157, 283: 306, 268: 308, 253: 310, 238: 312, 223: 314, 208: 316, 193: 318, 178: 320, 167: 322, 165: 324, 345: 360, 334: 362, 332: 364, 412: 426, 397: 428, 391: 430, 456: 479, 450: 481, 529: 552, 515: 554, 509: 556, 503: 567, 497: 578, 483: 580, 444: 582, 438: 584, 622: 646, 607: 648, 592: 650, 586: 652, 432: 654, 385: 656, 374: 658, 372: 660, 689: 704, 683: 706, 714: 725, 798: 821, 783: 823, 860: 883, 957: 980, 942: 982, 927: 984, 921: 986, 906: 988, 891: 990, 885: 992, 854: 994, 840: 996, 825: 998, 778: 1000, 763: 1002, 1046: 1069, 1031: 1071, 1025: 1073, 1010: 1075, 1004: 1077, 757: 1079, 742: 1081, 727: 1083, 708: 1085, 677: 1087, 662: 1089, 366: 1091, 326: 1093, 159: 1095, 17: 1097}
{142: 165, 127: 167, 112: 169, 97: 171, 82: 173, 67: 175, 52: 177, 37: 179, 26: 181, 24: 183, 204: 219, 193: 221, 191: 223, 271: 285, 256: 287, 250: 289, 315: 338, 309: 340, 388: 411, 374: 413, 368: 415, 362: 426, 356: 437, 342: 439, 303: 441, 297: 443, 481: 505, 466: 507, 451: 509, 445: 511, 291: 513, 244: 515, 233: 517, 231: 519, 548: 563, 542: 565, 573: 584, 657: 680, 642: 682, 719: 742, 816: 839, 801: 841, 786: 843, 780: 845, 765: 847, 750: 849, 744: 851, 713: 853, 699: 855, 684: 857, 637: 859, 622: 861, 905: 928, 890: 930, 884: 932, 869: 934, 863: 936, 616: 938, 601: 940, 586: 942, 567: 944, 536: 946, 521: 948, 225: 950, 185: 952, 18: 954}
{38: 53, 27: 55, 25: 57, 105: 119, 90: 121, 84: 123, 149: 172, 143: 174, 222: 245, 208: 247, 202: 249, 196: 260, 190: 271, 176: 273, 137: 275, 131: 277, 315: 339, 300: 341, 285: 343, 279: 345, 125: 347, 78: 349, 67: 351, 65: 353, 382: 397, 376: 399, 407: 418, 491: 514, 476: 516, 553: 576, 650: 673, 635: 675, 620: 677, 614: 679, 599: 681, 584: 683, 578: 685, 547: 687, 533: 689, 518: 691, 471: 693, 456: 695, 739: 762, 724: 764, 718: 766, 703: 768, 697: 770, 450: 772, 435: 774, 420: 776, 401: 778, 370: 780, 355: 782, 59: 784, 19: 786}
{66: 80, 51: 82, 45: 84, 110: 133, 104: 135, 183: 206, 169: 208, 163: 210, 157: 221, 151: 232, 137: 234, 98: 236, 92: 238, 276: 300, 261: 302, 246: 304, 240: 306, 86: 308, 39: 310, 28: 312, 26: 314, 343: 358, 337: 360, 368: 379, 452: 475, 437: 477, 514: 537, 611: 634, 596: 636, 581: 638, 575: 640, 560: 642, 545: 644, 539: 646, 508: 648, 494: 650, 479: 652, 432: 654, 417: 656, 700: 723, 685: 725, 679: 727, 664: 729, 658: 731, 411: 733, 396: 735, 381: 737, 362: 739, 331: 741, 316: 743, 20: 745}
remove lets from formula
final_formula  ( and .def_100 ( and ( not ( = countp_0 1 ) ) ( and ( = hp_1 1 ) ( and .def_100 ( and .def_543 ( and ( and .def_543 ( or ( and .def_449 ( and .def_47 .def_493 ) ) ( and .def_450 ( or .def_530 ( and ( and .def_53 .def_493 ) ( not ( and .def_520 ( and .def_127 ( not ( and .def_458 ( and .def_460 ( and .def_49 .def_462 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and .def_449 ( not ( and .def_460 ( and .def_47 .def_462 ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hp_0 1 ) ( and ( not ( = countp_0 1 ) ) ( and ( = hp_1 1 ) ( and ( = hp_0 1 ) ( and ( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( and ( and ( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( and ( not ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( or ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( and ( not ( and ( = xp_1 1 ) ( or ( = xp_0 1009 ) ( = xp_0 383 ) ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( not ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( = xp_1 xp_0 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( or ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( and ( = xp_1 8 ) ( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( or ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( = countp_1 1 ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( and ( and ( = xp_1 1 ) ( and ( not ( = xp_1 383 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 1009 ) ) ) ) ) ( not ( and ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ( and ( not ( = xp_0 1009 ) ) ( not ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( = countp_1 1 ) ( not ( = xp_1 383 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( and ( not ( = xp_1 1009 ) ) ( and ( = xp_1 8 ) ( not ( = xp_1 383 ) ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 35, 9: 37, 7: 39, 60: 75, 49: 77, 47: 79, 106: 120, 100: 122, 89: 124, 87: 126, 153: 168, 147: 170, 136: 172, 134: 174, 195: 211, 184: 213, 182: 215, 236: 252, 225: 254, 223: 256, 297: 303, 318: 326, 328: 344, 314: 346, 305: 348, 293: 350, 283: 352, 277: 354, 266: 356, 264: 358, 379: 394, 368: 396, 366: 398, 419: 431, 408: 433, 406: 435, 482: 488, 503: 511, 513: 529, 499: 531, 490: 533, 478: 535, 468: 537, 462: 539, 456: 541, 445: 543, 443: 545, 587: 599, 581: 601, 566: 603, 555: 605, 553: 607, 679: 703, 664: 705, 649: 707, 634: 709, 628: 711, 617: 713, 615: 715, 736: 751, 725: 753, 723: 755, 857: 881, 842: 883, 827: 885, 812: 887, 797: 889, 782: 891, 776: 893, 765: 895, 763: 897, 942: 966, 936: 968, 930: 979, 924: 981, 1016: 1040, 1010: 1051, 995: 1053, 989: 1055, 1083: 1097, 1069: 1099, 1101: 1125, 1063: 1127, 1057: 1129, 983: 1131, 918: 1133, 907: 1135, 905: 1137, 1194: 1218, 1179: 1220, 1164: 1222, 1158: 1224, 1147: 1226, 1145: 1228, 1236: 1248, 1256: 1268, 1393: 1417, 1378: 1419, 1363: 1421, 1357: 1423, 1342: 1425, 1327: 1427, 1312: 1429, 1306: 1431, 1291: 1433, 1477: 1501, 1462: 1503, 1456: 1505, 1441: 1507, 1435: 1509, 1285: 1511, 1270: 1513, 1250: 1515, 1230: 1517, 1139: 1519, 899: 1521, 757: 1523, 717: 1525, 609: 1527, 547: 1529, 437: 1531, 400: 1533, 360: 1535, 258: 1537, 217: 1539, 176: 1541, 128: 1543, 81: 1545, 41: 1547, 1: 1549}
aux_vars_first_occ_dict {'.def_181 ': 11, '.def_191 ': 51, '.def_241 ': 91, '.def_245 ': 138, '.def_266 ': 186, '.def_395 ': 227, '.def_567 ': 268, '.def_568 ': 370, '.def_570 ': 410, '.def_574 ': 447, '.def_614 ': 557, '.def_617 ': 619, '.def_618 ': 727, '.def_625 ': 767, '.def_634 ': 909, '.def_635 ': 1149}
aux_vars_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not .def_181 ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not .def_567 ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and .def_567 ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and .def_241 ( and .def_395 ( and .def_191 ( and .def_395 .def_568 ) ) ) ) ) ', '.def_618 ': '( not .def_395 ) ', '.def_625 ': '( not ( and .def_574 ( and .def_245 ( and .def_241 ( and .def_568 ( and .def_191 ( and .def_266 .def_395 ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and .def_395 .def_570 ) ) .def_614 ) ) ( and ( not ( and .def_618 ( and ( and .def_617 .def_618 ) .def_625 ) ) ) ( not ( and ( or .def_181 ( = xpp_0 383 ) ) ( and .def_617 .def_625 ) ) ) ) ) ', '.def_635 ': '( not ( and .def_395 ( and .def_241 ( and .def_245 .def_266 ) ) ) ) '}
subs1 ( = xpp_0 1009 ) 
remove lets from formula
subs2 ( = xpp_0 1009 ) 
subs1 ( not .def_181 ) 
remove lets from formula
subs2 ( not .def_181 ) 
.def_181 
6
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) '}
subs1 ( = xpp_0 1009 ) 
remove lets from formula
subs2 ( = xpp_0 1009 ) 
subs1 ( not ( = xpp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 383 ) ) 
subs1 ( not ( = xpp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 1009 ) ) 
subs1 ( = countpp_1 1 ) 
remove lets from formula
subs2 ( = countpp_1 1 ) 
subs1 ( = xpp_0 xpp_1 ) 
remove lets from formula
subs2 ( = xpp_0 xpp_1 ) 
subs1 ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) 
subs1 ( not .def_567 ) 
remove lets from formula
subs2 ( not .def_567 ) 
.def_567 
6
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not .def_567 ) '}
subs1 ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) 
subs1 ( = xpp_1 8 ) 
remove lets from formula
subs2 ( = xpp_1 8 ) 
subs1 ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) 
subs1 ( and .def_567 ( not ( = xpp_0 1 ) ) ) 
remove lets from formula
subs2 ( and .def_567 ( not ( = xpp_0 1 ) ) ) 
.def_567 
6
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and .def_567 ( not ( = xpp_0 1 ) ) ) '}
subs1 ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) 
subs1 ( not ( and .def_241 ( and .def_395 ( and .def_191 ( and .def_395 .def_568 ) ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_241 ( and .def_395 ( and .def_191 ( and .def_395 .def_568 ) ) ) ) ) 
.def_191 
42
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and .def_241 ( and .def_395 ( and .def_191 ( and .def_395 .def_568 ) ) ) ) ) '}
.def_241 
12
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and .def_241 ( and .def_395 ( and ( not ( = xpp_0 1009 ) ) ( and .def_395 .def_568 ) ) ) ) ) '}
.def_395 
88
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and .def_395 ( and ( not ( = xpp_0 1009 ) ) ( and .def_395 .def_568 ) ) ) ) ) '}
42
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and .def_395 ( and ( not ( = xpp_0 1009 ) ) ( and .def_395 .def_568 ) ) ) ) ) '}
.def_568 
115
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) .def_568 ) ) ) ) ) '}
subs1 ( not ( = xpp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 383 ) ) 
subs1 ( = xpp_0 xpp_1 ) 
remove lets from formula
subs2 ( = xpp_0 xpp_1 ) 
subs1 ( not .def_181 ) 
remove lets from formula
subs2 ( not .def_181 ) 
.def_181 
6
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( = xpp_0 xpp_1 ) 
remove lets from formula
subs2 ( = xpp_0 xpp_1 ) 
subs1 ( not .def_567 ) 
remove lets from formula
subs2 ( not .def_567 ) 
.def_567 
6
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not .def_567 ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( not .def_395 ) 
remove lets from formula
subs2 ( not .def_395 ) 
.def_395 
6
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not .def_395 ) '}
subs1 ( = xpp_0 xpp_1 ) 
remove lets from formula
subs2 ( = xpp_0 xpp_1 ) 
subs1 ( not ( and .def_574 ( and .def_245 ( and .def_241 ( and .def_568 ( and .def_191 ( and .def_266 .def_395 ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_574 ( and .def_245 ( and .def_241 ( and .def_568 ( and .def_191 ( and .def_266 .def_395 ) ) ) ) ) ) ) 
.def_191 
72
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and .def_245 ( and .def_241 ( and .def_568 ( and .def_191 ( and .def_266 .def_395 ) ) ) ) ) ) ) '}
.def_241 
42
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and .def_245 ( and .def_241 ( and .def_568 ( and ( not ( = xpp_0 1009 ) ) ( and .def_266 .def_395 ) ) ) ) ) ) ) '}
.def_245 
27
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and .def_245 ( and ( not ( = xpp_1 383 ) ) ( and .def_568 ( and ( not ( = xpp_0 1009 ) ) ( and .def_266 .def_395 ) ) ) ) ) ) ) '}
.def_266 
134
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and .def_568 ( and ( not ( = xpp_0 1009 ) ) ( and .def_266 .def_395 ) ) ) ) ) ) ) '}
.def_395 
152
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and .def_568 ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) .def_395 ) ) ) ) ) ) ) '}
.def_568 
88
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and .def_568 ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) '}
.def_574 
12
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) '}
subs1 ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) 
subs1 ( not ( = xpp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 1009 ) ) 
subs1 ( not ( = xpp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 383 ) ) 
subs1 ( not .def_567 ) 
remove lets from formula
subs2 ( not .def_567 ) 
.def_567 
6
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not .def_567 ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) '}
subs1 ( not .def_181 ) 
remove lets from formula
subs2 ( not .def_181 ) 
.def_181 
6
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) '}
subs1 ( = countpp_1 1 ) 
remove lets from formula
subs2 ( = countpp_1 1 ) 
subs1 ( = xpp_0 xpp_1 ) 
remove lets from formula
subs2 ( = xpp_0 xpp_1 ) 
subs1 ( and ( not ( and ( not ( and .def_395 .def_570 ) ) .def_614 ) ) ( and ( not ( and .def_618 ( and ( and .def_617 .def_618 ) .def_625 ) ) ) ( not ( and ( or .def_181 ( = xpp_0 383 ) ) ( and .def_617 .def_625 ) ) ) ) ) 
remove lets from formula
subs2 ( and ( not ( and ( not ( and .def_395 .def_570 ) ) .def_614 ) ) ( and ( not ( and .def_618 ( and ( and .def_617 .def_618 ) .def_625 ) ) ) ( not ( and ( or .def_181 ( = xpp_0 383 ) ) ( and .def_617 .def_625 ) ) ) ) ) 
.def_181 
156
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) '}
.def_395 
30
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and .def_395 .def_570 ) ) .def_614 ) ) ( and ( not ( and .def_618 ( and ( and .def_617 .def_618 ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and .def_617 .def_625 ) ) ) ) ) '}
.def_570 
48
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) .def_570 ) ) .def_614 ) ) ( and ( not ( and .def_618 ( and ( and .def_617 .def_618 ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and .def_617 .def_625 ) ) ) ) ) '}
.def_614 
66
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) .def_614 ) ) ( and ( not ( and .def_618 ( and ( and .def_617 .def_618 ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and .def_617 .def_625 ) ) ) ) ) '}
.def_617 
311
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and .def_618 ( and ( and .def_617 .def_618 ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and .def_617 .def_625 ) ) ) ) ) '}
218
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and .def_618 ( and ( and .def_617 .def_618 ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and .def_617 .def_625 ) ) ) ) ) '}
.def_618 
430
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and .def_618 ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) .def_618 ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) .def_625 ) ) ) ) ) '}
197
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and .def_618 ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) .def_618 ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) .def_625 ) ) ) ) ) '}
.def_625 
760
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) .def_625 ) ) ) ) ) '}
475
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) .def_625 ) ) ) ) ) '}
subs1 ( = xpp_0 xpp_1 ) 
remove lets from formula
subs2 ( = xpp_0 xpp_1 ) 
subs1 ( = xpp_1 8 ) 
remove lets from formula
subs2 ( = xpp_1 8 ) 
subs1 ( and .def_567 ( not ( = xpp_0 1 ) ) ) 
remove lets from formula
subs2 ( and .def_567 ( not ( = xpp_0 1 ) ) ) 
.def_567 
6
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and .def_567 ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( not .def_395 ) 
remove lets from formula
subs2 ( not .def_395 ) 
.def_395 
6
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not .def_395 ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( not ( and .def_241 ( and .def_395 ( and .def_191 ( and .def_395 .def_568 ) ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_241 ( and .def_395 ( and .def_191 ( and .def_395 .def_568 ) ) ) ) ) 
.def_191 
42
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and .def_241 ( and .def_395 ( and .def_191 ( and .def_395 .def_568 ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_241 
12
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and .def_241 ( and .def_395 ( and ( not ( = xpp_0 1009 ) ) ( and .def_395 .def_568 ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_395 
88
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and .def_395 ( and ( not ( = xpp_0 1009 ) ) ( and .def_395 .def_568 ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
42
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and .def_395 ( and ( not ( = xpp_0 1009 ) ) ( and .def_395 .def_568 ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_568 
115
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) .def_568 ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( not .def_395 ) 
remove lets from formula
subs2 ( not .def_395 ) 
.def_395 
6
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not .def_395 ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( not ( and .def_574 ( and .def_245 ( and .def_241 ( and .def_568 ( and .def_191 ( and .def_266 .def_395 ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_574 ( and .def_245 ( and .def_241 ( and .def_568 ( and .def_191 ( and .def_266 .def_395 ) ) ) ) ) ) ) 
.def_191 
72
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and .def_245 ( and .def_241 ( and .def_568 ( and .def_191 ( and .def_266 .def_395 ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_241 
42
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and .def_245 ( and .def_241 ( and .def_568 ( and ( not ( = xpp_0 1009 ) ) ( and .def_266 .def_395 ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_245 
27
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and .def_245 ( and ( not ( = xpp_1 383 ) ) ( and .def_568 ( and ( not ( = xpp_0 1009 ) ) ( and .def_266 .def_395 ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_266 
134
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and .def_568 ( and ( not ( = xpp_0 1009 ) ) ( and .def_266 .def_395 ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_395 
152
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and .def_568 ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) .def_395 ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_568 
88
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and .def_568 ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_574 
12
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( = xpp_0 1009 ) 
remove lets from formula
subs2 ( = xpp_0 1009 ) 
subs1 ( not ( and .def_241 ( and .def_395 ( and .def_191 ( and .def_395 .def_568 ) ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_241 ( and .def_395 ( and .def_191 ( and .def_395 .def_568 ) ) ) ) ) 
.def_191 
42
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and .def_241 ( and .def_395 ( and .def_191 ( and .def_395 .def_568 ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_241 
12
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and .def_241 ( and .def_395 ( and ( not ( = xpp_0 1009 ) ) ( and .def_395 .def_568 ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_395 
88
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and .def_395 ( and ( not ( = xpp_0 1009 ) ) ( and .def_395 .def_568 ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
42
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and .def_395 ( and ( not ( = xpp_0 1009 ) ) ( and .def_395 .def_568 ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_568 
115
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) .def_568 ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( not ( and .def_574 ( and .def_245 ( and .def_241 ( and .def_568 ( and .def_191 ( and .def_266 .def_395 ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_574 ( and .def_245 ( and .def_241 ( and .def_568 ( and .def_191 ( and .def_266 .def_395 ) ) ) ) ) ) ) 
.def_191 
72
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and .def_245 ( and .def_241 ( and .def_568 ( and .def_191 ( and .def_266 .def_395 ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_241 
42
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and .def_245 ( and .def_241 ( and .def_568 ( and ( not ( = xpp_0 1009 ) ) ( and .def_266 .def_395 ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_245 
27
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and .def_245 ( and ( not ( = xpp_1 383 ) ) ( and .def_568 ( and ( not ( = xpp_0 1009 ) ) ( and .def_266 .def_395 ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_266 
134
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and .def_568 ( and ( not ( = xpp_0 1009 ) ) ( and .def_266 .def_395 ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_395 
152
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and .def_568 ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) .def_395 ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_568 
88
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and .def_568 ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
.def_574 
12
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( not ( and .def_395 ( and .def_241 ( and .def_245 .def_266 ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_395 ( and .def_241 ( and .def_245 .def_266 ) ) ) ) 
.def_241 
27
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_635 ': '( not ( and .def_395 ( and .def_241 ( and .def_245 .def_266 ) ) ) ) '}
.def_245 
57
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_635 ': '( not ( and .def_395 ( and ( not ( = xpp_1 383 ) ) ( and .def_245 .def_266 ) ) ) ) '}
.def_266 
82
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_635 ': '( not ( and .def_395 ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) .def_266 ) ) ) ) '}
.def_395 
12
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_635 ': '( not ( and .def_395 ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
subs1 ( = xpp_0 xpp_1 ) 
remove lets from formula
subs2 ( = xpp_0 xpp_1 ) 
subs1 ( not ( = xpp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 383 ) ) 
subs1 ( not ( = xpp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 1009 ) ) 
subs1 ( = countpp_1 1 ) 
remove lets from formula
subs2 ( = countpp_1 1 ) 
subs1 ( and ( not ( and ( not ( and .def_395 .def_570 ) ) .def_614 ) ) ( and ( not ( and .def_618 ( and ( and .def_617 .def_618 ) .def_625 ) ) ) ( not ( and ( or .def_181 ( = xpp_0 383 ) ) ( and .def_617 .def_625 ) ) ) ) ) 
remove lets from formula
subs2 ( and ( not ( and ( not ( and .def_395 .def_570 ) ) .def_614 ) ) ( and ( not ( and .def_618 ( and ( and .def_617 .def_618 ) .def_625 ) ) ) ( not ( and ( or .def_181 ( = xpp_0 383 ) ) ( and .def_617 .def_625 ) ) ) ) ) 
.def_181 
156
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
.def_395 
30
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and .def_395 .def_570 ) ) .def_614 ) ) ( and ( not ( and .def_618 ( and ( and .def_617 .def_618 ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and .def_617 .def_625 ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
.def_570 
48
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) .def_570 ) ) .def_614 ) ) ( and ( not ( and .def_618 ( and ( and .def_617 .def_618 ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and .def_617 .def_625 ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
.def_614 
66
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) .def_614 ) ) ( and ( not ( and .def_618 ( and ( and .def_617 .def_618 ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and .def_617 .def_625 ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
.def_617 
311
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and .def_618 ( and ( and .def_617 .def_618 ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and .def_617 .def_625 ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
218
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and .def_618 ( and ( and .def_617 .def_618 ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and .def_617 .def_625 ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
.def_618 
430
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and .def_618 ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) .def_618 ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) .def_625 ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
197
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and .def_618 ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) .def_618 ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) .def_625 ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
.def_625 
760
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) .def_625 ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
475
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) .def_625 ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
subs1 ( and ( not ( and ( not ( and .def_395 .def_570 ) ) .def_614 ) ) ( and ( not ( and .def_618 ( and ( and .def_617 .def_618 ) .def_625 ) ) ) ( not ( and ( or .def_181 ( = xpp_0 383 ) ) ( and .def_617 .def_625 ) ) ) ) ) 
remove lets from formula
subs2 ( and ( not ( and ( not ( and .def_395 .def_570 ) ) .def_614 ) ) ( and ( not ( and .def_618 ( and ( and .def_617 .def_618 ) .def_625 ) ) ) ( not ( and ( or .def_181 ( = xpp_0 383 ) ) ( and .def_617 .def_625 ) ) ) ) ) 
.def_181 
156
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
.def_395 
30
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and .def_395 .def_570 ) ) .def_614 ) ) ( and ( not ( and .def_618 ( and ( and .def_617 .def_618 ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and .def_617 .def_625 ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
.def_570 
48
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) .def_570 ) ) .def_614 ) ) ( and ( not ( and .def_618 ( and ( and .def_617 .def_618 ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and .def_617 .def_625 ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
.def_614 
66
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) .def_614 ) ) ( and ( not ( and .def_618 ( and ( and .def_617 .def_618 ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and .def_617 .def_625 ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
.def_617 
311
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and .def_618 ( and ( and .def_617 .def_618 ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and .def_617 .def_625 ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
218
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and .def_618 ( and ( and .def_617 .def_618 ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and .def_617 .def_625 ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
.def_618 
430
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and .def_618 ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) .def_618 ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) .def_625 ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
197
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and .def_618 ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) .def_618 ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) .def_625 ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
.def_625 
760
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) .def_625 ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
475
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) .def_625 ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) .def_625 ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
subs1 ( not ( and .def_395 ( and .def_241 ( and .def_245 .def_266 ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_395 ( and .def_241 ( and .def_245 .def_266 ) ) ) ) 
.def_241 
27
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_635 ': '( not ( and .def_395 ( and .def_241 ( and .def_245 .def_266 ) ) ) ) '}
.def_245 
57
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_635 ': '( not ( and .def_395 ( and ( not ( = xpp_1 383 ) ) ( and .def_245 .def_266 ) ) ) ) '}
.def_266 
82
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_635 ': '( not ( and .def_395 ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) .def_266 ) ) ) ) '}
.def_395 
12
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_635 ': '( not ( and .def_395 ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
subs1 ( not ( and .def_574 ( and .def_245 ( and .def_241 ( and .def_568 ( and .def_191 ( and .def_266 .def_395 ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_574 ( and .def_245 ( and .def_241 ( and .def_568 ( and .def_191 ( and .def_266 .def_395 ) ) ) ) ) ) ) 
.def_191 
72
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and .def_245 ( and .def_241 ( and .def_568 ( and .def_191 ( and .def_266 .def_395 ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
.def_241 
42
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and .def_245 ( and .def_241 ( and .def_568 ( and ( not ( = xpp_0 1009 ) ) ( and .def_266 .def_395 ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
.def_245 
27
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and .def_245 ( and ( not ( = xpp_1 383 ) ) ( and .def_568 ( and ( not ( = xpp_0 1009 ) ) ( and .def_266 .def_395 ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
.def_266 
134
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and .def_568 ( and ( not ( = xpp_0 1009 ) ) ( and .def_266 .def_395 ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
.def_395 
152
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and .def_568 ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) .def_395 ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
.def_568 
88
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and .def_568 ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
.def_574 
12
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and .def_574 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
subs1 ( not ( and .def_395 ( and .def_241 ( and .def_245 .def_266 ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_395 ( and .def_241 ( and .def_245 .def_266 ) ) ) ) 
.def_241 
27
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_635 ': '( not ( and .def_395 ( and .def_241 ( and .def_245 .def_266 ) ) ) ) '}
.def_245 
57
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_635 ': '( not ( and .def_395 ( and ( not ( = xpp_1 383 ) ) ( and .def_245 .def_266 ) ) ) ) '}
.def_266 
82
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_635 ': '( not ( and .def_395 ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) .def_266 ) ) ) ) '}
.def_395 
12
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_635 ': '( not ( and .def_395 ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
subs1 ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) 
subs1 ( not ( = xpp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 1009 ) ) 
subs1 ( not ( = xpp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 383 ) ) 
subs1 ( = countpp_1 1 ) 
remove lets from formula
subs2 ( = countpp_1 1 ) 
subs1 ( and .def_567 ( not ( = xpp_0 1 ) ) ) 
remove lets from formula
subs2 ( and .def_567 ( not ( = xpp_0 1 ) ) ) 
.def_567 
6
aux_vars_subs_dict {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and .def_567 ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
subs1 ( not ( = xpp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 1009 ) ) 
subs1 ( not ( = xpp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 383 ) ) 
subs1 ( = xpp_1 8 ) 
remove lets from formula
subs2 ( = xpp_1 8 ) 
aux_vars_subs_dict  {'.def_181 ': '( = xpp_0 1009 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_266 ': '( = countpp_1 1 ) ', '.def_395 ': '( = xpp_0 xpp_1 ) ', '.def_567 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_568 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_570 ': '( = xpp_1 8 ) ', '.def_574 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_614 ': '( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ', '.def_617 ': '( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_618 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_625 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ', '.def_634 ': '( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ', '.def_635 ': '( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) '}
{20: 35, 9: 37, 7: 39, 60: 75, 49: 77, 47: 79, 106: 120, 100: 122, 89: 124, 87: 126, 153: 168, 147: 170, 136: 172, 134: 174, 195: 211, 184: 213, 182: 215, 236: 252, 225: 254, 223: 256, 297: 303, 318: 326, 328: 344, 314: 346, 305: 348, 293: 350, 283: 352, 277: 354, 266: 356, 264: 358, 379: 394, 368: 396, 366: 398, 419: 431, 408: 433, 406: 435, 482: 488, 503: 511, 513: 529, 499: 531, 490: 533, 478: 535, 468: 537, 462: 539, 456: 541, 445: 543, 443: 545, 587: 599, 581: 601, 566: 603, 555: 605, 553: 607, 679: 703, 664: 705, 649: 707, 634: 709, 628: 711, 617: 713, 615: 715, 736: 751, 725: 753, 723: 755, 857: 881, 842: 883, 827: 885, 812: 887, 797: 889, 782: 891, 776: 893, 765: 895, 763: 897, 942: 966, 936: 968, 930: 979, 924: 981, 1016: 1040, 1010: 1051, 995: 1053, 989: 1055, 1083: 1097, 1069: 1099, 1101: 1125, 1063: 1127, 1057: 1129, 983: 1131, 918: 1133, 907: 1135, 905: 1137, 1194: 1218, 1179: 1220, 1164: 1222, 1158: 1224, 1147: 1226, 1145: 1228, 1236: 1248, 1256: 1268, 1393: 1417, 1378: 1419, 1363: 1421, 1357: 1423, 1342: 1425, 1327: 1427, 1312: 1429, 1306: 1431, 1291: 1433, 1477: 1501, 1462: 1503, 1456: 1505, 1441: 1507, 1435: 1509, 1285: 1511, 1270: 1513, 1250: 1515, 1230: 1517, 1139: 1519, 899: 1521, 757: 1523, 717: 1525, 609: 1527, 547: 1529, 437: 1531, 400: 1533, 360: 1535, 258: 1537, 217: 1539, 176: 1541, 128: 1543, 81: 1545, 41: 1547, 1: 1549}
{21: 36, 10: 38, 8: 40, 67: 81, 61: 83, 50: 85, 48: 87, 114: 129, 108: 131, 97: 133, 95: 135, 156: 172, 145: 174, 143: 176, 197: 213, 186: 215, 184: 217, 258: 264, 279: 287, 289: 305, 275: 307, 266: 309, 254: 311, 244: 313, 238: 315, 227: 317, 225: 319, 340: 355, 329: 357, 327: 359, 380: 392, 369: 394, 367: 396, 443: 449, 464: 472, 474: 490, 460: 492, 451: 494, 439: 496, 429: 498, 423: 500, 417: 502, 406: 504, 404: 506, 548: 560, 542: 562, 527: 564, 516: 566, 514: 568, 640: 664, 625: 666, 610: 668, 595: 670, 589: 672, 578: 674, 576: 676, 697: 712, 686: 714, 684: 716, 818: 842, 803: 844, 788: 846, 773: 848, 758: 850, 743: 852, 737: 854, 726: 856, 724: 858, 903: 927, 897: 929, 891: 940, 885: 942, 977: 1001, 971: 1012, 956: 1014, 950: 1016, 1044: 1058, 1030: 1060, 1062: 1086, 1024: 1088, 1018: 1090, 944: 1092, 879: 1094, 868: 1096, 866: 1098, 1155: 1179, 1140: 1181, 1125: 1183, 1119: 1185, 1108: 1187, 1106: 1189, 1197: 1209, 1217: 1229, 1354: 1378, 1339: 1380, 1324: 1382, 1318: 1384, 1303: 1386, 1288: 1388, 1273: 1390, 1267: 1392, 1252: 1394, 1438: 1462, 1423: 1464, 1417: 1466, 1402: 1468, 1396: 1470, 1246: 1472, 1231: 1474, 1211: 1476, 1191: 1478, 1100: 1480, 860: 1482, 718: 1484, 678: 1486, 570: 1488, 508: 1490, 398: 1492, 361: 1494, 321: 1496, 219: 1498, 178: 1500, 137: 1502, 89: 1504, 42: 1506, 2: 1508}
{28: 42, 22: 44, 11: 46, 9: 48, 75: 90, 69: 92, 58: 94, 56: 96, 117: 133, 106: 135, 104: 137, 158: 174, 147: 176, 145: 178, 219: 225, 240: 248, 250: 266, 236: 268, 227: 270, 215: 272, 205: 274, 199: 276, 188: 278, 186: 280, 301: 316, 290: 318, 288: 320, 341: 353, 330: 355, 328: 357, 404: 410, 425: 433, 435: 451, 421: 453, 412: 455, 400: 457, 390: 459, 384: 461, 378: 463, 367: 465, 365: 467, 509: 521, 503: 523, 488: 525, 477: 527, 475: 529, 601: 625, 586: 627, 571: 629, 556: 631, 550: 633, 539: 635, 537: 637, 658: 673, 647: 675, 645: 677, 779: 803, 764: 805, 749: 807, 734: 809, 719: 811, 704: 813, 698: 815, 687: 817, 685: 819, 864: 888, 858: 890, 852: 901, 846: 903, 938: 962, 932: 973, 917: 975, 911: 977, 1005: 1019, 991: 1021, 1023: 1047, 985: 1049, 979: 1051, 905: 1053, 840: 1055, 829: 1057, 827: 1059, 1116: 1140, 1101: 1142, 1086: 1144, 1080: 1146, 1069: 1148, 1067: 1150, 1158: 1170, 1178: 1190, 1315: 1339, 1300: 1341, 1285: 1343, 1279: 1345, 1264: 1347, 1249: 1349, 1234: 1351, 1228: 1353, 1213: 1355, 1399: 1423, 1384: 1425, 1378: 1427, 1363: 1429, 1357: 1431, 1207: 1433, 1192: 1435, 1172: 1437, 1152: 1439, 1061: 1441, 821: 1443, 679: 1445, 639: 1447, 531: 1449, 469: 1451, 359: 1453, 322: 1455, 282: 1457, 180: 1459, 139: 1461, 98: 1463, 50: 1465, 3: 1467}
{29: 44, 23: 46, 12: 48, 10: 50, 71: 87, 60: 89, 58: 91, 112: 128, 101: 130, 99: 132, 173: 179, 194: 202, 204: 220, 190: 222, 181: 224, 169: 226, 159: 228, 153: 230, 142: 232, 140: 234, 255: 270, 244: 272, 242: 274, 295: 307, 284: 309, 282: 311, 358: 364, 379: 387, 389: 405, 375: 407, 366: 409, 354: 411, 344: 413, 338: 415, 332: 417, 321: 419, 319: 421, 463: 475, 457: 477, 442: 479, 431: 481, 429: 483, 555: 579, 540: 581, 525: 583, 510: 585, 504: 587, 493: 589, 491: 591, 612: 627, 601: 629, 599: 631, 733: 757, 718: 759, 703: 761, 688: 763, 673: 765, 658: 767, 652: 769, 641: 771, 639: 773, 818: 842, 812: 844, 806: 855, 800: 857, 892: 916, 886: 927, 871: 929, 865: 931, 959: 973, 945: 975, 977: 1001, 939: 1003, 933: 1005, 859: 1007, 794: 1009, 783: 1011, 781: 1013, 1070: 1094, 1055: 1096, 1040: 1098, 1034: 1100, 1023: 1102, 1021: 1104, 1112: 1124, 1132: 1144, 1269: 1293, 1254: 1295, 1239: 1297, 1233: 1299, 1218: 1301, 1203: 1303, 1188: 1305, 1182: 1307, 1167: 1309, 1353: 1377, 1338: 1379, 1332: 1381, 1317: 1383, 1311: 1385, 1161: 1387, 1146: 1389, 1126: 1391, 1106: 1393, 1015: 1395, 775: 1397, 633: 1399, 593: 1401, 485: 1403, 423: 1405, 313: 1407, 276: 1409, 236: 1411, 134: 1413, 93: 1415, 52: 1417, 4: 1419}
{24: 40, 13: 42, 11: 44, 65: 81, 54: 83, 52: 85, 126: 132, 147: 155, 157: 173, 143: 175, 134: 177, 122: 179, 112: 181, 106: 183, 95: 185, 93: 187, 208: 223, 197: 225, 195: 227, 248: 260, 237: 262, 235: 264, 311: 317, 332: 340, 342: 358, 328: 360, 319: 362, 307: 364, 297: 366, 291: 368, 285: 370, 274: 372, 272: 374, 416: 428, 410: 430, 395: 432, 384: 434, 382: 436, 508: 532, 493: 534, 478: 536, 463: 538, 457: 540, 446: 542, 444: 544, 565: 580, 554: 582, 552: 584, 686: 710, 671: 712, 656: 714, 641: 716, 626: 718, 611: 720, 605: 722, 594: 724, 592: 726, 771: 795, 765: 797, 759: 808, 753: 810, 845: 869, 839: 880, 824: 882, 818: 884, 912: 926, 898: 928, 930: 954, 892: 956, 886: 958, 812: 960, 747: 962, 736: 964, 734: 966, 1023: 1047, 1008: 1049, 993: 1051, 987: 1053, 976: 1055, 974: 1057, 1065: 1077, 1085: 1097, 1222: 1246, 1207: 1248, 1192: 1250, 1186: 1252, 1171: 1254, 1156: 1256, 1141: 1258, 1135: 1260, 1120: 1262, 1306: 1330, 1291: 1332, 1285: 1334, 1270: 1336, 1264: 1338, 1114: 1340, 1099: 1342, 1079: 1344, 1059: 1346, 968: 1348, 728: 1350, 586: 1352, 546: 1354, 438: 1356, 376: 1358, 266: 1360, 229: 1362, 189: 1364, 87: 1366, 46: 1368, 5: 1370}
{25: 41, 14: 43, 12: 45, 86: 92, 107: 115, 117: 133, 103: 135, 94: 137, 82: 139, 72: 141, 66: 143, 55: 145, 53: 147, 168: 183, 157: 185, 155: 187, 208: 220, 197: 222, 195: 224, 271: 277, 292: 300, 302: 318, 288: 320, 279: 322, 267: 324, 257: 326, 251: 328, 245: 330, 234: 332, 232: 334, 376: 388, 370: 390, 355: 392, 344: 394, 342: 396, 468: 492, 453: 494, 438: 496, 423: 498, 417: 500, 406: 502, 404: 504, 525: 540, 514: 542, 512: 544, 646: 670, 631: 672, 616: 674, 601: 676, 586: 678, 571: 680, 565: 682, 554: 684, 552: 686, 731: 755, 725: 757, 719: 768, 713: 770, 805: 829, 799: 840, 784: 842, 778: 844, 872: 886, 858: 888, 890: 914, 852: 916, 846: 918, 772: 920, 707: 922, 696: 924, 694: 926, 983: 1007, 968: 1009, 953: 1011, 947: 1013, 936: 1015, 934: 1017, 1025: 1037, 1045: 1057, 1182: 1206, 1167: 1208, 1152: 1210, 1146: 1212, 1131: 1214, 1116: 1216, 1101: 1218, 1095: 1220, 1080: 1222, 1266: 1290, 1251: 1292, 1245: 1294, 1230: 1296, 1224: 1298, 1074: 1300, 1059: 1302, 1039: 1304, 1019: 1306, 928: 1308, 688: 1310, 546: 1312, 506: 1314, 398: 1316, 336: 1318, 226: 1320, 189: 1322, 149: 1324, 47: 1326, 6: 1328}
{46: 52, 67: 75, 77: 93, 63: 95, 54: 97, 42: 99, 32: 101, 26: 103, 15: 105, 13: 107, 128: 143, 117: 145, 115: 147, 168: 180, 157: 182, 155: 184, 231: 237, 252: 260, 262: 278, 248: 280, 239: 282, 227: 284, 217: 286, 211: 288, 205: 290, 194: 292, 192: 294, 336: 348, 330: 350, 315: 352, 304: 354, 302: 356, 428: 452, 413: 454, 398: 456, 383: 458, 377: 460, 366: 462, 364: 464, 485: 500, 474: 502, 472: 504, 606: 630, 591: 632, 576: 634, 561: 636, 546: 638, 531: 640, 525: 642, 514: 644, 512: 646, 691: 715, 685: 717, 679: 728, 673: 730, 765: 789, 759: 800, 744: 802, 738: 804, 832: 846, 818: 848, 850: 874, 812: 876, 806: 878, 732: 880, 667: 882, 656: 884, 654: 886, 943: 967, 928: 969, 913: 971, 907: 973, 896: 975, 894: 977, 985: 997, 1005: 1017, 1142: 1166, 1127: 1168, 1112: 1170, 1106: 1172, 1091: 1174, 1076: 1176, 1061: 1178, 1055: 1180, 1040: 1182, 1226: 1250, 1211: 1252, 1205: 1254, 1190: 1256, 1184: 1258, 1034: 1260, 1019: 1262, 999: 1264, 979: 1266, 888: 1268, 648: 1270, 506: 1272, 466: 1274, 358: 1276, 296: 1278, 186: 1280, 149: 1282, 109: 1284, 7: 1286}
{27: 42, 16: 44, 14: 46, 67: 79, 56: 81, 54: 83, 130: 136, 151: 159, 161: 177, 147: 179, 138: 181, 126: 183, 116: 185, 110: 187, 104: 189, 93: 191, 91: 193, 235: 247, 229: 249, 214: 251, 203: 253, 201: 255, 327: 351, 312: 353, 297: 355, 282: 357, 276: 359, 265: 361, 263: 363, 384: 399, 373: 401, 371: 403, 505: 529, 490: 531, 475: 533, 460: 535, 445: 537, 430: 539, 424: 541, 413: 543, 411: 545, 590: 614, 584: 616, 578: 627, 572: 629, 664: 688, 658: 699, 643: 701, 637: 703, 731: 745, 717: 747, 749: 773, 711: 775, 705: 777, 631: 779, 566: 781, 555: 783, 553: 785, 842: 866, 827: 868, 812: 870, 806: 872, 795: 874, 793: 876, 884: 896, 904: 916, 1041: 1065, 1026: 1067, 1011: 1069, 1005: 1071, 990: 1073, 975: 1075, 960: 1077, 954: 1079, 939: 1081, 1125: 1149, 1110: 1151, 1104: 1153, 1089: 1155, 1083: 1157, 933: 1159, 918: 1161, 898: 1163, 878: 1165, 787: 1167, 547: 1169, 405: 1171, 365: 1173, 257: 1175, 195: 1177, 85: 1179, 48: 1181, 8: 1183}
{28: 40, 17: 42, 15: 44, 91: 97, 112: 120, 122: 138, 108: 140, 99: 142, 87: 144, 77: 146, 71: 148, 65: 150, 54: 152, 52: 154, 196: 208, 190: 210, 175: 212, 164: 214, 162: 216, 288: 312, 273: 314, 258: 316, 243: 318, 237: 320, 226: 322, 224: 324, 345: 360, 334: 362, 332: 364, 466: 490, 451: 492, 436: 494, 421: 496, 406: 498, 391: 500, 385: 502, 374: 504, 372: 506, 551: 575, 545: 577, 539: 588, 533: 590, 625: 649, 619: 660, 604: 662, 598: 664, 692: 706, 678: 708, 710: 734, 672: 736, 666: 738, 592: 740, 527: 742, 516: 744, 514: 746, 803: 827, 788: 829, 773: 831, 767: 833, 756: 835, 754: 837, 845: 857, 865: 877, 1002: 1026, 987: 1028, 972: 1030, 966: 1032, 951: 1034, 936: 1036, 921: 1038, 915: 1040, 900: 1042, 1086: 1110, 1071: 1112, 1065: 1114, 1050: 1116, 1044: 1118, 894: 1120, 879: 1122, 859: 1124, 839: 1126, 748: 1128, 508: 1130, 366: 1132, 326: 1134, 218: 1136, 156: 1138, 46: 1140, 9: 1142}
{55: 61, 76: 84, 86: 102, 72: 104, 63: 106, 51: 108, 41: 110, 35: 112, 29: 114, 18: 116, 16: 118, 160: 172, 154: 174, 139: 176, 128: 178, 126: 180, 252: 276, 237: 278, 222: 280, 207: 282, 201: 284, 190: 286, 188: 288, 309: 324, 298: 326, 296: 328, 430: 454, 415: 456, 400: 458, 385: 460, 370: 462, 355: 464, 349: 466, 338: 468, 336: 470, 515: 539, 509: 541, 503: 552, 497: 554, 589: 613, 583: 624, 568: 626, 562: 628, 656: 670, 642: 672, 674: 698, 636: 700, 630: 702, 556: 704, 491: 706, 480: 708, 478: 710, 767: 791, 752: 793, 737: 795, 731: 797, 720: 799, 718: 801, 809: 821, 829: 841, 966: 990, 951: 992, 936: 994, 930: 996, 915: 998, 900: 1000, 885: 1002, 879: 1004, 864: 1006, 1050: 1074, 1035: 1076, 1029: 1078, 1014: 1080, 1008: 1082, 858: 1084, 843: 1086, 823: 1088, 803: 1090, 712: 1092, 472: 1094, 330: 1096, 290: 1098, 182: 1100, 120: 1102, 10: 1104}
{51: 63, 45: 65, 30: 67, 19: 69, 17: 71, 143: 167, 128: 169, 113: 171, 98: 173, 92: 175, 81: 177, 79: 179, 200: 215, 189: 217, 187: 219, 321: 345, 306: 347, 291: 349, 276: 351, 261: 353, 246: 355, 240: 357, 229: 359, 227: 361, 406: 430, 400: 432, 394: 443, 388: 445, 480: 504, 474: 515, 459: 517, 453: 519, 547: 561, 533: 563, 565: 589, 527: 591, 521: 593, 447: 595, 382: 597, 371: 599, 369: 601, 658: 682, 643: 684, 628: 686, 622: 688, 611: 690, 609: 692, 700: 712, 720: 732, 857: 881, 842: 883, 827: 885, 821: 887, 806: 889, 791: 891, 776: 893, 770: 895, 755: 897, 941: 965, 926: 967, 920: 969, 905: 971, 899: 973, 749: 975, 734: 977, 714: 979, 694: 981, 603: 983, 363: 985, 221: 987, 181: 989, 73: 991, 11: 993}
{82: 106, 67: 108, 52: 110, 37: 112, 31: 114, 20: 116, 18: 118, 139: 154, 128: 156, 126: 158, 260: 284, 245: 286, 230: 288, 215: 290, 200: 292, 185: 294, 179: 296, 168: 298, 166: 300, 345: 369, 339: 371, 333: 382, 327: 384, 419: 443, 413: 454, 398: 456, 392: 458, 486: 500, 472: 502, 504: 528, 466: 530, 460: 532, 386: 534, 321: 536, 310: 538, 308: 540, 597: 621, 582: 623, 567: 625, 561: 627, 550: 629, 548: 631, 639: 651, 659: 671, 796: 820, 781: 822, 766: 824, 760: 826, 745: 828, 730: 830, 715: 832, 709: 834, 694: 836, 880: 904, 865: 906, 859: 908, 844: 910, 838: 912, 688: 914, 673: 916, 653: 918, 633: 920, 542: 922, 302: 924, 160: 926, 120: 928, 12: 930}
{32: 47, 21: 49, 19: 51, 153: 177, 138: 179, 123: 181, 108: 183, 93: 185, 78: 187, 72: 189, 61: 191, 59: 193, 238: 262, 232: 264, 226: 275, 220: 277, 312: 336, 306: 347, 291: 349, 285: 351, 379: 393, 365: 395, 397: 421, 359: 423, 353: 425, 279: 427, 214: 429, 203: 431, 201: 433, 490: 514, 475: 516, 460: 518, 454: 520, 443: 522, 441: 524, 532: 544, 552: 564, 689: 713, 674: 715, 659: 717, 653: 719, 638: 721, 623: 723, 608: 725, 602: 727, 587: 729, 773: 797, 758: 799, 752: 801, 737: 803, 731: 805, 581: 807, 566: 809, 546: 811, 526: 813, 435: 815, 195: 817, 53: 819, 13: 821}
{114: 138, 99: 140, 84: 142, 69: 144, 54: 146, 39: 148, 33: 150, 22: 152, 20: 154, 199: 223, 193: 225, 187: 236, 181: 238, 273: 297, 267: 308, 252: 310, 246: 312, 340: 354, 326: 356, 358: 382, 320: 384, 314: 386, 240: 388, 175: 390, 164: 392, 162: 394, 451: 475, 436: 477, 421: 479, 415: 481, 404: 483, 402: 485, 493: 505, 513: 525, 650: 674, 635: 676, 620: 678, 614: 680, 599: 682, 584: 684, 569: 686, 563: 688, 548: 690, 734: 758, 719: 760, 713: 762, 698: 764, 692: 766, 542: 768, 527: 770, 507: 772, 487: 774, 396: 776, 156: 778, 14: 780}
{58: 82, 52: 84, 46: 95, 40: 97, 132: 156, 126: 167, 111: 169, 105: 171, 199: 213, 185: 215, 217: 241, 179: 243, 173: 245, 99: 247, 34: 249, 23: 251, 21: 253, 310: 334, 295: 336, 280: 338, 274: 340, 263: 342, 261: 344, 352: 364, 372: 384, 509: 533, 494: 535, 479: 537, 473: 539, 458: 541, 443: 543, 428: 545, 422: 547, 407: 549, 593: 617, 578: 619, 572: 621, 557: 623, 551: 625, 401: 627, 386: 629, 366: 631, 346: 633, 255: 635, 15: 637}
{71: 95, 56: 97, 41: 99, 35: 101, 24: 103, 22: 105, 113: 125, 133: 145, 270: 294, 255: 296, 240: 298, 234: 300, 219: 302, 204: 304, 189: 306, 183: 308, 168: 310, 354: 378, 339: 380, 333: 382, 318: 384, 312: 386, 162: 388, 147: 390, 127: 392, 107: 394, 16: 396}
remove lets from formula
final_formula  ( and ( = hpp_1 1 ) ( and ( = hpp_0 1 ) ( and .def_634 ( and ( and .def_634 ( not ( and .def_635 ( and .def_625 ( and .def_635 ( not ( and .def_574 ( and .def_245 ( and .def_241 .def_266 ) ) ) ) ) ) ) ) ) ( not ( and .def_614 ( not ( and .def_245 ( and .def_241 .def_570 ) ) ) ) ) ) ) ) ) 
[' ( and ( = hpp_1 1 ) ( and ( = hpp_0 1 ) ( and ( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ( and ( and ( and ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ) ) ( and ( not ( and ( not ( = xpp_0 xpp_1 ) ) ( and ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( or ( = xpp_0 1009 ) ( = xpp_0 383 ) ) ( and ( not ( and ( not ( = xpp_1 383 ) ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) ( and ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( and ( = countpp_1 1 ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ( and ( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( = countpp_1 1 ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( = countpp_1 1 ) ) ) ) ) ) ) ) ) ) ( not ( and ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( = xpp_0 1 ) ) ) ( not ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( = xpp_1 8 ) ) ) ) ) ) ) ) ) ) ']
new_pred_smt_format ['(declare-rel pred_0_synth_msat_1 (Int Int Int))\n (rule (=>  ( = (rel count 1) 1  ) (pred_0_synth_msat_1 x h count)))']
['(declare-rel pred_0_synth_msat_1 (Int Int Int))\n (rule (=>  ( = (rel count 1) 1  ) (pred_0_synth_msat_1 x h count)))']
Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied.
Pre-processing time:	0.045021 
Solver time:	1.62989
Total time:	1.674911
Iteration count:	6
Predicate count:	5
Successfully added new predicate to input file. !
PDSC: Verifying ./Benchmarks_msat/subsume_ref_ref.smt2
Namespace(file='./Benchmarks_msat/subsume_ref_ref.smt2', log=False, msat=True, property=None, qe=False, sygus=False)
In if ladder True
Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, ]
--->[2]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
count_0_1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
count_0_1, ]
--->[1]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]


6 SMT queries performed.
before complete_trace: [abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]


after complete_trace [abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, ]
--->[-1]


-----------------------------------check_spur-------------------------------
final init cond And(0 == count_0,
    0 == count_1,
    And(x_0 == x_1, h_0 == 1, h_1 == 1))
Initial concrete state  {'count_0_1': True, 'abs_h_1': True, 'count_0_0': True, 'abs_h_0': True, 'pred_0_synth_msat_1': False, 'x0_eq_x1': True, 'h_1': 1, 'h_0': 1, 'x_1': 0, 'x_0': 0, 'count_1': 0, 'count_0': 0}
Next concrete state {'count_1': 1, 'x_1': 8, 'count_0': 0, 'h_0': 1, 'x_0': 0, 'h_1': 1}
Next concrete state {'count_0': 1, 'x_0': 8, 'count_1': 1, 'h_1': 1, 'x_1': 8, 'h_0': 1}
Next concrete state {'x_1': 8, 'count_0': 1, 'x_0': 8, 'count_1': 1, 'h_1': 1, 'h_0': 1}
Writing an smt file to be run using mathsat
Checking output from mathsat 5
hi
paren_dict {19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 89: 99, 79: 101, 77: 103, 130: 144, 124: 146, 113: 148, 111: 150, 199: 222, 185: 224, 171: 226, 160: 228, 158: 230, 265: 289, 251: 291, 240: 293, 238: 295, 316: 340, 305: 342, 303: 344, 401: 415, 395: 417, 507: 530, 492: 532, 477: 534, 462: 536, 448: 538, 433: 540, 419: 542, 389: 544, 374: 546, 360: 548, 346: 550, 297: 552, 232: 554, 152: 556, 105: 558, 71: 560, 37: 562, 1: 564}
aux_vars_first_occ_dict {'.def_17 ': 11, '.def_20 ': 47, '.def_22 ': 81, '.def_406 ': 115, '.def_411 ': 162, '.def_416 ': 242, '.def_417 ': 307}
aux_vars_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and .def_17 ( and .def_22 ( and .def_17 .def_406 ) ) ) ', '.def_416 ': '( and .def_22 ( and .def_406 .def_411 ) ) ', '.def_417 ': '( and .def_411 .def_416 ) '}
subs1 ( = x_0 x_1 ) 
remove lets from formula
subs2 ( = x_0 x_1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( and .def_17 ( and .def_22 ( and .def_17 .def_406 ) ) ) 
remove lets from formula
subs2 ( and .def_17 ( and .def_22 ( and .def_17 .def_406 ) ) ) 
.def_17 
34
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) '}
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) '}
.def_22 
26
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and .def_22 ( and ( = x_0 x_1 ) .def_406 ) ) ) '}
.def_406 
58
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) .def_406 ) ) ) '}
subs1 ( = x_0 x_1 ) 
remove lets from formula
subs2 ( = x_0 x_1 ) 
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( = x_0 x_1 ) 
remove lets from formula
subs2 ( = x_0 x_1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( and .def_22 ( and .def_406 .def_411 ) ) 
remove lets from formula
subs2 ( and .def_22 ( and .def_406 .def_411 ) ) 
.def_22 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_416 ': '( and .def_22 ( and .def_406 .def_411 ) ) '}
.def_406 
24
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and .def_406 .def_411 ) ) '}
.def_411 
48
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) .def_411 ) ) '}
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( and .def_17 ( and .def_22 ( and .def_17 .def_406 ) ) ) 
remove lets from formula
subs2 ( and .def_17 ( and .def_22 ( and .def_17 .def_406 ) ) ) 
.def_17 
34
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) '}
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) '}
.def_22 
26
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and .def_22 ( and ( = x_0 x_1 ) .def_406 ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) '}
.def_406 
58
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) .def_406 ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) '}
subs1 ( and .def_411 .def_416 ) 
remove lets from formula
subs2 ( and .def_411 .def_416 ) 
.def_411 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ', '.def_417 ': '( and .def_411 .def_416 ) '}
.def_416 
94
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ', '.def_417 ': '( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) .def_416 ) '}
subs1 ( and .def_17 ( and .def_22 ( and .def_17 .def_406 ) ) ) 
remove lets from formula
subs2 ( and .def_17 ( and .def_22 ( and .def_17 .def_406 ) ) ) 
.def_17 
34
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ', '.def_417 ': '( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) '}
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ', '.def_417 ': '( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) '}
.def_22 
26
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and .def_22 ( and ( = x_0 x_1 ) .def_406 ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ', '.def_417 ': '( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) '}
.def_406 
58
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) .def_406 ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ', '.def_417 ': '( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) '}
subs1 ( and .def_22 ( and .def_406 .def_411 ) ) 
remove lets from formula
subs2 ( and .def_22 ( and .def_406 .def_411 ) ) 
.def_22 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_416 ': '( and .def_22 ( and .def_406 .def_411 ) ) ', '.def_417 ': '( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) '}
.def_406 
24
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and .def_406 .def_411 ) ) ', '.def_417 ': '( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) '}
.def_411 
48
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) .def_411 ) ) ', '.def_417 ': '( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) '}
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( and .def_411 .def_416 ) 
remove lets from formula
subs2 ( and .def_411 .def_416 ) 
.def_411 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ', '.def_417 ': '( and .def_411 .def_416 ) '}
.def_416 
94
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ', '.def_417 ': '( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) .def_416 ) '}
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( and .def_17 ( and .def_22 ( and .def_17 .def_406 ) ) ) 
remove lets from formula
subs2 ( and .def_17 ( and .def_22 ( and .def_17 .def_406 ) ) ) 
.def_17 
34
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ', '.def_417 ': '( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) '}
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ', '.def_417 ': '( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) '}
.def_22 
26
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and .def_22 ( and ( = x_0 x_1 ) .def_406 ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ', '.def_417 ': '( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) '}
.def_406 
58
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) .def_406 ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ', '.def_417 ': '( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) '}
subs1 ( and .def_22 ( and .def_406 .def_411 ) ) 
remove lets from formula
subs2 ( and .def_22 ( and .def_406 .def_411 ) ) 
.def_22 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_416 ': '( and .def_22 ( and .def_406 .def_411 ) ) ', '.def_417 ': '( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) '}
.def_406 
24
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and .def_406 .def_411 ) ) ', '.def_417 ': '( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) '}
.def_411 
48
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) .def_411 ) ) ', '.def_417 ': '( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) '}
subs1 ( = x_0 x_1 ) 
remove lets from formula
subs2 ( = x_0 x_1 ) 
subs1 ( and .def_411 .def_416 ) 
remove lets from formula
subs2 ( and .def_411 .def_416 ) 
.def_411 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ', '.def_417 ': '( and .def_411 .def_416 ) '}
.def_416 
94
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ', '.def_417 ': '( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) .def_416 ) '}
aux_vars_subs_dict  {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_406 ': '( not ( = count_1 1 ) ) ', '.def_411 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_416 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ', '.def_417 ': '( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) '}
{19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 89: 99, 79: 101, 77: 103, 130: 144, 124: 146, 113: 148, 111: 150, 199: 222, 185: 224, 171: 226, 160: 228, 158: 230, 265: 289, 251: 291, 240: 293, 238: 295, 316: 340, 305: 342, 303: 344, 401: 415, 395: 417, 507: 530, 492: 532, 477: 534, 462: 536, 448: 538, 433: 540, 419: 542, 389: 544, 374: 546, 360: 548, 346: 550, 297: 552, 232: 554, 152: 556, 105: 558, 71: 560, 37: 562, 1: 564}
{20: 30, 10: 32, 8: 34, 54: 64, 44: 66, 42: 68, 95: 109, 89: 111, 78: 113, 76: 115, 164: 187, 150: 189, 136: 191, 125: 193, 123: 195, 230: 254, 216: 256, 205: 258, 203: 260, 281: 305, 270: 307, 268: 309, 366: 380, 360: 382, 472: 495, 457: 497, 442: 499, 427: 501, 413: 503, 398: 505, 384: 507, 354: 509, 339: 511, 325: 513, 311: 515, 262: 517, 197: 519, 117: 521, 70: 523, 36: 525, 2: 527}
{21: 31, 11: 33, 9: 35, 62: 76, 56: 78, 45: 80, 43: 82, 131: 154, 117: 156, 103: 158, 92: 160, 90: 162, 197: 221, 183: 223, 172: 225, 170: 227, 248: 272, 237: 274, 235: 276, 333: 347, 327: 349, 439: 462, 424: 464, 409: 466, 394: 468, 380: 470, 365: 472, 351: 474, 321: 476, 306: 478, 292: 480, 278: 482, 229: 484, 164: 486, 84: 488, 37: 490, 3: 492}
{29: 43, 23: 45, 12: 47, 10: 49, 98: 121, 84: 123, 70: 125, 59: 127, 57: 129, 164: 188, 150: 190, 139: 192, 137: 194, 215: 239, 204: 241, 202: 243, 300: 314, 294: 316, 406: 429, 391: 431, 376: 433, 361: 435, 347: 437, 332: 439, 318: 441, 288: 443, 273: 445, 259: 447, 245: 449, 196: 451, 131: 453, 51: 455, 4: 457}
{52: 75, 38: 77, 24: 79, 13: 81, 11: 83, 118: 142, 104: 144, 93: 146, 91: 148, 169: 193, 158: 195, 156: 197, 254: 268, 248: 270, 360: 383, 345: 385, 330: 387, 315: 389, 301: 391, 286: 393, 272: 395, 242: 397, 227: 399, 213: 401, 199: 403, 150: 405, 85: 407, 5: 409}
{39: 63, 25: 65, 14: 67, 12: 69, 90: 114, 79: 116, 77: 118, 175: 189, 169: 191, 281: 304, 266: 306, 251: 308, 236: 310, 222: 312, 207: 314, 193: 316, 163: 318, 148: 320, 134: 322, 120: 324, 71: 326, 6: 328}
{26: 50, 15: 52, 13: 54, 111: 125, 105: 127, 217: 240, 202: 242, 187: 244, 172: 246, 158: 248, 143: 250, 129: 252, 99: 254, 84: 256, 70: 258, 56: 260, 7: 262}
remove lets from formula
final_formula  ( and .def_22 ( and .def_20 ( and .def_406 ( and ( not ( = count_0 1 ) ) ( and .def_20 ( and .def_417 ( and .def_22 ( and .def_406 ( and .def_411 ( and .def_416 ( and .def_17 .def_417 ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = h_1 1 ) ( and ( = h_0 1 ) ( and ( not ( = count_1 1 ) ) ( and ( not ( = count_0 1 ) ) ( and ( = h_0 1 ) ( and ( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ( and ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ( and ( = x_0 x_1 ) ( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {19: 30, 9: 32, 7: 34, 54: 65, 44: 67, 42: 69, 90: 101, 79: 103, 77: 105, 126: 140, 115: 142, 113: 144, 171: 184, 165: 186, 154: 188, 152: 190, 211: 226, 200: 228, 198: 230, 270: 276, 291: 299, 301: 316, 287: 318, 278: 320, 266: 322, 257: 324, 251: 326, 240: 328, 238: 330, 351: 366, 340: 368, 338: 370, 397: 411, 419: 433, 413: 444, 391: 446, 380: 448, 378: 450, 471: 494, 460: 496, 458: 498, 519: 542, 508: 544, 506: 546, 592: 598, 613: 621, 623: 638, 609: 640, 600: 642, 588: 644, 579: 646, 573: 648, 567: 650, 556: 652, 554: 654, 681: 695, 675: 697, 664: 699, 662: 701, 728: 741, 722: 743, 711: 745, 709: 747, 768: 782, 757: 784, 755: 786, 912: 936, 897: 938, 882: 940, 867: 942, 852: 944, 837: 946, 822: 948, 807: 950, 796: 952, 794: 954, 996: 1010, 981: 1012, 975: 1014, 964: 1016, 962: 1018, 1047: 1062, 1041: 1064, 1072: 1083, 1199: 1223, 1225: 1249, 1193: 1251, 1179: 1253, 1164: 1255, 1149: 1257, 1134: 1259, 1120: 1261, 1105: 1263, 1307: 1322, 1292: 1324, 1277: 1326, 1271: 1328, 1400: 1423, 1385: 1425, 1370: 1427, 1356: 1429, 1341: 1431, 1448: 1471, 1433: 1473, 1336: 1475, 1503: 1527, 1489: 1529, 1566: 1589, 1560: 1600, 1546: 1602, 1531: 1604, 1483: 1606, 1626: 1641, 1643: 1658, 1620: 1660, 1662: 1676, 1614: 1678, 1608: 1680, 1477: 1682, 1330: 1684, 1265: 1686, 1100: 1688, 1085: 1690, 1066: 1692, 1035: 1694, 1020: 1696, 956: 1698, 788: 1700, 749: 1702, 703: 1704, 656: 1706, 548: 1708, 500: 1710, 452: 1712, 372: 1714, 332: 1716, 232: 1718, 192: 1720, 146: 1722, 107: 1724, 71: 1726, 36: 1728, 1: 1730}
aux_vars_first_occ_dict {'.def_47 ': 11, '.def_53 ': 46, '.def_100 ': 81, '.def_117 ': 117, '.def_123 ': 156, '.def_127 ': 202, '.def_447 ': 242, '.def_452 ': 342, '.def_454 ': 382, '.def_455 ': 462, '.def_457 ': 510, '.def_473 ': 558, '.def_475 ': 666, '.def_477 ': 713, '.def_478 ': 759, '.def_486 ': 798, '.def_528 ': 966}
aux_vars_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not .def_117 ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not .def_447 ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) .def_452 ) ) ', '.def_455 ': '( or .def_117 .def_454 ) ', '.def_457 ': '( and .def_47 .def_447 ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and .def_452 ( and .def_127 ( and .def_123 ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and .def_127 .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and .def_447 ( not .def_47 ) ) ) '}
subs1 ( = xp_1 8 ) 
remove lets from formula
subs2 ( = xp_1 8 ) 
subs1 ( = xp_1 1 ) 
remove lets from formula
subs2 ( = xp_1 1 ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( = xp_0 1009 ) 
remove lets from formula
subs2 ( = xp_0 1009 ) 
subs1 ( not ( = xp_0 383 ) ) 
remove lets from formula
subs2 ( not ( = xp_0 383 ) ) 
subs1 ( not .def_117 ) 
remove lets from formula
subs2 ( not .def_117 ) 
.def_117 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not .def_117 ) '}
subs1 ( = xp_0 1009 ) 
remove lets from formula
subs2 ( = xp_0 1009 ) 
subs1 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
subs1 ( not .def_447 ) 
remove lets from formula
subs2 ( not .def_447 ) 
.def_447 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not .def_447 ) '}
subs1 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
subs1 ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) .def_452 ) ) 
remove lets from formula
subs2 ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) .def_452 ) ) 
.def_452 
44
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) .def_452 ) ) '}
subs1 ( not .def_447 ) 
remove lets from formula
subs2 ( not .def_447 ) 
.def_447 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not .def_447 ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) '}
subs1 ( or .def_117 .def_454 ) 
remove lets from formula
subs2 ( or .def_117 .def_454 ) 
.def_117 
5
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or .def_117 .def_454 ) '}
.def_454 
21
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) .def_454 ) '}
subs1 ( = xp_0 1009 ) 
remove lets from formula
subs2 ( = xp_0 1009 ) 
subs1 ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) .def_452 ) ) 
remove lets from formula
subs2 ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) .def_452 ) ) 
.def_452 
44
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) .def_452 ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) '}
subs1 ( and .def_47 .def_447 ) 
remove lets from formula
subs2 ( and .def_47 .def_447 ) 
.def_47 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) '}
.def_447 
19
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) .def_447 ) '}
subs1 ( = xp_1 8 ) 
remove lets from formula
subs2 ( = xp_1 8 ) 
subs1 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
subs1 ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) 
subs1 ( not ( = xp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 1009 ) ) 
subs1 ( not ( = xp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 383 ) ) 
subs1 ( = xp_1 xp_0 ) 
remove lets from formula
subs2 ( = xp_1 xp_0 ) 
subs1 ( and .def_452 ( and .def_127 ( and .def_123 ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and .def_127 .def_478 ) ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( and .def_452 ( and .def_127 ( and .def_123 ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and .def_127 .def_478 ) ) ) ) ) ) ) ) 
.def_123 
36
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and .def_452 ( and .def_127 ( and .def_123 ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and .def_127 .def_478 ) ) ) ) ) ) ) ) '}
.def_127 
125
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and .def_452 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and .def_127 .def_478 ) ) ) ) ) ) ) ) '}
21
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and .def_452 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and .def_127 .def_478 ) ) ) ) ) ) ) ) '}
.def_452 
125
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and .def_452 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) '}
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and .def_452 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) '}
.def_473 
156
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_473 ( and .def_475 ( and .def_477 ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) '}
.def_475 
247
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and .def_475 ( and .def_477 ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) '}
.def_477 
277
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and .def_477 ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) '}
.def_478 
421
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) '}
subs1 ( not .def_447 ) 
remove lets from formula
subs2 ( not .def_447 ) 
.def_447 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not .def_447 ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) '}
subs1 ( not .def_117 ) 
remove lets from formula
subs2 ( not .def_117 ) 
.def_117 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not .def_117 ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) '}
subs1 ( not ( = xp_0 383 ) ) 
remove lets from formula
subs2 ( not ( = xp_0 383 ) ) 
subs1 ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) 
subs1 ( not ( = xp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 1009 ) ) 
subs1 ( not ( = xp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 383 ) ) 
subs1 ( not .def_447 ) 
remove lets from formula
subs2 ( not .def_447 ) 
.def_447 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not .def_447 ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) '}
subs1 ( not .def_117 ) 
remove lets from formula
subs2 ( not .def_117 ) 
.def_117 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not .def_117 ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) '}
subs1 ( = xp_1 xp_0 ) 
remove lets from formula
subs2 ( = xp_1 xp_0 ) 
subs1 ( not ( and .def_447 ( not .def_47 ) ) ) 
remove lets from formula
subs2 ( not ( and .def_447 ( not .def_47 ) ) ) 
.def_47 
27
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) '}
.def_447 
12
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and .def_447 ( not ( = xp_1 8 ) ) ) ) '}
subs1 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
subs1 ( = xp_1 8 ) 
remove lets from formula
subs2 ( = xp_1 8 ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( not .def_447 ) 
remove lets from formula
subs2 ( not .def_447 ) 
.def_447 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not .def_447 ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
subs1 ( and .def_452 ( and .def_127 ( and .def_123 ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and .def_127 .def_478 ) ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( and .def_452 ( and .def_127 ( and .def_123 ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and .def_127 .def_478 ) ) ) ) ) ) ) ) 
.def_123 
36
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and .def_452 ( and .def_127 ( and .def_123 ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and .def_127 .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_127 
125
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and .def_452 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and .def_127 .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
21
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and .def_452 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and .def_127 .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_452 
125
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and .def_452 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and .def_452 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_473 
156
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_473 ( and .def_475 ( and .def_477 ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_475 
247
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and .def_475 ( and .def_477 ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_477 
277
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and .def_477 ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_478 
421
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
subs1 ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) 
subs1 ( not ( = xp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 383 ) ) 
subs1 ( not ( = xp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 1009 ) ) 
subs1 ( = xp_1 1 ) 
remove lets from formula
subs2 ( = xp_1 1 ) 
subs1 ( not .def_447 ) 
remove lets from formula
subs2 ( not .def_447 ) 
.def_447 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not .def_447 ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
subs1 ( = xp_1 xp_0 ) 
remove lets from formula
subs2 ( = xp_1 xp_0 ) 
subs1 ( not ( = xp_0 383 ) ) 
remove lets from formula
subs2 ( not ( = xp_0 383 ) ) 
subs1 ( not .def_117 ) 
remove lets from formula
subs2 ( not .def_117 ) 
.def_117 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not .def_117 ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
subs1 ( not .def_447 ) 
remove lets from formula
subs2 ( not .def_447 ) 
.def_447 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not .def_447 ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
subs1 ( not .def_117 ) 
remove lets from formula
subs2 ( not .def_117 ) 
.def_117 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not .def_117 ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
subs1 ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) .def_452 ) ) 
remove lets from formula
subs2 ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) .def_452 ) ) 
.def_452 
44
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) .def_452 ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
subs1 ( not .def_447 ) 
remove lets from formula
subs2 ( not .def_447 ) 
.def_447 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not .def_447 ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
subs1 ( and .def_452 ( and .def_127 ( and .def_123 ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and .def_127 .def_478 ) ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( and .def_452 ( and .def_127 ( and .def_123 ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and .def_127 .def_478 ) ) ) ) ) ) ) ) 
.def_123 
36
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and .def_452 ( and .def_127 ( and .def_123 ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and .def_127 .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_127 
125
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and .def_452 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and .def_127 .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
21
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and .def_452 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and .def_127 .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_452 
125
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and .def_452 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and .def_452 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_473 
156
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_473 ( and .def_475 ( and .def_477 ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_475 
247
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and .def_475 ( and .def_477 ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_477 
277
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and .def_477 ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_478 
421
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
subs1 ( or .def_117 .def_454 ) 
remove lets from formula
subs2 ( or .def_117 .def_454 ) 
.def_117 
5
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or .def_117 .def_454 ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_454 
21
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) .def_454 ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
subs1 ( not ( = xp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 1009 ) ) 
subs1 ( = xp_1 1 ) 
remove lets from formula
subs2 ( = xp_1 1 ) 
subs1 ( not ( = xp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 383 ) ) 
subs1 ( not ( = xp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 1009 ) ) 
subs1 ( = xp_1 8 ) 
remove lets from formula
subs2 ( = xp_1 8 ) 
subs1 ( not ( = xp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 383 ) ) 
subs1 ( and .def_47 .def_447 ) 
remove lets from formula
subs2 ( and .def_47 .def_447 ) 
.def_47 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_447 
19
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) .def_447 ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
subs1 ( not .def_447 ) 
remove lets from formula
subs2 ( not .def_447 ) 
.def_447 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not .def_447 ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
subs1 ( or .def_117 .def_454 ) 
remove lets from formula
subs2 ( or .def_117 .def_454 ) 
.def_117 
5
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or .def_117 .def_454 ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_454 
21
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) .def_454 ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
subs1 ( not ( and .def_447 ( not .def_47 ) ) ) 
remove lets from formula
subs2 ( not ( and .def_447 ( not .def_47 ) ) ) 
.def_47 
27
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_447 
12
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and .def_447 ( not ( = xp_1 8 ) ) ) ) '}
subs1 ( = xp_0 1009 ) 
remove lets from formula
subs2 ( = xp_0 1009 ) 
subs1 ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) .def_452 ) ) 
remove lets from formula
subs2 ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) .def_452 ) ) 
.def_452 
44
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) .def_452 ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
subs1 ( and .def_47 .def_447 ) 
remove lets from formula
subs2 ( and .def_47 .def_447 ) 
.def_47 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_447 
19
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) .def_447 ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
subs1 ( not ( and .def_447 ( not .def_47 ) ) ) 
remove lets from formula
subs2 ( not ( and .def_447 ( not .def_47 ) ) ) 
.def_47 
27
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_447 
12
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and .def_447 ( not ( = xp_1 8 ) ) ) ) '}
subs1 ( and .def_47 .def_447 ) 
remove lets from formula
subs2 ( and .def_47 .def_447 ) 
.def_47 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_447 
19
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) .def_447 ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
subs1 ( and .def_452 ( and .def_127 ( and .def_123 ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and .def_127 .def_478 ) ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( and .def_452 ( and .def_127 ( and .def_123 ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and .def_127 .def_478 ) ) ) ) ) ) ) ) 
.def_123 
36
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and .def_452 ( and .def_127 ( and .def_123 ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and .def_127 .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_127 
125
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and .def_452 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and .def_127 .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
21
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and .def_452 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and .def_127 .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_452 
125
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and .def_452 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and .def_452 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_473 ( and .def_475 ( and .def_477 ( and .def_452 ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_473 
156
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and .def_473 ( and .def_475 ( and .def_477 ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_475 
247
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and .def_475 ( and .def_477 ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_477 
277
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and .def_477 ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
.def_478 
421
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) .def_478 ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
subs1 ( = xp_1 1 ) 
remove lets from formula
subs2 ( = xp_1 1 ) 
aux_vars_subs_dict  {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_117 ': '( = xp_0 1009 ) ', '.def_123 ': '( not ( = xp_0 383 ) ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_447 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_452 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_454 ': '( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ', '.def_455 ': '( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ', '.def_457 ': '( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_473 ': '( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ', '.def_475 ': '( not ( = xp_1 1009 ) ) ', '.def_477 ': '( not ( = xp_1 383 ) ) ', '.def_478 ': '( = xp_1 xp_0 ) ', '.def_486 ': '( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ', '.def_528 ': '( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) '}
{19: 30, 9: 32, 7: 34, 54: 65, 44: 67, 42: 69, 90: 101, 79: 103, 77: 105, 126: 140, 115: 142, 113: 144, 171: 184, 165: 186, 154: 188, 152: 190, 211: 226, 200: 228, 198: 230, 270: 276, 291: 299, 301: 316, 287: 318, 278: 320, 266: 322, 257: 324, 251: 326, 240: 328, 238: 330, 351: 366, 340: 368, 338: 370, 397: 411, 419: 433, 413: 444, 391: 446, 380: 448, 378: 450, 471: 494, 460: 496, 458: 498, 519: 542, 508: 544, 506: 546, 592: 598, 613: 621, 623: 638, 609: 640, 600: 642, 588: 644, 579: 646, 573: 648, 567: 650, 556: 652, 554: 654, 681: 695, 675: 697, 664: 699, 662: 701, 728: 741, 722: 743, 711: 745, 709: 747, 768: 782, 757: 784, 755: 786, 912: 936, 897: 938, 882: 940, 867: 942, 852: 944, 837: 946, 822: 948, 807: 950, 796: 952, 794: 954, 996: 1010, 981: 1012, 975: 1014, 964: 1016, 962: 1018, 1047: 1062, 1041: 1064, 1072: 1083, 1199: 1223, 1225: 1249, 1193: 1251, 1179: 1253, 1164: 1255, 1149: 1257, 1134: 1259, 1120: 1261, 1105: 1263, 1307: 1322, 1292: 1324, 1277: 1326, 1271: 1328, 1400: 1423, 1385: 1425, 1370: 1427, 1356: 1429, 1341: 1431, 1448: 1471, 1433: 1473, 1336: 1475, 1503: 1527, 1489: 1529, 1566: 1589, 1560: 1600, 1546: 1602, 1531: 1604, 1483: 1606, 1626: 1641, 1643: 1658, 1620: 1660, 1662: 1676, 1614: 1678, 1608: 1680, 1477: 1682, 1330: 1684, 1265: 1686, 1100: 1688, 1085: 1690, 1066: 1692, 1035: 1694, 1020: 1696, 956: 1698, 788: 1700, 749: 1702, 703: 1704, 656: 1706, 548: 1708, 500: 1710, 452: 1712, 372: 1714, 332: 1716, 232: 1718, 192: 1720, 146: 1722, 107: 1724, 71: 1726, 36: 1728, 1: 1730}
{20: 31, 10: 33, 8: 35, 56: 67, 45: 69, 43: 71, 92: 106, 81: 108, 79: 110, 137: 150, 131: 152, 120: 154, 118: 156, 177: 192, 166: 194, 164: 196, 236: 242, 257: 265, 267: 282, 253: 284, 244: 286, 232: 288, 223: 290, 217: 292, 206: 294, 204: 296, 317: 332, 306: 334, 304: 336, 363: 377, 385: 399, 379: 410, 357: 412, 346: 414, 344: 416, 437: 460, 426: 462, 424: 464, 485: 508, 474: 510, 472: 512, 558: 564, 579: 587, 589: 604, 575: 606, 566: 608, 554: 610, 545: 612, 539: 614, 533: 616, 522: 618, 520: 620, 647: 661, 641: 663, 630: 665, 628: 667, 694: 707, 688: 709, 677: 711, 675: 713, 734: 748, 723: 750, 721: 752, 878: 902, 863: 904, 848: 906, 833: 908, 818: 910, 803: 912, 788: 914, 773: 916, 762: 918, 760: 920, 962: 976, 947: 978, 941: 980, 930: 982, 928: 984, 1013: 1028, 1007: 1030, 1038: 1049, 1165: 1189, 1191: 1215, 1159: 1217, 1145: 1219, 1130: 1221, 1115: 1223, 1100: 1225, 1086: 1227, 1071: 1229, 1273: 1288, 1258: 1290, 1243: 1292, 1237: 1294, 1366: 1389, 1351: 1391, 1336: 1393, 1322: 1395, 1307: 1397, 1414: 1437, 1399: 1439, 1302: 1441, 1469: 1493, 1455: 1495, 1532: 1555, 1526: 1566, 1512: 1568, 1497: 1570, 1449: 1572, 1592: 1607, 1609: 1624, 1586: 1626, 1628: 1642, 1580: 1644, 1574: 1646, 1443: 1648, 1296: 1650, 1231: 1652, 1066: 1654, 1051: 1656, 1032: 1658, 1001: 1660, 986: 1662, 922: 1664, 754: 1666, 715: 1668, 669: 1670, 622: 1672, 514: 1674, 466: 1676, 418: 1678, 338: 1680, 298: 1682, 198: 1684, 158: 1686, 112: 1688, 73: 1690, 37: 1692, 2: 1694}
{22: 33, 11: 35, 9: 37, 58: 72, 47: 74, 45: 76, 103: 116, 97: 118, 86: 120, 84: 122, 143: 158, 132: 160, 130: 162, 202: 208, 223: 231, 233: 248, 219: 250, 210: 252, 198: 254, 189: 256, 183: 258, 172: 260, 170: 262, 283: 298, 272: 300, 270: 302, 329: 343, 351: 365, 345: 376, 323: 378, 312: 380, 310: 382, 403: 426, 392: 428, 390: 430, 451: 474, 440: 476, 438: 478, 524: 530, 545: 553, 555: 570, 541: 572, 532: 574, 520: 576, 511: 578, 505: 580, 499: 582, 488: 584, 486: 586, 613: 627, 607: 629, 596: 631, 594: 633, 660: 673, 654: 675, 643: 677, 641: 679, 700: 714, 689: 716, 687: 718, 844: 868, 829: 870, 814: 872, 799: 874, 784: 876, 769: 878, 754: 880, 739: 882, 728: 884, 726: 886, 928: 942, 913: 944, 907: 946, 896: 948, 894: 950, 979: 994, 973: 996, 1004: 1015, 1131: 1155, 1157: 1181, 1125: 1183, 1111: 1185, 1096: 1187, 1081: 1189, 1066: 1191, 1052: 1193, 1037: 1195, 1239: 1254, 1224: 1256, 1209: 1258, 1203: 1260, 1332: 1355, 1317: 1357, 1302: 1359, 1288: 1361, 1273: 1363, 1380: 1403, 1365: 1405, 1268: 1407, 1435: 1459, 1421: 1461, 1498: 1521, 1492: 1532, 1478: 1534, 1463: 1536, 1415: 1538, 1558: 1573, 1575: 1590, 1552: 1592, 1594: 1608, 1546: 1610, 1540: 1612, 1409: 1614, 1262: 1616, 1197: 1618, 1032: 1620, 1017: 1622, 998: 1624, 967: 1626, 952: 1628, 888: 1630, 720: 1632, 681: 1634, 635: 1636, 588: 1638, 480: 1640, 432: 1642, 384: 1644, 304: 1646, 264: 1648, 164: 1650, 124: 1652, 78: 1654, 39: 1656, 3: 1658}
{23: 37, 12: 39, 10: 41, 68: 81, 62: 83, 51: 85, 49: 87, 108: 123, 97: 125, 95: 127, 167: 173, 188: 196, 198: 213, 184: 215, 175: 217, 163: 219, 154: 221, 148: 223, 137: 225, 135: 227, 248: 263, 237: 265, 235: 267, 294: 308, 316: 330, 310: 341, 288: 343, 277: 345, 275: 347, 368: 391, 357: 393, 355: 395, 416: 439, 405: 441, 403: 443, 489: 495, 510: 518, 520: 535, 506: 537, 497: 539, 485: 541, 476: 543, 470: 545, 464: 547, 453: 549, 451: 551, 578: 592, 572: 594, 561: 596, 559: 598, 625: 638, 619: 640, 608: 642, 606: 644, 665: 679, 654: 681, 652: 683, 809: 833, 794: 835, 779: 837, 764: 839, 749: 841, 734: 843, 719: 845, 704: 847, 693: 849, 691: 851, 893: 907, 878: 909, 872: 911, 861: 913, 859: 915, 944: 959, 938: 961, 969: 980, 1096: 1120, 1122: 1146, 1090: 1148, 1076: 1150, 1061: 1152, 1046: 1154, 1031: 1156, 1017: 1158, 1002: 1160, 1204: 1219, 1189: 1221, 1174: 1223, 1168: 1225, 1297: 1320, 1282: 1322, 1267: 1324, 1253: 1326, 1238: 1328, 1345: 1368, 1330: 1370, 1233: 1372, 1400: 1424, 1386: 1426, 1463: 1486, 1457: 1497, 1443: 1499, 1428: 1501, 1380: 1503, 1523: 1538, 1540: 1555, 1517: 1557, 1559: 1573, 1511: 1575, 1505: 1577, 1374: 1579, 1227: 1581, 1162: 1583, 997: 1585, 982: 1587, 963: 1589, 932: 1591, 917: 1593, 853: 1595, 685: 1597, 646: 1599, 600: 1601, 553: 1603, 445: 1605, 397: 1607, 349: 1609, 269: 1611, 229: 1613, 129: 1615, 89: 1617, 43: 1619, 4: 1621}
{30: 43, 24: 45, 13: 47, 11: 49, 70: 85, 59: 87, 57: 89, 129: 135, 150: 158, 160: 175, 146: 177, 137: 179, 125: 181, 116: 183, 110: 185, 99: 187, 97: 189, 210: 225, 199: 227, 197: 229, 256: 270, 278: 292, 272: 303, 250: 305, 239: 307, 237: 309, 330: 353, 319: 355, 317: 357, 378: 401, 367: 403, 365: 405, 451: 457, 472: 480, 482: 497, 468: 499, 459: 501, 447: 503, 438: 505, 432: 507, 426: 509, 415: 511, 413: 513, 540: 554, 534: 556, 523: 558, 521: 560, 587: 600, 581: 602, 570: 604, 568: 606, 627: 641, 616: 643, 614: 645, 771: 795, 756: 797, 741: 799, 726: 801, 711: 803, 696: 805, 681: 807, 666: 809, 655: 811, 653: 813, 855: 869, 840: 871, 834: 873, 823: 875, 821: 877, 906: 921, 900: 923, 931: 942, 1058: 1082, 1084: 1108, 1052: 1110, 1038: 1112, 1023: 1114, 1008: 1116, 993: 1118, 979: 1120, 964: 1122, 1166: 1181, 1151: 1183, 1136: 1185, 1130: 1187, 1259: 1282, 1244: 1284, 1229: 1286, 1215: 1288, 1200: 1290, 1307: 1330, 1292: 1332, 1195: 1334, 1362: 1386, 1348: 1388, 1425: 1448, 1419: 1459, 1405: 1461, 1390: 1463, 1342: 1465, 1485: 1500, 1502: 1517, 1479: 1519, 1521: 1535, 1473: 1537, 1467: 1539, 1336: 1541, 1189: 1543, 1124: 1545, 959: 1547, 944: 1549, 925: 1551, 894: 1553, 879: 1555, 815: 1557, 647: 1559, 608: 1561, 562: 1563, 515: 1565, 407: 1567, 359: 1569, 311: 1571, 231: 1573, 191: 1575, 91: 1577, 51: 1579, 5: 1581}
{25: 40, 14: 42, 12: 44, 84: 90, 105: 113, 115: 130, 101: 132, 92: 134, 80: 136, 71: 138, 65: 140, 54: 142, 52: 144, 165: 180, 154: 182, 152: 184, 211: 225, 233: 247, 227: 258, 205: 260, 194: 262, 192: 264, 285: 308, 274: 310, 272: 312, 333: 356, 322: 358, 320: 360, 406: 412, 427: 435, 437: 452, 423: 454, 414: 456, 402: 458, 393: 460, 387: 462, 381: 464, 370: 466, 368: 468, 495: 509, 489: 511, 478: 513, 476: 515, 542: 555, 536: 557, 525: 559, 523: 561, 582: 596, 571: 598, 569: 600, 726: 750, 711: 752, 696: 754, 681: 756, 666: 758, 651: 760, 636: 762, 621: 764, 610: 766, 608: 768, 810: 824, 795: 826, 789: 828, 778: 830, 776: 832, 861: 876, 855: 878, 886: 897, 1013: 1037, 1039: 1063, 1007: 1065, 993: 1067, 978: 1069, 963: 1071, 948: 1073, 934: 1075, 919: 1077, 1121: 1136, 1106: 1138, 1091: 1140, 1085: 1142, 1214: 1237, 1199: 1239, 1184: 1241, 1170: 1243, 1155: 1245, 1262: 1285, 1247: 1287, 1150: 1289, 1317: 1341, 1303: 1343, 1380: 1403, 1374: 1414, 1360: 1416, 1345: 1418, 1297: 1420, 1440: 1455, 1457: 1472, 1434: 1474, 1476: 1490, 1428: 1492, 1422: 1494, 1291: 1496, 1144: 1498, 1079: 1500, 914: 1502, 899: 1504, 880: 1506, 849: 1508, 834: 1510, 770: 1512, 602: 1514, 563: 1516, 517: 1518, 470: 1520, 362: 1522, 314: 1524, 266: 1526, 186: 1528, 146: 1530, 46: 1532, 6: 1534}
{45: 51, 66: 74, 76: 91, 62: 93, 53: 95, 41: 97, 32: 99, 26: 101, 15: 103, 13: 105, 126: 141, 115: 143, 113: 145, 172: 186, 194: 208, 188: 219, 166: 221, 155: 223, 153: 225, 246: 269, 235: 271, 233: 273, 294: 317, 283: 319, 281: 321, 367: 373, 388: 396, 398: 413, 384: 415, 375: 417, 363: 419, 354: 421, 348: 423, 342: 425, 331: 427, 329: 429, 456: 470, 450: 472, 439: 474, 437: 476, 503: 516, 497: 518, 486: 520, 484: 522, 543: 557, 532: 559, 530: 561, 687: 711, 672: 713, 657: 715, 642: 717, 627: 719, 612: 721, 597: 723, 582: 725, 571: 727, 569: 729, 771: 785, 756: 787, 750: 789, 739: 791, 737: 793, 822: 837, 816: 839, 847: 858, 974: 998, 1000: 1024, 968: 1026, 954: 1028, 939: 1030, 924: 1032, 909: 1034, 895: 1036, 880: 1038, 1082: 1097, 1067: 1099, 1052: 1101, 1046: 1103, 1175: 1198, 1160: 1200, 1145: 1202, 1131: 1204, 1116: 1206, 1223: 1246, 1208: 1248, 1111: 1250, 1278: 1302, 1264: 1304, 1341: 1364, 1335: 1375, 1321: 1377, 1306: 1379, 1258: 1381, 1401: 1416, 1418: 1433, 1395: 1435, 1437: 1451, 1389: 1453, 1383: 1455, 1252: 1457, 1105: 1459, 1040: 1461, 875: 1463, 860: 1465, 841: 1467, 810: 1469, 795: 1471, 731: 1473, 563: 1475, 524: 1477, 478: 1479, 431: 1481, 323: 1483, 275: 1485, 227: 1487, 147: 1489, 107: 1491, 7: 1493}
{27: 42, 16: 44, 14: 46, 73: 87, 95: 109, 89: 120, 67: 122, 56: 124, 54: 126, 147: 170, 136: 172, 134: 174, 195: 218, 184: 220, 182: 222, 268: 274, 289: 297, 299: 314, 285: 316, 276: 318, 264: 320, 255: 322, 249: 324, 243: 326, 232: 328, 230: 330, 357: 371, 351: 373, 340: 375, 338: 377, 404: 417, 398: 419, 387: 421, 385: 423, 444: 458, 433: 460, 431: 462, 588: 612, 573: 614, 558: 616, 543: 618, 528: 620, 513: 622, 498: 624, 483: 626, 472: 628, 470: 630, 672: 686, 657: 688, 651: 690, 640: 692, 638: 694, 723: 738, 717: 740, 748: 759, 875: 899, 901: 925, 869: 927, 855: 929, 840: 931, 825: 933, 810: 935, 796: 937, 781: 939, 983: 998, 968: 1000, 953: 1002, 947: 1004, 1076: 1099, 1061: 1101, 1046: 1103, 1032: 1105, 1017: 1107, 1124: 1147, 1109: 1149, 1012: 1151, 1179: 1203, 1165: 1205, 1242: 1265, 1236: 1276, 1222: 1278, 1207: 1280, 1159: 1282, 1302: 1317, 1319: 1334, 1296: 1336, 1338: 1352, 1290: 1354, 1284: 1356, 1153: 1358, 1006: 1360, 941: 1362, 776: 1364, 761: 1366, 742: 1368, 711: 1370, 696: 1372, 632: 1374, 464: 1376, 425: 1378, 379: 1380, 332: 1382, 224: 1384, 176: 1386, 128: 1388, 48: 1390, 8: 1392}
{34: 48, 56: 70, 50: 81, 28: 83, 17: 85, 15: 87, 108: 131, 97: 133, 95: 135, 156: 179, 145: 181, 143: 183, 229: 235, 250: 258, 260: 275, 246: 277, 237: 279, 225: 281, 216: 283, 210: 285, 204: 287, 193: 289, 191: 291, 318: 332, 312: 334, 301: 336, 299: 338, 365: 378, 359: 380, 348: 382, 346: 384, 405: 419, 394: 421, 392: 423, 549: 573, 534: 575, 519: 577, 504: 579, 489: 581, 474: 583, 459: 585, 444: 587, 433: 589, 431: 591, 633: 647, 618: 649, 612: 651, 601: 653, 599: 655, 684: 699, 678: 701, 709: 720, 836: 860, 862: 886, 830: 888, 816: 890, 801: 892, 786: 894, 771: 896, 757: 898, 742: 900, 944: 959, 929: 961, 914: 963, 908: 965, 1037: 1060, 1022: 1062, 1007: 1064, 993: 1066, 978: 1068, 1085: 1108, 1070: 1110, 973: 1112, 1140: 1164, 1126: 1166, 1203: 1226, 1197: 1237, 1183: 1239, 1168: 1241, 1120: 1243, 1263: 1278, 1280: 1295, 1257: 1297, 1299: 1313, 1251: 1315, 1245: 1317, 1114: 1319, 967: 1321, 902: 1323, 737: 1325, 722: 1327, 703: 1329, 672: 1331, 657: 1333, 593: 1335, 425: 1337, 386: 1339, 340: 1341, 293: 1343, 185: 1345, 137: 1347, 89: 1349, 9: 1351}
{29: 52, 18: 54, 16: 56, 77: 100, 66: 102, 64: 104, 150: 156, 171: 179, 181: 196, 167: 198, 158: 200, 146: 202, 137: 204, 131: 206, 125: 208, 114: 210, 112: 212, 239: 253, 233: 255, 222: 257, 220: 259, 286: 299, 280: 301, 269: 303, 267: 305, 326: 340, 315: 342, 313: 344, 470: 494, 455: 496, 440: 498, 425: 500, 410: 502, 395: 504, 380: 506, 365: 508, 354: 510, 352: 512, 554: 568, 539: 570, 533: 572, 522: 574, 520: 576, 605: 620, 599: 622, 630: 641, 757: 781, 783: 807, 751: 809, 737: 811, 722: 813, 707: 815, 692: 817, 678: 819, 663: 821, 865: 880, 850: 882, 835: 884, 829: 886, 958: 981, 943: 983, 928: 985, 914: 987, 899: 989, 1006: 1029, 991: 1031, 894: 1033, 1061: 1085, 1047: 1087, 1124: 1147, 1118: 1158, 1104: 1160, 1089: 1162, 1041: 1164, 1184: 1199, 1201: 1216, 1178: 1218, 1220: 1234, 1172: 1236, 1166: 1238, 1035: 1240, 888: 1242, 823: 1244, 658: 1246, 643: 1248, 624: 1250, 593: 1252, 578: 1254, 514: 1256, 346: 1258, 307: 1260, 261: 1262, 214: 1264, 106: 1266, 58: 1268, 10: 1270}
{30: 53, 19: 55, 17: 57, 103: 109, 124: 132, 134: 149, 120: 151, 111: 153, 99: 155, 90: 157, 84: 159, 78: 161, 67: 163, 65: 165, 192: 206, 186: 208, 175: 210, 173: 212, 239: 252, 233: 254, 222: 256, 220: 258, 279: 293, 268: 295, 266: 297, 423: 447, 408: 449, 393: 451, 378: 453, 363: 455, 348: 457, 333: 459, 318: 461, 307: 463, 305: 465, 507: 521, 492: 523, 486: 525, 475: 527, 473: 529, 558: 573, 552: 575, 583: 594, 710: 734, 736: 760, 704: 762, 690: 764, 675: 766, 660: 768, 645: 770, 631: 772, 616: 774, 818: 833, 803: 835, 788: 837, 782: 839, 911: 934, 896: 936, 881: 938, 867: 940, 852: 942, 959: 982, 944: 984, 847: 986, 1014: 1038, 1000: 1040, 1077: 1100, 1071: 1111, 1057: 1113, 1042: 1115, 994: 1117, 1137: 1152, 1154: 1169, 1131: 1171, 1173: 1187, 1125: 1189, 1119: 1191, 988: 1193, 841: 1195, 776: 1197, 611: 1199, 596: 1201, 577: 1203, 546: 1205, 531: 1207, 467: 1209, 299: 1211, 260: 1213, 214: 1215, 167: 1217, 59: 1219, 11: 1221}
{56: 62, 77: 85, 87: 102, 73: 104, 64: 106, 52: 108, 43: 110, 37: 112, 31: 114, 20: 116, 18: 118, 145: 159, 139: 161, 128: 163, 126: 165, 192: 205, 186: 207, 175: 209, 173: 211, 232: 246, 221: 248, 219: 250, 376: 400, 361: 402, 346: 404, 331: 406, 316: 408, 301: 410, 286: 412, 271: 414, 260: 416, 258: 418, 460: 474, 445: 476, 439: 478, 428: 480, 426: 482, 511: 526, 505: 528, 536: 547, 663: 687, 689: 713, 657: 715, 643: 717, 628: 719, 613: 721, 598: 723, 584: 725, 569: 727, 771: 786, 756: 788, 741: 790, 735: 792, 864: 887, 849: 889, 834: 891, 820: 893, 805: 895, 912: 935, 897: 937, 800: 939, 967: 991, 953: 993, 1030: 1053, 1024: 1064, 1010: 1066, 995: 1068, 947: 1070, 1090: 1105, 1107: 1122, 1084: 1124, 1126: 1140, 1078: 1142, 1072: 1144, 941: 1146, 794: 1148, 729: 1150, 564: 1152, 549: 1154, 530: 1156, 499: 1158, 484: 1160, 420: 1162, 252: 1164, 213: 1166, 167: 1168, 120: 1170, 12: 1172}
{38: 52, 32: 54, 21: 56, 19: 58, 85: 98, 79: 100, 68: 102, 66: 104, 125: 139, 114: 141, 112: 143, 269: 293, 254: 295, 239: 297, 224: 299, 209: 301, 194: 303, 179: 305, 164: 307, 153: 309, 151: 311, 353: 367, 338: 369, 332: 371, 321: 373, 319: 375, 404: 419, 398: 421, 429: 440, 556: 580, 582: 606, 550: 608, 536: 610, 521: 612, 506: 614, 491: 616, 477: 618, 462: 620, 664: 679, 649: 681, 634: 683, 628: 685, 757: 780, 742: 782, 727: 784, 713: 786, 698: 788, 805: 828, 790: 830, 693: 832, 860: 884, 846: 886, 923: 946, 917: 957, 903: 959, 888: 961, 840: 963, 983: 998, 1000: 1015, 977: 1017, 1019: 1033, 971: 1035, 965: 1037, 834: 1039, 687: 1041, 622: 1043, 457: 1045, 442: 1047, 423: 1049, 392: 1051, 377: 1053, 313: 1055, 145: 1057, 106: 1059, 60: 1061, 13: 1063}
{39: 52, 33: 54, 22: 56, 20: 58, 79: 93, 68: 95, 66: 97, 223: 247, 208: 249, 193: 251, 178: 253, 163: 255, 148: 257, 133: 259, 118: 261, 107: 263, 105: 265, 307: 321, 292: 323, 286: 325, 275: 327, 273: 329, 358: 373, 352: 375, 383: 394, 510: 534, 536: 560, 504: 562, 490: 564, 475: 566, 460: 568, 445: 570, 431: 572, 416: 574, 618: 633, 603: 635, 588: 637, 582: 639, 711: 734, 696: 736, 681: 738, 667: 740, 652: 742, 759: 782, 744: 784, 647: 786, 814: 838, 800: 840, 877: 900, 871: 911, 857: 913, 842: 915, 794: 917, 937: 952, 954: 969, 931: 971, 973: 987, 925: 989, 919: 991, 788: 993, 641: 995, 576: 997, 411: 999, 396: 1001, 377: 1003, 346: 1005, 331: 1007, 267: 1009, 99: 1011, 60: 1013, 14: 1015}
{34: 48, 23: 50, 21: 52, 178: 202, 163: 204, 148: 206, 133: 208, 118: 210, 103: 212, 88: 214, 73: 216, 62: 218, 60: 220, 262: 276, 247: 278, 241: 280, 230: 282, 228: 284, 313: 328, 307: 330, 338: 349, 465: 489, 491: 515, 459: 517, 445: 519, 430: 521, 415: 523, 400: 525, 386: 527, 371: 529, 573: 588, 558: 590, 543: 592, 537: 594, 666: 689, 651: 691, 636: 693, 622: 695, 607: 697, 714: 737, 699: 739, 602: 741, 769: 793, 755: 795, 832: 855, 826: 866, 812: 868, 797: 870, 749: 872, 892: 907, 909: 924, 886: 926, 928: 942, 880: 944, 874: 946, 743: 948, 596: 950, 531: 952, 366: 954, 351: 956, 332: 958, 301: 960, 286: 962, 222: 964, 54: 966, 15: 968}
{140: 164, 125: 166, 110: 168, 95: 170, 80: 172, 65: 174, 50: 176, 35: 178, 24: 180, 22: 182, 224: 238, 209: 240, 203: 242, 192: 244, 190: 246, 275: 290, 269: 292, 300: 311, 427: 451, 453: 477, 421: 479, 407: 481, 392: 483, 377: 485, 362: 487, 348: 489, 333: 491, 535: 550, 520: 552, 505: 554, 499: 556, 628: 651, 613: 653, 598: 655, 584: 657, 569: 659, 676: 699, 661: 701, 564: 703, 731: 755, 717: 757, 794: 817, 788: 828, 774: 830, 759: 832, 711: 834, 854: 869, 871: 886, 848: 888, 890: 904, 842: 906, 836: 908, 705: 910, 558: 912, 493: 914, 328: 916, 313: 918, 294: 920, 263: 922, 248: 924, 184: 926, 16: 928}
{57: 71, 42: 73, 36: 75, 25: 77, 23: 79, 108: 123, 102: 125, 133: 144, 260: 284, 286: 310, 254: 312, 240: 314, 225: 316, 210: 318, 195: 320, 181: 322, 166: 324, 368: 383, 353: 385, 338: 387, 332: 389, 461: 484, 446: 486, 431: 488, 417: 490, 402: 492, 509: 532, 494: 534, 397: 536, 564: 588, 550: 590, 627: 650, 621: 661, 607: 663, 592: 665, 544: 667, 687: 702, 704: 719, 681: 721, 723: 737, 675: 739, 669: 741, 538: 743, 391: 745, 326: 747, 161: 749, 146: 751, 127: 753, 96: 755, 81: 757, 17: 759}
remove lets from formula
final_formula  ( and .def_100 ( and ( not ( = countp_0 1 ) ) ( and ( = hp_1 1 ) ( and .def_100 ( or ( and .def_452 ( or .def_486 ( and .def_473 ( and .def_477 ( and .def_475 ( and .def_53 ( and ( and .def_452 .def_478 ) ( and .def_123 .def_127 ) ) ) ) ) ) ) ) ( and ( not ( and .def_452 ( and .def_127 ( not .def_454 ) ) ) ) ( and ( or ( and .def_452 ( or .def_486 ( and .def_455 ( and .def_475 ( and .def_53 .def_477 ) ) ) ) ) ( and .def_475 ( and .def_47 .def_477 ) ) ) ( and ( and ( or .def_457 ( and .def_452 .def_455 ) ) ( and .def_528 ( or .def_117 ( and ( or .def_454 .def_457 ) .def_528 ) ) ) ) ( not ( and ( and ( not .def_457 ) ( not .def_486 ) ) ( not .def_53 ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hp_0 1 ) ( and ( not ( = countp_0 1 ) ) ( and ( = hp_1 1 ) ( and ( = hp_0 1 ) ( or ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( or ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( = xp_1 1 ) ( and ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( = xp_1 xp_0 ) ) ( and ( not ( = xp_0 383 ) ) ( not ( = xp_0 1009 ) ) ) ) ) ) ) ) ) ) ( and ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( not ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ( and ( or ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( or ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ( and ( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( = xp_1 1 ) ( not ( = xp_1 383 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( = xp_1 8 ) ( not ( = xp_1 383 ) ) ) ) ) ( and ( and ( or ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( or ( = xp_0 1009 ) ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ( and ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ( or ( = xp_0 1009 ) ( and ( or ( and ( <= xp_0 383 ) ( and ( <= 383 xp_0 ) ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( not ( and ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ) ) ) ) ( not ( and ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ( not ( = xp_1 1 ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 32, 9: 34, 7: 36, 57: 71, 46: 73, 44: 75, 102: 117, 96: 119, 85: 121, 83: 123, 150: 164, 144: 166, 133: 168, 131: 170, 197: 212, 191: 214, 180: 216, 178: 218, 239: 255, 228: 257, 226: 259, 280: 292, 269: 294, 267: 296, 317: 341, 306: 343, 304: 345, 366: 379, 355: 381, 353: 383, 424: 430, 445: 453, 455: 471, 441: 473, 432: 475, 420: 477, 410: 479, 404: 481, 393: 483, 391: 485, 506: 521, 495: 523, 493: 525, 546: 558, 535: 560, 533: 562, 603: 609, 624: 632, 634: 650, 620: 652, 611: 654, 599: 656, 589: 658, 583: 660, 572: 662, 570: 664, 685: 700, 674: 702, 672: 704, 725: 740, 714: 742, 712: 744, 831: 855, 816: 857, 801: 859, 786: 861, 771: 863, 765: 865, 754: 867, 752: 869, 877: 889, 897: 909, 986: 1009, 1023: 1047, 1049: 1064, 1017: 1066, 1011: 1068, 980: 1070, 974: 1072, 1101: 1124, 1147: 1162, 1132: 1164, 1126: 1166, 1095: 1168, 1089: 1170, 1074: 1172, 968: 1174, 962: 1176, 1190: 1205, 1207: 1231, 1184: 1233, 1178: 1235, 956: 1237, 1284: 1299, 1278: 1310, 1263: 1312, 1257: 1314, 1251: 1325, 1327: 1342, 1245: 1344, 1239: 1346, 950: 1348, 1413: 1437, 1398: 1439, 1383: 1441, 1377: 1443, 1362: 1445, 1468: 1492, 1453: 1494, 1447: 1496, 1356: 1498, 1350: 1500, 944: 1502, 929: 1504, 923: 1506, 1535: 1559, 1520: 1561, 1514: 1563, 1646: 1670, 1631: 1672, 1616: 1674, 1601: 1676, 1586: 1678, 1580: 1680, 1565: 1682, 1508: 1684, 917: 1686, 911: 1688, 891: 1690, 871: 1692, 746: 1694, 706: 1696, 666: 1698, 564: 1700, 527: 1702, 487: 1704, 385: 1706, 347: 1708, 298: 1710, 261: 1712, 220: 1714, 172: 1716, 125: 1718, 77: 1720, 38: 1722, 1: 1724}
aux_vars_first_occ_dict {'.def_118 ': 11, '.def_184 ': 48, '.def_191 ': 87, '.def_241 ': 135, '.def_245 ': 182, '.def_396 ': 230, '.def_562 ': 271, '.def_563 ': 308, '.def_566 ': 357, '.def_571 ': 395, '.def_572 ': 497, '.def_581 ': 537, '.def_582 ': 574, '.def_583 ': 676, '.def_619 ': 716, '.def_639 ': 756}
aux_vars_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and .def_396 .def_562 ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not .def_571 ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not .def_582 ) ', '.def_619 ': '( not .def_396 ) ', '.def_639 ': '( not ( and .def_583 ( and .def_245 ( and .def_241 ( and .def_572 ( and .def_191 .def_396 ) ) ) ) ) ) '}
subs1 ( = xpp_0 1 ) 
remove lets from formula
subs2 ( = xpp_0 1 ) 
subs1 ( = xpp_0 383 ) 
remove lets from formula
subs2 ( = xpp_0 383 ) 
subs1 ( not ( = xpp_0 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_0 1009 ) ) 
subs1 ( not ( = xpp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 383 ) ) 
subs1 ( not ( = xpp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 1009 ) ) 
subs1 ( = xpp_0 xpp_1 ) 
remove lets from formula
subs2 ( = xpp_0 xpp_1 ) 
subs1 ( = xpp_1 8 ) 
remove lets from formula
subs2 ( = xpp_1 8 ) 
subs1 ( and .def_396 .def_562 ) 
remove lets from formula
subs2 ( and .def_396 .def_562 ) 
.def_396 
6
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and .def_396 .def_562 ) '}
.def_562 
24
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) .def_562 ) '}
subs1 ( = xpp_0 xpp_1 ) 
remove lets from formula
subs2 ( = xpp_0 xpp_1 ) 
subs1 ( = xpp_1 8 ) 
remove lets from formula
subs2 ( = xpp_1 8 ) 
subs1 ( <= xpp_0 1 ) 
remove lets from formula
subs2 ( <= xpp_0 1 ) 
subs1 ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) 
subs1 ( not .def_571 ) 
remove lets from formula
subs2 ( not .def_571 ) 
.def_571 
6
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not .def_571 ) '}
subs1 ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) 
subs1 ( = xpp_1 1 ) 
remove lets from formula
subs2 ( = xpp_1 1 ) 
subs1 ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) 
subs1 ( not .def_582 ) 
remove lets from formula
subs2 ( not .def_582 ) 
.def_582 
6
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not .def_582 ) '}
subs1 ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) 
subs1 ( not .def_396 ) 
remove lets from formula
subs2 ( not .def_396 ) 
.def_396 
6
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not .def_396 ) '}
subs1 ( = xpp_0 xpp_1 ) 
remove lets from formula
subs2 ( = xpp_0 xpp_1 ) 
subs1 ( not ( and .def_583 ( and .def_245 ( and .def_241 ( and .def_572 ( and .def_191 .def_396 ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_583 ( and .def_245 ( and .def_241 ( and .def_572 ( and .def_191 .def_396 ) ) ) ) ) ) 
.def_191 
72
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and .def_245 ( and .def_241 ( and .def_572 ( and .def_191 .def_396 ) ) ) ) ) ) '}
.def_241 
42
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and .def_245 ( and .def_241 ( and .def_572 ( and ( not ( = xpp_0 1009 ) ) .def_396 ) ) ) ) ) ) '}
.def_245 
27
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and .def_245 ( and ( not ( = xpp_1 383 ) ) ( and .def_572 ( and ( not ( = xpp_0 1009 ) ) .def_396 ) ) ) ) ) ) '}
.def_396 
128
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and .def_572 ( and ( not ( = xpp_0 1009 ) ) .def_396 ) ) ) ) ) ) '}
.def_572 
88
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and .def_572 ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
.def_583 
12
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
subs1 ( not .def_582 ) 
remove lets from formula
subs2 ( not .def_582 ) 
.def_582 
6
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not .def_582 ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
subs1 ( not ( = xpp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 1009 ) ) 
subs1 ( not ( = xpp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 383 ) ) 
subs1 ( not .def_571 ) 
remove lets from formula
subs2 ( not .def_571 ) 
.def_571 
6
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not .def_571 ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
subs1 ( not ( = xpp_0 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_0 1009 ) ) 
subs1 ( = xpp_0 xpp_1 ) 
remove lets from formula
subs2 ( = xpp_0 xpp_1 ) 
subs1 ( not ( = xpp_0 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_0 1009 ) ) 
subs1 ( = xpp_0 1 ) 
remove lets from formula
subs2 ( = xpp_0 1 ) 
subs1 ( and .def_396 .def_562 ) 
remove lets from formula
subs2 ( and .def_396 .def_562 ) 
.def_396 
6
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and .def_396 .def_562 ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
.def_562 
24
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) .def_562 ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
subs1 ( = xpp_0 383 ) 
remove lets from formula
subs2 ( = xpp_0 383 ) 
subs1 ( not .def_396 ) 
remove lets from formula
subs2 ( not .def_396 ) 
.def_396 
6
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not .def_396 ) ', '.def_639 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
subs1 ( <= xpp_0 1 ) 
remove lets from formula
subs2 ( <= xpp_0 1 ) 
subs1 ( not ( = xpp_0 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_0 1009 ) ) 
subs1 ( = xpp_0 xpp_1 ) 
remove lets from formula
subs2 ( = xpp_0 xpp_1 ) 
subs1 ( <= xpp_0 1 ) 
remove lets from formula
subs2 ( <= xpp_0 1 ) 
subs1 ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) 
subs1 ( and .def_396 .def_562 ) 
remove lets from formula
subs2 ( and .def_396 .def_562 ) 
.def_396 
6
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and .def_396 .def_562 ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
.def_562 
24
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) .def_562 ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
subs1 ( = xpp_0 1 ) 
remove lets from formula
subs2 ( = xpp_0 1 ) 
subs1 ( not ( = xpp_0 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_0 1009 ) ) 
subs1 ( not .def_396 ) 
remove lets from formula
subs2 ( not .def_396 ) 
.def_396 
6
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not .def_396 ) ', '.def_639 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
subs1 ( and .def_396 .def_562 ) 
remove lets from formula
subs2 ( and .def_396 .def_562 ) 
.def_396 
6
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and .def_396 .def_562 ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
.def_562 
24
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) .def_562 ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
subs1 ( = xpp_0 383 ) 
remove lets from formula
subs2 ( = xpp_0 383 ) 
subs1 ( = xpp_0 xpp_1 ) 
remove lets from formula
subs2 ( = xpp_0 xpp_1 ) 
subs1 ( not ( and .def_583 ( and .def_245 ( and .def_241 ( and .def_572 ( and .def_191 .def_396 ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_583 ( and .def_245 ( and .def_241 ( and .def_572 ( and .def_191 .def_396 ) ) ) ) ) ) 
.def_191 
72
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and .def_245 ( and .def_241 ( and .def_572 ( and .def_191 .def_396 ) ) ) ) ) ) '}
.def_241 
42
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and .def_245 ( and .def_241 ( and .def_572 ( and ( not ( = xpp_0 1009 ) ) .def_396 ) ) ) ) ) ) '}
.def_245 
27
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and .def_245 ( and ( not ( = xpp_1 383 ) ) ( and .def_572 ( and ( not ( = xpp_0 1009 ) ) .def_396 ) ) ) ) ) ) '}
.def_396 
128
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and .def_572 ( and ( not ( = xpp_0 1009 ) ) .def_396 ) ) ) ) ) ) '}
.def_572 
88
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and .def_572 ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
.def_583 
12
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
subs1 ( = xpp_1 1 ) 
remove lets from formula
subs2 ( = xpp_1 1 ) 
subs1 ( not ( and .def_583 ( and .def_245 ( and .def_241 ( and .def_572 ( and .def_191 .def_396 ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_583 ( and .def_245 ( and .def_241 ( and .def_572 ( and .def_191 .def_396 ) ) ) ) ) ) 
.def_191 
72
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and .def_245 ( and .def_241 ( and .def_572 ( and .def_191 .def_396 ) ) ) ) ) ) '}
.def_241 
42
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and .def_245 ( and .def_241 ( and .def_572 ( and ( not ( = xpp_0 1009 ) ) .def_396 ) ) ) ) ) ) '}
.def_245 
27
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and .def_245 ( and ( not ( = xpp_1 383 ) ) ( and .def_572 ( and ( not ( = xpp_0 1009 ) ) .def_396 ) ) ) ) ) ) '}
.def_396 
128
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and .def_572 ( and ( not ( = xpp_0 1009 ) ) .def_396 ) ) ) ) ) ) '}
.def_572 
88
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and .def_572 ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
.def_583 
12
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
subs1 ( = xpp_0 1 ) 
remove lets from formula
subs2 ( = xpp_0 1 ) 
subs1 ( not ( = xpp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 1009 ) ) 
subs1 ( not ( = xpp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 383 ) ) 
subs1 ( = xpp_0 xpp_1 ) 
remove lets from formula
subs2 ( = xpp_0 xpp_1 ) 
subs1 ( not ( = xpp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 1009 ) ) 
subs1 ( not ( = xpp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 383 ) ) 
subs1 ( = xpp_1 8 ) 
remove lets from formula
subs2 ( = xpp_1 8 ) 
subs1 ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) 
subs1 ( and .def_396 .def_562 ) 
remove lets from formula
subs2 ( and .def_396 .def_562 ) 
.def_396 
6
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and .def_396 .def_562 ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
.def_562 
24
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) .def_562 ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
subs1 ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) 
subs1 ( not ( and .def_583 ( and .def_245 ( and .def_241 ( and .def_572 ( and .def_191 .def_396 ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_583 ( and .def_245 ( and .def_241 ( and .def_572 ( and .def_191 .def_396 ) ) ) ) ) ) 
.def_191 
72
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and .def_245 ( and .def_241 ( and .def_572 ( and .def_191 .def_396 ) ) ) ) ) ) '}
.def_241 
42
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and .def_245 ( and .def_241 ( and .def_572 ( and ( not ( = xpp_0 1009 ) ) .def_396 ) ) ) ) ) ) '}
.def_245 
27
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and .def_245 ( and ( not ( = xpp_1 383 ) ) ( and .def_572 ( and ( not ( = xpp_0 1009 ) ) .def_396 ) ) ) ) ) ) '}
.def_396 
128
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and .def_572 ( and ( not ( = xpp_0 1009 ) ) .def_396 ) ) ) ) ) ) '}
.def_572 
88
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and .def_572 ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
.def_583 
12
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and .def_583 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
subs1 ( not .def_582 ) 
remove lets from formula
subs2 ( not .def_582 ) 
.def_582 
6
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not .def_582 ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
subs1 ( not ( = xpp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 383 ) ) 
subs1 ( not ( = xpp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 1009 ) ) 
subs1 ( = xpp_1 1 ) 
remove lets from formula
subs2 ( = xpp_1 1 ) 
subs1 ( = xpp_0 xpp_1 ) 
remove lets from formula
subs2 ( = xpp_0 xpp_1 ) 
subs1 ( not .def_571 ) 
remove lets from formula
subs2 ( not .def_571 ) 
.def_571 
6
aux_vars_subs_dict {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not .def_571 ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
aux_vars_subs_dict  {'.def_118 ': '( = xpp_0 1 ) ', '.def_184 ': '( = xpp_0 383 ) ', '.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_396 ': '( = xpp_0 xpp_1 ) ', '.def_562 ': '( = xpp_1 8 ) ', '.def_563 ': '( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ', '.def_566 ': '( <= xpp_0 1 ) ', '.def_571 ': '( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ', '.def_572 ': '( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ', '.def_581 ': '( = xpp_1 1 ) ', '.def_582 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_583 ': '( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ', '.def_619 ': '( not ( = xpp_0 xpp_1 ) ) ', '.def_639 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
{20: 32, 9: 34, 7: 36, 57: 71, 46: 73, 44: 75, 102: 117, 96: 119, 85: 121, 83: 123, 150: 164, 144: 166, 133: 168, 131: 170, 197: 212, 191: 214, 180: 216, 178: 218, 239: 255, 228: 257, 226: 259, 280: 292, 269: 294, 267: 296, 317: 341, 306: 343, 304: 345, 366: 379, 355: 381, 353: 383, 424: 430, 445: 453, 455: 471, 441: 473, 432: 475, 420: 477, 410: 479, 404: 481, 393: 483, 391: 485, 506: 521, 495: 523, 493: 525, 546: 558, 535: 560, 533: 562, 603: 609, 624: 632, 634: 650, 620: 652, 611: 654, 599: 656, 589: 658, 583: 660, 572: 662, 570: 664, 685: 700, 674: 702, 672: 704, 725: 740, 714: 742, 712: 744, 831: 855, 816: 857, 801: 859, 786: 861, 771: 863, 765: 865, 754: 867, 752: 869, 877: 889, 897: 909, 986: 1009, 1023: 1047, 1049: 1064, 1017: 1066, 1011: 1068, 980: 1070, 974: 1072, 1101: 1124, 1147: 1162, 1132: 1164, 1126: 1166, 1095: 1168, 1089: 1170, 1074: 1172, 968: 1174, 962: 1176, 1190: 1205, 1207: 1231, 1184: 1233, 1178: 1235, 956: 1237, 1284: 1299, 1278: 1310, 1263: 1312, 1257: 1314, 1251: 1325, 1327: 1342, 1245: 1344, 1239: 1346, 950: 1348, 1413: 1437, 1398: 1439, 1383: 1441, 1377: 1443, 1362: 1445, 1468: 1492, 1453: 1494, 1447: 1496, 1356: 1498, 1350: 1500, 944: 1502, 929: 1504, 923: 1506, 1535: 1559, 1520: 1561, 1514: 1563, 1646: 1670, 1631: 1672, 1616: 1674, 1601: 1676, 1586: 1678, 1580: 1680, 1565: 1682, 1508: 1684, 917: 1686, 911: 1688, 891: 1690, 871: 1692, 746: 1694, 706: 1696, 666: 1698, 564: 1700, 527: 1702, 487: 1704, 385: 1706, 347: 1708, 298: 1710, 261: 1712, 220: 1714, 172: 1716, 125: 1718, 77: 1720, 38: 1722, 1: 1724}
{21: 35, 10: 37, 8: 39, 66: 81, 60: 83, 49: 85, 47: 87, 114: 128, 108: 130, 97: 132, 95: 134, 161: 176, 155: 178, 144: 180, 142: 182, 203: 219, 192: 221, 190: 223, 244: 256, 233: 258, 231: 260, 281: 305, 270: 307, 268: 309, 330: 343, 319: 345, 317: 347, 388: 394, 409: 417, 419: 435, 405: 437, 396: 439, 384: 441, 374: 443, 368: 445, 357: 447, 355: 449, 470: 485, 459: 487, 457: 489, 510: 522, 499: 524, 497: 526, 567: 573, 588: 596, 598: 614, 584: 616, 575: 618, 563: 620, 553: 622, 547: 624, 536: 626, 534: 628, 649: 664, 638: 666, 636: 668, 689: 704, 678: 706, 676: 708, 795: 819, 780: 821, 765: 823, 750: 825, 735: 827, 729: 829, 718: 831, 716: 833, 841: 853, 861: 873, 950: 973, 987: 1011, 1013: 1028, 981: 1030, 975: 1032, 944: 1034, 938: 1036, 1065: 1088, 1111: 1126, 1096: 1128, 1090: 1130, 1059: 1132, 1053: 1134, 1038: 1136, 932: 1138, 926: 1140, 1154: 1169, 1171: 1195, 1148: 1197, 1142: 1199, 920: 1201, 1248: 1263, 1242: 1274, 1227: 1276, 1221: 1278, 1215: 1289, 1291: 1306, 1209: 1308, 1203: 1310, 914: 1312, 1377: 1401, 1362: 1403, 1347: 1405, 1341: 1407, 1326: 1409, 1432: 1456, 1417: 1458, 1411: 1460, 1320: 1462, 1314: 1464, 908: 1466, 893: 1468, 887: 1470, 1499: 1523, 1484: 1525, 1478: 1527, 1610: 1634, 1595: 1636, 1580: 1638, 1565: 1640, 1550: 1642, 1544: 1644, 1529: 1646, 1472: 1648, 881: 1650, 875: 1652, 855: 1654, 835: 1656, 710: 1658, 670: 1660, 630: 1662, 528: 1664, 491: 1666, 451: 1668, 349: 1670, 311: 1672, 262: 1674, 225: 1676, 184: 1678, 136: 1680, 89: 1682, 41: 1684, 2: 1686}
{28: 43, 22: 45, 11: 47, 9: 49, 76: 90, 70: 92, 59: 94, 57: 96, 123: 138, 117: 140, 106: 142, 104: 144, 165: 181, 154: 183, 152: 185, 206: 218, 195: 220, 193: 222, 243: 267, 232: 269, 230: 271, 292: 305, 281: 307, 279: 309, 350: 356, 371: 379, 381: 397, 367: 399, 358: 401, 346: 403, 336: 405, 330: 407, 319: 409, 317: 411, 432: 447, 421: 449, 419: 451, 472: 484, 461: 486, 459: 488, 529: 535, 550: 558, 560: 576, 546: 578, 537: 580, 525: 582, 515: 584, 509: 586, 498: 588, 496: 590, 611: 626, 600: 628, 598: 630, 651: 666, 640: 668, 638: 670, 757: 781, 742: 783, 727: 785, 712: 787, 697: 789, 691: 791, 680: 793, 678: 795, 803: 815, 823: 835, 912: 935, 949: 973, 975: 990, 943: 992, 937: 994, 906: 996, 900: 998, 1027: 1050, 1073: 1088, 1058: 1090, 1052: 1092, 1021: 1094, 1015: 1096, 1000: 1098, 894: 1100, 888: 1102, 1116: 1131, 1133: 1157, 1110: 1159, 1104: 1161, 882: 1163, 1210: 1225, 1204: 1236, 1189: 1238, 1183: 1240, 1177: 1251, 1253: 1268, 1171: 1270, 1165: 1272, 876: 1274, 1339: 1363, 1324: 1365, 1309: 1367, 1303: 1369, 1288: 1371, 1394: 1418, 1379: 1420, 1373: 1422, 1282: 1424, 1276: 1426, 870: 1428, 855: 1430, 849: 1432, 1461: 1485, 1446: 1487, 1440: 1489, 1572: 1596, 1557: 1598, 1542: 1600, 1527: 1602, 1512: 1604, 1506: 1606, 1491: 1608, 1434: 1610, 843: 1612, 837: 1614, 817: 1616, 797: 1618, 672: 1620, 632: 1622, 592: 1624, 490: 1626, 453: 1628, 413: 1630, 311: 1632, 273: 1634, 224: 1636, 187: 1638, 146: 1640, 98: 1642, 51: 1644, 3: 1646}
{29: 43, 23: 45, 12: 47, 10: 49, 76: 91, 70: 93, 59: 95, 57: 97, 118: 134, 107: 136, 105: 138, 159: 171, 148: 173, 146: 175, 196: 220, 185: 222, 183: 224, 245: 258, 234: 260, 232: 262, 303: 309, 324: 332, 334: 350, 320: 352, 311: 354, 299: 356, 289: 358, 283: 360, 272: 362, 270: 364, 385: 400, 374: 402, 372: 404, 425: 437, 414: 439, 412: 441, 482: 488, 503: 511, 513: 529, 499: 531, 490: 533, 478: 535, 468: 537, 462: 539, 451: 541, 449: 543, 564: 579, 553: 581, 551: 583, 604: 619, 593: 621, 591: 623, 710: 734, 695: 736, 680: 738, 665: 740, 650: 742, 644: 744, 633: 746, 631: 748, 756: 768, 776: 788, 865: 888, 902: 926, 928: 943, 896: 945, 890: 947, 859: 949, 853: 951, 980: 1003, 1026: 1041, 1011: 1043, 1005: 1045, 974: 1047, 968: 1049, 953: 1051, 847: 1053, 841: 1055, 1069: 1084, 1086: 1110, 1063: 1112, 1057: 1114, 835: 1116, 1163: 1178, 1157: 1189, 1142: 1191, 1136: 1193, 1130: 1204, 1206: 1221, 1124: 1223, 1118: 1225, 829: 1227, 1292: 1316, 1277: 1318, 1262: 1320, 1256: 1322, 1241: 1324, 1347: 1371, 1332: 1373, 1326: 1375, 1235: 1377, 1229: 1379, 823: 1381, 808: 1383, 802: 1385, 1414: 1438, 1399: 1440, 1393: 1442, 1525: 1549, 1510: 1551, 1495: 1553, 1480: 1555, 1465: 1557, 1459: 1559, 1444: 1561, 1387: 1563, 796: 1565, 790: 1567, 770: 1569, 750: 1571, 625: 1573, 585: 1575, 545: 1577, 443: 1579, 406: 1581, 366: 1583, 264: 1585, 226: 1587, 177: 1589, 140: 1591, 99: 1593, 51: 1595, 4: 1597}
{30: 45, 24: 47, 13: 49, 11: 51, 72: 88, 61: 90, 59: 92, 113: 125, 102: 127, 100: 129, 150: 174, 139: 176, 137: 178, 199: 212, 188: 214, 186: 216, 257: 263, 278: 286, 288: 304, 274: 306, 265: 308, 253: 310, 243: 312, 237: 314, 226: 316, 224: 318, 339: 354, 328: 356, 326: 358, 379: 391, 368: 393, 366: 395, 436: 442, 457: 465, 467: 483, 453: 485, 444: 487, 432: 489, 422: 491, 416: 493, 405: 495, 403: 497, 518: 533, 507: 535, 505: 537, 558: 573, 547: 575, 545: 577, 664: 688, 649: 690, 634: 692, 619: 694, 604: 696, 598: 698, 587: 700, 585: 702, 710: 722, 730: 742, 819: 842, 856: 880, 882: 897, 850: 899, 844: 901, 813: 903, 807: 905, 934: 957, 980: 995, 965: 997, 959: 999, 928: 1001, 922: 1003, 907: 1005, 801: 1007, 795: 1009, 1023: 1038, 1040: 1064, 1017: 1066, 1011: 1068, 789: 1070, 1117: 1132, 1111: 1143, 1096: 1145, 1090: 1147, 1084: 1158, 1160: 1175, 1078: 1177, 1072: 1179, 783: 1181, 1246: 1270, 1231: 1272, 1216: 1274, 1210: 1276, 1195: 1278, 1301: 1325, 1286: 1327, 1280: 1329, 1189: 1331, 1183: 1333, 777: 1335, 762: 1337, 756: 1339, 1368: 1392, 1353: 1394, 1347: 1396, 1479: 1503, 1464: 1505, 1449: 1507, 1434: 1509, 1419: 1511, 1413: 1513, 1398: 1515, 1341: 1517, 750: 1519, 744: 1521, 724: 1523, 704: 1525, 579: 1527, 539: 1529, 499: 1531, 397: 1533, 360: 1535, 320: 1537, 218: 1539, 180: 1541, 131: 1543, 94: 1545, 53: 1547, 5: 1549}
{25: 41, 14: 43, 12: 45, 66: 78, 55: 80, 53: 82, 103: 127, 92: 129, 90: 131, 152: 165, 141: 167, 139: 169, 210: 216, 231: 239, 241: 257, 227: 259, 218: 261, 206: 263, 196: 265, 190: 267, 179: 269, 177: 271, 292: 307, 281: 309, 279: 311, 332: 344, 321: 346, 319: 348, 389: 395, 410: 418, 420: 436, 406: 438, 397: 440, 385: 442, 375: 444, 369: 446, 358: 448, 356: 450, 471: 486, 460: 488, 458: 490, 511: 526, 500: 528, 498: 530, 617: 641, 602: 643, 587: 645, 572: 647, 557: 649, 551: 651, 540: 653, 538: 655, 663: 675, 683: 695, 772: 795, 809: 833, 835: 850, 803: 852, 797: 854, 766: 856, 760: 858, 887: 910, 933: 948, 918: 950, 912: 952, 881: 954, 875: 956, 860: 958, 754: 960, 748: 962, 976: 991, 993: 1017, 970: 1019, 964: 1021, 742: 1023, 1070: 1085, 1064: 1096, 1049: 1098, 1043: 1100, 1037: 1111, 1113: 1128, 1031: 1130, 1025: 1132, 736: 1134, 1199: 1223, 1184: 1225, 1169: 1227, 1163: 1229, 1148: 1231, 1254: 1278, 1239: 1280, 1233: 1282, 1142: 1284, 1136: 1286, 730: 1288, 715: 1290, 709: 1292, 1321: 1345, 1306: 1347, 1300: 1349, 1432: 1456, 1417: 1458, 1402: 1460, 1387: 1462, 1372: 1464, 1366: 1466, 1351: 1468, 1294: 1470, 703: 1472, 697: 1474, 677: 1476, 657: 1478, 532: 1480, 492: 1482, 452: 1484, 350: 1486, 313: 1488, 273: 1490, 171: 1492, 133: 1494, 84: 1496, 47: 1498, 6: 1500}
{26: 38, 15: 40, 13: 42, 63: 87, 52: 89, 50: 91, 112: 125, 101: 127, 99: 129, 170: 176, 191: 199, 201: 217, 187: 219, 178: 221, 166: 223, 156: 225, 150: 227, 139: 229, 137: 231, 252: 267, 241: 269, 239: 271, 292: 304, 281: 306, 279: 308, 349: 355, 370: 378, 380: 396, 366: 398, 357: 400, 345: 402, 335: 404, 329: 406, 318: 408, 316: 410, 431: 446, 420: 448, 418: 450, 471: 486, 460: 488, 458: 490, 577: 601, 562: 603, 547: 605, 532: 607, 517: 609, 511: 611, 500: 613, 498: 615, 623: 635, 643: 655, 732: 755, 769: 793, 795: 810, 763: 812, 757: 814, 726: 816, 720: 818, 847: 870, 893: 908, 878: 910, 872: 912, 841: 914, 835: 916, 820: 918, 714: 920, 708: 922, 936: 951, 953: 977, 930: 979, 924: 981, 702: 983, 1030: 1045, 1024: 1056, 1009: 1058, 1003: 1060, 997: 1071, 1073: 1088, 991: 1090, 985: 1092, 696: 1094, 1159: 1183, 1144: 1185, 1129: 1187, 1123: 1189, 1108: 1191, 1214: 1238, 1199: 1240, 1193: 1242, 1102: 1244, 1096: 1246, 690: 1248, 675: 1250, 669: 1252, 1281: 1305, 1266: 1307, 1260: 1309, 1392: 1416, 1377: 1418, 1362: 1420, 1347: 1422, 1332: 1424, 1326: 1426, 1311: 1428, 1254: 1430, 663: 1432, 657: 1434, 637: 1436, 617: 1438, 492: 1440, 452: 1442, 412: 1444, 310: 1446, 273: 1448, 233: 1450, 131: 1452, 93: 1454, 44: 1456, 7: 1458}
{27: 51, 16: 53, 14: 55, 76: 89, 65: 91, 63: 93, 134: 140, 155: 163, 165: 181, 151: 183, 142: 185, 130: 187, 120: 189, 114: 191, 103: 193, 101: 195, 216: 231, 205: 233, 203: 235, 256: 268, 245: 270, 243: 272, 313: 319, 334: 342, 344: 360, 330: 362, 321: 364, 309: 366, 299: 368, 293: 370, 282: 372, 280: 374, 395: 410, 384: 412, 382: 414, 435: 450, 424: 452, 422: 454, 541: 565, 526: 567, 511: 569, 496: 571, 481: 573, 475: 575, 464: 577, 462: 579, 587: 599, 607: 619, 696: 719, 733: 757, 759: 774, 727: 776, 721: 778, 690: 780, 684: 782, 811: 834, 857: 872, 842: 874, 836: 876, 805: 878, 799: 880, 784: 882, 678: 884, 672: 886, 900: 915, 917: 941, 894: 943, 888: 945, 666: 947, 994: 1009, 988: 1020, 973: 1022, 967: 1024, 961: 1035, 1037: 1052, 955: 1054, 949: 1056, 660: 1058, 1123: 1147, 1108: 1149, 1093: 1151, 1087: 1153, 1072: 1155, 1178: 1202, 1163: 1204, 1157: 1206, 1066: 1208, 1060: 1210, 654: 1212, 639: 1214, 633: 1216, 1245: 1269, 1230: 1271, 1224: 1273, 1356: 1380, 1341: 1382, 1326: 1384, 1311: 1386, 1296: 1388, 1290: 1390, 1275: 1392, 1218: 1394, 627: 1396, 621: 1398, 601: 1400, 581: 1402, 456: 1404, 416: 1406, 376: 1408, 274: 1410, 237: 1412, 197: 1414, 95: 1416, 57: 1418, 8: 1420}
{28: 41, 17: 43, 15: 45, 86: 92, 107: 115, 117: 133, 103: 135, 94: 137, 82: 139, 72: 141, 66: 143, 55: 145, 53: 147, 168: 183, 157: 185, 155: 187, 208: 220, 197: 222, 195: 224, 265: 271, 286: 294, 296: 312, 282: 314, 273: 316, 261: 318, 251: 320, 245: 322, 234: 324, 232: 326, 347: 362, 336: 364, 334: 366, 387: 402, 376: 404, 374: 406, 493: 517, 478: 519, 463: 521, 448: 523, 433: 525, 427: 527, 416: 529, 414: 531, 539: 551, 559: 571, 648: 671, 685: 709, 711: 726, 679: 728, 673: 730, 642: 732, 636: 734, 763: 786, 809: 824, 794: 826, 788: 828, 757: 830, 751: 832, 736: 834, 630: 836, 624: 838, 852: 867, 869: 893, 846: 895, 840: 897, 618: 899, 946: 961, 940: 972, 925: 974, 919: 976, 913: 987, 989: 1004, 907: 1006, 901: 1008, 612: 1010, 1075: 1099, 1060: 1101, 1045: 1103, 1039: 1105, 1024: 1107, 1130: 1154, 1115: 1156, 1109: 1158, 1018: 1160, 1012: 1162, 606: 1164, 591: 1166, 585: 1168, 1197: 1221, 1182: 1223, 1176: 1225, 1308: 1332, 1293: 1334, 1278: 1336, 1263: 1338, 1248: 1340, 1242: 1342, 1227: 1344, 1170: 1346, 579: 1348, 573: 1350, 553: 1352, 533: 1354, 408: 1356, 368: 1358, 328: 1360, 226: 1362, 189: 1364, 149: 1366, 47: 1368, 9: 1370}
{49: 55, 70: 78, 80: 96, 66: 98, 57: 100, 45: 102, 35: 104, 29: 106, 18: 108, 16: 110, 131: 146, 120: 148, 118: 150, 171: 183, 160: 185, 158: 187, 228: 234, 249: 257, 259: 275, 245: 277, 236: 279, 224: 281, 214: 283, 208: 285, 197: 287, 195: 289, 310: 325, 299: 327, 297: 329, 350: 365, 339: 367, 337: 369, 456: 480, 441: 482, 426: 484, 411: 486, 396: 488, 390: 490, 379: 492, 377: 494, 502: 514, 522: 534, 611: 634, 648: 672, 674: 689, 642: 691, 636: 693, 605: 695, 599: 697, 726: 749, 772: 787, 757: 789, 751: 791, 720: 793, 714: 795, 699: 797, 593: 799, 587: 801, 815: 830, 832: 856, 809: 858, 803: 860, 581: 862, 909: 924, 903: 935, 888: 937, 882: 939, 876: 950, 952: 967, 870: 969, 864: 971, 575: 973, 1038: 1062, 1023: 1064, 1008: 1066, 1002: 1068, 987: 1070, 1093: 1117, 1078: 1119, 1072: 1121, 981: 1123, 975: 1125, 569: 1127, 554: 1129, 548: 1131, 1160: 1184, 1145: 1186, 1139: 1188, 1271: 1295, 1256: 1297, 1241: 1299, 1226: 1301, 1211: 1303, 1205: 1305, 1190: 1307, 1133: 1309, 542: 1311, 536: 1313, 516: 1315, 496: 1317, 371: 1319, 331: 1321, 291: 1323, 189: 1325, 152: 1327, 112: 1329, 10: 1331}
{30: 45, 19: 47, 17: 49, 70: 82, 59: 84, 57: 86, 127: 133, 148: 156, 158: 174, 144: 176, 135: 178, 123: 180, 113: 182, 107: 184, 96: 186, 94: 188, 209: 224, 198: 226, 196: 228, 249: 264, 238: 266, 236: 268, 355: 379, 340: 381, 325: 383, 310: 385, 295: 387, 289: 389, 278: 391, 276: 393, 401: 413, 421: 433, 510: 533, 547: 571, 573: 588, 541: 590, 535: 592, 504: 594, 498: 596, 625: 648, 671: 686, 656: 688, 650: 690, 619: 692, 613: 694, 598: 696, 492: 698, 486: 700, 714: 729, 731: 755, 708: 757, 702: 759, 480: 761, 808: 823, 802: 834, 787: 836, 781: 838, 775: 849, 851: 866, 769: 868, 763: 870, 474: 872, 937: 961, 922: 963, 907: 965, 901: 967, 886: 969, 992: 1016, 977: 1018, 971: 1020, 880: 1022, 874: 1024, 468: 1026, 453: 1028, 447: 1030, 1059: 1083, 1044: 1085, 1038: 1087, 1170: 1194, 1155: 1196, 1140: 1198, 1125: 1200, 1110: 1202, 1104: 1204, 1089: 1206, 1032: 1208, 441: 1210, 435: 1212, 415: 1214, 395: 1216, 270: 1218, 230: 1220, 190: 1222, 88: 1224, 51: 1226, 11: 1228}
{31: 43, 20: 45, 18: 47, 88: 94, 109: 117, 119: 135, 105: 137, 96: 139, 84: 141, 74: 143, 68: 145, 57: 147, 55: 149, 170: 185, 159: 187, 157: 189, 210: 225, 199: 227, 197: 229, 316: 340, 301: 342, 286: 344, 271: 346, 256: 348, 250: 350, 239: 352, 237: 354, 362: 374, 382: 394, 471: 494, 508: 532, 534: 549, 502: 551, 496: 553, 465: 555, 459: 557, 586: 609, 632: 647, 617: 649, 611: 651, 580: 653, 574: 655, 559: 657, 453: 659, 447: 661, 675: 690, 692: 716, 669: 718, 663: 720, 441: 722, 769: 784, 763: 795, 748: 797, 742: 799, 736: 810, 812: 827, 730: 829, 724: 831, 435: 833, 898: 922, 883: 924, 868: 926, 862: 928, 847: 930, 953: 977, 938: 979, 932: 981, 841: 983, 835: 985, 429: 987, 414: 989, 408: 991, 1020: 1044, 1005: 1046, 999: 1048, 1131: 1155, 1116: 1157, 1101: 1159, 1086: 1161, 1071: 1163, 1065: 1165, 1050: 1167, 993: 1169, 402: 1171, 396: 1173, 376: 1175, 356: 1177, 231: 1179, 191: 1181, 151: 1183, 49: 1185, 12: 1187}
{52: 58, 73: 81, 83: 99, 69: 101, 60: 103, 48: 105, 38: 107, 32: 109, 21: 111, 19: 113, 134: 149, 123: 151, 121: 153, 174: 189, 163: 191, 161: 193, 280: 304, 265: 306, 250: 308, 235: 310, 220: 312, 214: 314, 203: 316, 201: 318, 326: 338, 346: 358, 435: 458, 472: 496, 498: 513, 466: 515, 460: 517, 429: 519, 423: 521, 550: 573, 596: 611, 581: 613, 575: 615, 544: 617, 538: 619, 523: 621, 417: 623, 411: 625, 639: 654, 656: 680, 633: 682, 627: 684, 405: 686, 733: 748, 727: 759, 712: 761, 706: 763, 700: 774, 776: 791, 694: 793, 688: 795, 399: 797, 862: 886, 847: 888, 832: 890, 826: 892, 811: 894, 917: 941, 902: 943, 896: 945, 805: 947, 799: 949, 393: 951, 378: 953, 372: 955, 984: 1008, 969: 1010, 963: 1012, 1095: 1119, 1080: 1121, 1065: 1123, 1050: 1125, 1035: 1127, 1029: 1129, 1014: 1131, 957: 1133, 366: 1135, 360: 1137, 340: 1139, 320: 1141, 195: 1143, 155: 1145, 115: 1147, 13: 1149}
{33: 48, 22: 50, 20: 52, 73: 88, 62: 90, 60: 92, 179: 203, 164: 205, 149: 207, 134: 209, 119: 211, 113: 213, 102: 215, 100: 217, 225: 237, 245: 257, 334: 357, 371: 395, 397: 412, 365: 414, 359: 416, 328: 418, 322: 420, 449: 472, 495: 510, 480: 512, 474: 514, 443: 516, 437: 518, 422: 520, 316: 522, 310: 524, 538: 553, 555: 579, 532: 581, 526: 583, 304: 585, 632: 647, 626: 658, 611: 660, 605: 662, 599: 673, 675: 690, 593: 692, 587: 694, 298: 696, 761: 785, 746: 787, 731: 789, 725: 791, 710: 793, 816: 840, 801: 842, 795: 844, 704: 846, 698: 848, 292: 850, 277: 852, 271: 854, 883: 907, 868: 909, 862: 911, 994: 1018, 979: 1020, 964: 1022, 949: 1024, 934: 1026, 928: 1028, 913: 1030, 856: 1032, 265: 1034, 259: 1036, 239: 1038, 219: 1040, 94: 1042, 54: 1044, 14: 1046}
{34: 49, 23: 51, 21: 53, 140: 164, 125: 166, 110: 168, 95: 170, 80: 172, 74: 174, 63: 176, 61: 178, 186: 198, 206: 218, 295: 318, 332: 356, 358: 373, 326: 375, 320: 377, 289: 379, 283: 381, 410: 433, 456: 471, 441: 473, 435: 475, 404: 477, 398: 479, 383: 481, 277: 483, 271: 485, 499: 514, 516: 540, 493: 542, 487: 544, 265: 546, 593: 608, 587: 619, 572: 621, 566: 623, 560: 634, 636: 651, 554: 653, 548: 655, 259: 657, 722: 746, 707: 748, 692: 750, 686: 752, 671: 754, 777: 801, 762: 803, 756: 805, 665: 807, 659: 809, 253: 811, 238: 813, 232: 815, 844: 868, 829: 870, 823: 872, 955: 979, 940: 981, 925: 983, 910: 985, 895: 987, 889: 989, 874: 991, 817: 993, 226: 995, 220: 997, 200: 999, 180: 1001, 55: 1003, 15: 1005}
{101: 125, 86: 127, 71: 129, 56: 131, 41: 133, 35: 135, 24: 137, 22: 139, 147: 159, 167: 179, 256: 279, 293: 317, 319: 334, 287: 336, 281: 338, 250: 340, 244: 342, 371: 394, 417: 432, 402: 434, 396: 436, 365: 438, 359: 440, 344: 442, 238: 444, 232: 446, 460: 475, 477: 501, 454: 503, 448: 505, 226: 507, 554: 569, 548: 580, 533: 582, 527: 584, 521: 595, 597: 612, 515: 614, 509: 616, 220: 618, 683: 707, 668: 709, 653: 711, 647: 713, 632: 715, 738: 762, 723: 764, 717: 766, 626: 768, 620: 770, 214: 772, 199: 774, 193: 776, 805: 829, 790: 831, 784: 833, 916: 940, 901: 942, 886: 944, 871: 946, 856: 948, 850: 950, 835: 952, 778: 954, 187: 956, 181: 958, 161: 960, 141: 962, 16: 964}
remove lets from formula
final_formula  ( and ( = hpp_1 1 ) ( and ( = hpp_0 1 ) ( not ( and ( not ( and .def_191 ( and ( and ( and ( not ( and ( not ( and ( or .def_118 .def_563 ) ( not ( and ( and .def_184 .def_619 ) ( not .def_566 ) ) ) ) ) ( and .def_191 ( not ( and ( or .def_396 .def_566 ) ( not ( and .def_571 ( not .def_563 ) ) ) ) ) ) ) ) ( not ( and ( not .def_118 ) ( and .def_191 .def_619 ) ) ) ) ( not ( and ( and ( not ( and .def_563 ( and ( not .def_184 ) .def_396 ) ) ) .def_639 ) ( not .def_581 ) ) ) ) ( not ( and ( and .def_639 ( not ( and .def_118 ( and .def_245 ( and .def_241 .def_396 ) ) ) ) ) ( not ( and .def_245 ( and .def_241 .def_562 ) ) ) ) ) ) ) ) ( and ( not ( and .def_582 ( and .def_563 .def_571 ) ) ) ( and .def_639 ( not ( and .def_583 ( and .def_241 ( and .def_245 ( and .def_581 ( and .def_396 .def_572 ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hpp_1 1 ) ( and ( = hpp_0 1 ) ( not ( and ( not ( and ( not ( = xpp_0 1009 ) ) ( and ( and ( and ( not ( and ( not ( and ( or ( = xpp_0 1 ) ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( not ( and ( and ( = xpp_0 383 ) ( not ( = xpp_0 xpp_1 ) ) ) ( not ( <= xpp_0 1 ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( not ( and ( or ( = xpp_0 xpp_1 ) ( <= xpp_0 1 ) ) ( not ( and ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xpp_0 1 ) ) ( and ( not ( = xpp_0 1009 ) ) ( not ( = xpp_0 xpp_1 ) ) ) ) ) ) ( not ( and ( and ( not ( and ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ( and ( not ( = xpp_0 383 ) ) ( = xpp_0 xpp_1 ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ( not ( = xpp_1 1 ) ) ) ) ) ( not ( and ( and ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ( not ( and ( = xpp_0 1 ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ( not ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( = xpp_1 8 ) ) ) ) ) ) ) ) ) ( and ( not ( and ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ( and ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ( and ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( = xpp_1 1 ) ( and ( = xpp_0 xpp_1 ) ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ']
new_pred_smt_format ['(declare-rel pred_0_synth_msat_2 (Int Int Int))\n (rule (=>  ( = (rel x 1) 1  ) (pred_0_synth_msat_2 x h count)))']
['(declare-rel pred_0_synth_msat_2 (Int Int Int))\n (rule (=>  ( = (rel x 1) 1  ) (pred_0_synth_msat_2 x h count)))']
Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied.
Pre-processing time:	0.045226 
Solver time:	1.170591
Total time:	1.215817
Iteration count:	6
Predicate count:	6
Successfully added new predicate to input file. !
Start next refinement loop: True



PDSC: Verifying ./Benchmarks_msat/subsume_ref_ref.smt2
Namespace(file='./Benchmarks_msat/subsume_ref_ref.smt2', log=False, msat=True, property=None, qe=False, sygus=False)
In if ladder True
Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, ]
--->[2]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
count_0_1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
count_0_1, ]
--->[1]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]


6 SMT queries performed.
before complete_trace: [abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]


after complete_trace [abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, ]
--->[-1]


-----------------------------------check_spur-------------------------------
final init cond And(0 == count_0,
    0 == count_1,
    And(x_0 == x_1, h_0 == 1, h_1 == 1))
Initial concrete state  {'x_1': 2, 'count_0_1': True, 'abs_h_1': True, 'count_0_0': True, 'abs_h_0': True, 'pred_0_synth_msat_2': False, 'pred_0_synth_msat_1': False, 'x0_eq_x1': True, 'h_1': 1, 'h_0': 1, 'x_0': 2, 'count_1': 0, 'count_0': 0}
Next concrete state {'count_1': 1, 'x_1': 2, 'count_0': 0, 'h_0': 1, 'x_0': 2, 'h_1': 1}
Writing an smt file to be run using mathsat
Checking output from mathsat 5
hi
paren_dict {19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 89: 99, 79: 101, 77: 103, 130: 144, 124: 146, 113: 148, 111: 150, 199: 222, 185: 224, 171: 226, 160: 228, 158: 230, 265: 289, 251: 291, 240: 293, 238: 295, 352: 366, 346: 368, 413: 437, 399: 439, 384: 441, 370: 443, 340: 445, 325: 447, 311: 449, 297: 451, 232: 453, 152: 455, 105: 457, 71: 459, 37: 461, 1: 463}
aux_vars_first_occ_dict {'.def_17 ': 11, '.def_20 ': 47, '.def_22 ': 81, '.def_411 ': 115, '.def_416 ': 162, '.def_418 ': 242}
aux_vars_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_411 ': '( not ( = count_1 1 ) ) ', '.def_416 ': '( and .def_17 ( and .def_22 ( and .def_17 .def_411 ) ) ) ', '.def_418 ': '( and .def_22 ( and .def_411 .def_416 ) ) '}
subs1 ( = x_0 x_1 ) 
remove lets from formula
subs2 ( = x_0 x_1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( and .def_17 ( and .def_22 ( and .def_17 .def_411 ) ) ) 
remove lets from formula
subs2 ( and .def_17 ( and .def_22 ( and .def_17 .def_411 ) ) ) 
.def_17 
34
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_411 ': '( not ( = count_1 1 ) ) '}
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_411 ': '( not ( = count_1 1 ) ) '}
.def_22 
26
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_411 ': '( not ( = count_1 1 ) ) ', '.def_416 ': '( and ( = x_0 x_1 ) ( and .def_22 ( and ( = x_0 x_1 ) .def_411 ) ) ) '}
.def_411 
58
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_411 ': '( not ( = count_1 1 ) ) ', '.def_416 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) .def_411 ) ) ) '}
subs1 ( = x_0 x_1 ) 
remove lets from formula
subs2 ( = x_0 x_1 ) 
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( = x_0 x_1 ) 
remove lets from formula
subs2 ( = x_0 x_1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( and .def_22 ( and .def_411 .def_416 ) ) 
remove lets from formula
subs2 ( and .def_22 ( and .def_411 .def_416 ) ) 
.def_22 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_411 ': '( not ( = count_1 1 ) ) ', '.def_416 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_418 ': '( and .def_22 ( and .def_411 .def_416 ) ) '}
.def_411 
24
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_411 ': '( not ( = count_1 1 ) ) ', '.def_416 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_418 ': '( and ( = h_1 1 ) ( and .def_411 .def_416 ) ) '}
.def_416 
48
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_411 ': '( not ( = count_1 1 ) ) ', '.def_416 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_418 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) .def_416 ) ) '}
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( and .def_17 ( and .def_22 ( and .def_17 .def_411 ) ) ) 
remove lets from formula
subs2 ( and .def_17 ( and .def_22 ( and .def_17 .def_411 ) ) ) 
.def_17 
34
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_411 ': '( not ( = count_1 1 ) ) ', '.def_416 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_418 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) '}
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_411 ': '( not ( = count_1 1 ) ) ', '.def_416 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_418 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) '}
.def_22 
26
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_411 ': '( not ( = count_1 1 ) ) ', '.def_416 ': '( and ( = x_0 x_1 ) ( and .def_22 ( and ( = x_0 x_1 ) .def_411 ) ) ) ', '.def_418 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) '}
.def_411 
58
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_411 ': '( not ( = count_1 1 ) ) ', '.def_416 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) .def_411 ) ) ) ', '.def_418 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) '}
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( and .def_22 ( and .def_411 .def_416 ) ) 
remove lets from formula
subs2 ( and .def_22 ( and .def_411 .def_416 ) ) 
.def_22 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_411 ': '( not ( = count_1 1 ) ) ', '.def_416 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_418 ': '( and .def_22 ( and .def_411 .def_416 ) ) '}
.def_411 
24
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_411 ': '( not ( = count_1 1 ) ) ', '.def_416 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_418 ': '( and ( = h_1 1 ) ( and .def_411 .def_416 ) ) '}
.def_416 
48
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_411 ': '( not ( = count_1 1 ) ) ', '.def_416 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_418 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) .def_416 ) ) '}
subs1 ( = x_0 x_1 ) 
remove lets from formula
subs2 ( = x_0 x_1 ) 
subs1 ( and .def_17 ( and .def_22 ( and .def_17 .def_411 ) ) ) 
remove lets from formula
subs2 ( and .def_17 ( and .def_22 ( and .def_17 .def_411 ) ) ) 
.def_17 
34
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_411 ': '( not ( = count_1 1 ) ) ', '.def_416 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_418 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) '}
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_411 ': '( not ( = count_1 1 ) ) ', '.def_416 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_418 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) '}
.def_22 
26
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_411 ': '( not ( = count_1 1 ) ) ', '.def_416 ': '( and ( = x_0 x_1 ) ( and .def_22 ( and ( = x_0 x_1 ) .def_411 ) ) ) ', '.def_418 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) '}
.def_411 
58
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_411 ': '( not ( = count_1 1 ) ) ', '.def_416 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) .def_411 ) ) ) ', '.def_418 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) '}
subs1 ( and .def_22 ( and .def_411 .def_416 ) ) 
remove lets from formula
subs2 ( and .def_22 ( and .def_411 .def_416 ) ) 
.def_22 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_411 ': '( not ( = count_1 1 ) ) ', '.def_416 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_418 ': '( and .def_22 ( and .def_411 .def_416 ) ) '}
.def_411 
24
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_411 ': '( not ( = count_1 1 ) ) ', '.def_416 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_418 ': '( and ( = h_1 1 ) ( and .def_411 .def_416 ) ) '}
.def_416 
48
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_411 ': '( not ( = count_1 1 ) ) ', '.def_416 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_418 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) .def_416 ) ) '}
aux_vars_subs_dict  {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_411 ': '( not ( = count_1 1 ) ) ', '.def_416 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ', '.def_418 ': '( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) '}
{19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 89: 99, 79: 101, 77: 103, 130: 144, 124: 146, 113: 148, 111: 150, 199: 222, 185: 224, 171: 226, 160: 228, 158: 230, 265: 289, 251: 291, 240: 293, 238: 295, 352: 366, 346: 368, 413: 437, 399: 439, 384: 441, 370: 443, 340: 445, 325: 447, 311: 449, 297: 451, 232: 453, 152: 455, 105: 457, 71: 459, 37: 461, 1: 463}
{20: 30, 10: 32, 8: 34, 54: 64, 44: 66, 42: 68, 95: 109, 89: 111, 78: 113, 76: 115, 164: 187, 150: 189, 136: 191, 125: 193, 123: 195, 230: 254, 216: 256, 205: 258, 203: 260, 317: 331, 311: 333, 378: 402, 364: 404, 349: 406, 335: 408, 305: 410, 290: 412, 276: 414, 262: 416, 197: 418, 117: 420, 70: 422, 36: 424, 2: 426}
{21: 31, 11: 33, 9: 35, 62: 76, 56: 78, 45: 80, 43: 82, 131: 154, 117: 156, 103: 158, 92: 160, 90: 162, 197: 221, 183: 223, 172: 225, 170: 227, 284: 298, 278: 300, 345: 369, 331: 371, 316: 373, 302: 375, 272: 377, 257: 379, 243: 381, 229: 383, 164: 385, 84: 387, 37: 389, 3: 391}
{29: 43, 23: 45, 12: 47, 10: 49, 98: 121, 84: 123, 70: 125, 59: 127, 57: 129, 164: 188, 150: 190, 139: 192, 137: 194, 251: 265, 245: 267, 312: 336, 298: 338, 283: 340, 269: 342, 239: 344, 224: 346, 210: 348, 196: 350, 131: 352, 51: 354, 4: 356}
{52: 75, 38: 77, 24: 79, 13: 81, 11: 83, 118: 142, 104: 144, 93: 146, 91: 148, 205: 219, 199: 221, 266: 290, 252: 292, 237: 294, 223: 296, 193: 298, 178: 300, 164: 302, 150: 304, 85: 306, 5: 308}
{39: 63, 25: 65, 14: 67, 12: 69, 126: 140, 120: 142, 187: 211, 173: 213, 158: 215, 144: 217, 114: 219, 99: 221, 85: 223, 71: 225, 6: 227}
remove lets from formula
final_formula  ( and .def_22 ( and .def_20 ( and .def_411 ( and ( not ( = count_0 1 ) ) ( and .def_20 ( and .def_418 ( and .def_17 ( and .def_416 .def_418 ) ) ) ) ) ) ) ) 
[' ( and ( = h_1 1 ) ( and ( = h_0 1 ) ( and ( not ( = count_1 1 ) ) ( and ( not ( = count_0 1 ) ) ( and ( = h_0 1 ) ( and ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ( and ( = x_0 x_1 ) ( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {19: 30, 9: 32, 7: 34, 54: 65, 44: 67, 42: 69, 90: 101, 79: 103, 77: 105, 132: 146, 126: 148, 115: 150, 113: 152, 192: 198, 213: 221, 223: 238, 209: 240, 200: 242, 188: 244, 179: 246, 173: 248, 162: 250, 160: 252, 273: 288, 262: 290, 260: 292, 340: 353, 334: 355, 388: 394, 409: 417, 419: 434, 405: 436, 396: 438, 384: 440, 375: 442, 369: 444, 363: 446, 460: 474, 454: 476, 490: 503, 484: 505, 537: 551, 522: 553, 507: 555, 478: 557, 448: 559, 357: 561, 328: 563, 313: 565, 302: 567, 300: 569, 618: 640, 603: 642, 590: 644, 579: 646, 577: 648, 677: 692, 671: 694, 702: 713, 778: 802, 765: 804, 750: 806, 808: 831, 745: 833, 730: 835, 715: 837, 696: 839, 665: 841, 650: 843, 571: 845, 294: 847, 254: 849, 154: 851, 107: 853, 71: 855, 36: 857, 1: 859}
aux_vars_first_occ_dict {'.def_47 ': 11, '.def_53 ': 46, '.def_100 ': 81, '.def_127 ': 117, '.def_429 ': 164, '.def_430 ': 264, '.def_448 ': 304, '.def_451 ': 581}
aux_vars_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not .def_429 ) ', '.def_448 ': '( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_430 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_451 ': '( or .def_47 ( and .def_430 ( or .def_53 .def_448 ) ) ) '}
subs1 ( = xp_1 8 ) 
remove lets from formula
subs2 ( = xp_1 8 ) 
subs1 ( = xp_1 1 ) 
remove lets from formula
subs2 ( = xp_1 1 ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( not ( = xp_0 1009 ) ) 
remove lets from formula
subs2 ( not ( = xp_0 1009 ) ) 
subs1 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
subs1 ( not .def_429 ) 
remove lets from formula
subs2 ( not .def_429 ) 
.def_429 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not .def_429 ) '}
subs1 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
subs1 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_430 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_430 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) 
.def_127 
215
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_448 ': '( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_430 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) '}
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_448 ': '( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_430 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) '}
.def_430 
215
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_448 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_430 ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) '}
subs1 ( not ( = xp_0 1009 ) ) 
remove lets from formula
subs2 ( not ( = xp_0 1009 ) ) 
subs1 ( not .def_429 ) 
remove lets from formula
subs2 ( not .def_429 ) 
.def_429 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not .def_429 ) ', '.def_448 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) '}
subs1 ( not ( = xp_0 1009 ) ) 
remove lets from formula
subs2 ( not ( = xp_0 1009 ) ) 
subs1 ( or .def_47 ( and .def_430 ( or .def_53 .def_448 ) ) ) 
remove lets from formula
subs2 ( or .def_47 ( and .def_430 ( or .def_53 .def_448 ) ) ) 
.def_47 
5
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_448 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) '}
.def_53 
38
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_448 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_451 ': '( or ( = xp_1 8 ) ( and .def_430 ( or .def_53 .def_448 ) ) ) '}
.def_430 
24
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_448 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_451 ': '( or ( = xp_1 8 ) ( and .def_430 ( or ( = xp_1 1 ) .def_448 ) ) ) '}
.def_448 
127
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_448 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_451 ': '( or ( = xp_1 8 ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( or ( = xp_1 1 ) .def_448 ) ) ) '}
subs1 ( = xp_1 8 ) 
remove lets from formula
subs2 ( = xp_1 8 ) 
subs1 ( not .def_429 ) 
remove lets from formula
subs2 ( not .def_429 ) 
.def_429 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not .def_429 ) ', '.def_448 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_451 ': '( or ( = xp_1 8 ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( or ( = xp_1 1 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( = xp_1 1 ) 
remove lets from formula
subs2 ( = xp_1 1 ) 
subs1 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_430 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_430 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) 
.def_127 
215
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_448 ': '( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_430 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_451 ': '( or ( = xp_1 8 ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( or ( = xp_1 1 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) '}
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_448 ': '( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_430 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_451 ': '( or ( = xp_1 8 ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( or ( = xp_1 1 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) '}
.def_430 
215
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_448 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_430 ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_451 ': '( or ( = xp_1 8 ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( or ( = xp_1 1 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( or .def_47 ( and .def_430 ( or .def_53 .def_448 ) ) ) 
remove lets from formula
subs2 ( or .def_47 ( and .def_430 ( or .def_53 .def_448 ) ) ) 
.def_47 
5
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_448 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_451 ': '( or ( = xp_1 8 ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( or ( = xp_1 1 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) '}
.def_53 
38
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_448 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_451 ': '( or ( = xp_1 8 ) ( and .def_430 ( or .def_53 .def_448 ) ) ) '}
.def_430 
24
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_448 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_451 ': '( or ( = xp_1 8 ) ( and .def_430 ( or ( = xp_1 1 ) .def_448 ) ) ) '}
.def_448 
127
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_448 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_451 ': '( or ( = xp_1 8 ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( or ( = xp_1 1 ) .def_448 ) ) ) '}
subs1 ( or .def_47 ( and .def_430 ( or .def_53 .def_448 ) ) ) 
remove lets from formula
subs2 ( or .def_47 ( and .def_430 ( or .def_53 .def_448 ) ) ) 
.def_47 
5
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_448 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_451 ': '( or ( = xp_1 8 ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( or ( = xp_1 1 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) '}
.def_53 
38
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_448 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_451 ': '( or ( = xp_1 8 ) ( and .def_430 ( or .def_53 .def_448 ) ) ) '}
.def_430 
24
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_448 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_451 ': '( or ( = xp_1 8 ) ( and .def_430 ( or ( = xp_1 1 ) .def_448 ) ) ) '}
.def_448 
127
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_448 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_451 ': '( or ( = xp_1 8 ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( or ( = xp_1 1 ) .def_448 ) ) ) '}
subs1 ( = xp_1 1 ) 
remove lets from formula
subs2 ( = xp_1 1 ) 
subs1 ( not .def_429 ) 
remove lets from formula
subs2 ( not .def_429 ) 
.def_429 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not .def_429 ) ', '.def_448 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_451 ': '( or ( = xp_1 8 ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( or ( = xp_1 1 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_430 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_430 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) 
.def_127 
215
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_448 ': '( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_430 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_451 ': '( or ( = xp_1 8 ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( or ( = xp_1 1 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) '}
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_448 ': '( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_430 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_451 ': '( or ( = xp_1 8 ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( or ( = xp_1 1 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) '}
.def_430 
215
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_448 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_430 ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_451 ': '( or ( = xp_1 8 ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( or ( = xp_1 1 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) '}
subs1 ( = xp_1 8 ) 
remove lets from formula
subs2 ( = xp_1 8 ) 
subs1 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
aux_vars_subs_dict  {'.def_47 ': '( = xp_1 8 ) ', '.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_429 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_430 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_448 ': '( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ', '.def_451 ': '( or ( = xp_1 8 ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( or ( = xp_1 1 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) '}
{19: 30, 9: 32, 7: 34, 54: 65, 44: 67, 42: 69, 90: 101, 79: 103, 77: 105, 132: 146, 126: 148, 115: 150, 113: 152, 192: 198, 213: 221, 223: 238, 209: 240, 200: 242, 188: 244, 179: 246, 173: 248, 162: 250, 160: 252, 273: 288, 262: 290, 260: 292, 340: 353, 334: 355, 388: 394, 409: 417, 419: 434, 405: 436, 396: 438, 384: 440, 375: 442, 369: 444, 363: 446, 460: 474, 454: 476, 490: 503, 484: 505, 537: 551, 522: 553, 507: 555, 478: 557, 448: 559, 357: 561, 328: 563, 313: 565, 302: 567, 300: 569, 618: 640, 603: 642, 590: 644, 579: 646, 577: 648, 677: 692, 671: 694, 702: 713, 778: 802, 765: 804, 750: 806, 808: 831, 745: 833, 730: 835, 715: 837, 696: 839, 665: 841, 650: 843, 571: 845, 294: 847, 254: 849, 154: 851, 107: 853, 71: 855, 36: 857, 1: 859}
{20: 31, 10: 33, 8: 35, 56: 67, 45: 69, 43: 71, 98: 112, 92: 114, 81: 116, 79: 118, 158: 164, 179: 187, 189: 204, 175: 206, 166: 208, 154: 210, 145: 212, 139: 214, 128: 216, 126: 218, 239: 254, 228: 256, 226: 258, 306: 319, 300: 321, 354: 360, 375: 383, 385: 400, 371: 402, 362: 404, 350: 406, 341: 408, 335: 410, 329: 412, 426: 440, 420: 442, 456: 469, 450: 471, 503: 517, 488: 519, 473: 521, 444: 523, 414: 525, 323: 527, 294: 529, 279: 531, 268: 533, 266: 535, 584: 606, 569: 608, 556: 610, 545: 612, 543: 614, 643: 658, 637: 660, 668: 679, 744: 768, 731: 770, 716: 772, 774: 797, 711: 799, 696: 801, 681: 803, 662: 805, 631: 807, 616: 809, 537: 811, 260: 813, 220: 815, 120: 817, 73: 819, 37: 821, 2: 823}
{22: 33, 11: 35, 9: 37, 64: 78, 58: 80, 47: 82, 45: 84, 124: 130, 145: 153, 155: 170, 141: 172, 132: 174, 120: 176, 111: 178, 105: 180, 94: 182, 92: 184, 205: 220, 194: 222, 192: 224, 272: 285, 266: 287, 320: 326, 341: 349, 351: 366, 337: 368, 328: 370, 316: 372, 307: 374, 301: 376, 295: 378, 392: 406, 386: 408, 422: 435, 416: 437, 469: 483, 454: 485, 439: 487, 410: 489, 380: 491, 289: 493, 260: 495, 245: 497, 234: 499, 232: 501, 550: 572, 535: 574, 522: 576, 511: 578, 509: 580, 609: 624, 603: 626, 634: 645, 710: 734, 697: 736, 682: 738, 740: 763, 677: 765, 662: 767, 647: 769, 628: 771, 597: 773, 582: 775, 503: 777, 226: 779, 186: 781, 86: 783, 39: 785, 3: 787}
{29: 43, 23: 45, 12: 47, 10: 49, 89: 95, 110: 118, 120: 135, 106: 137, 97: 139, 85: 141, 76: 143, 70: 145, 59: 147, 57: 149, 170: 185, 159: 187, 157: 189, 237: 250, 231: 252, 285: 291, 306: 314, 316: 331, 302: 333, 293: 335, 281: 337, 272: 339, 266: 341, 260: 343, 357: 371, 351: 373, 387: 400, 381: 402, 434: 448, 419: 450, 404: 452, 375: 454, 345: 456, 254: 458, 225: 460, 210: 462, 199: 464, 197: 466, 515: 537, 500: 539, 487: 541, 476: 543, 474: 545, 574: 589, 568: 591, 599: 610, 675: 699, 662: 701, 647: 703, 705: 728, 642: 730, 627: 732, 612: 734, 593: 736, 562: 738, 547: 740, 468: 742, 191: 744, 151: 746, 51: 748, 4: 750}
{43: 49, 64: 72, 74: 89, 60: 91, 51: 93, 39: 95, 30: 97, 24: 99, 13: 101, 11: 103, 124: 139, 113: 141, 111: 143, 191: 204, 185: 206, 239: 245, 260: 268, 270: 285, 256: 287, 247: 289, 235: 291, 226: 293, 220: 295, 214: 297, 311: 325, 305: 327, 341: 354, 335: 356, 388: 402, 373: 404, 358: 406, 329: 408, 299: 410, 208: 412, 179: 414, 164: 416, 153: 418, 151: 420, 469: 491, 454: 493, 441: 495, 430: 497, 428: 499, 528: 543, 522: 545, 553: 564, 629: 653, 616: 655, 601: 657, 659: 682, 596: 684, 581: 686, 566: 688, 547: 690, 516: 692, 501: 694, 422: 696, 145: 698, 105: 700, 5: 702}
{25: 40, 14: 42, 12: 44, 92: 105, 86: 107, 140: 146, 161: 169, 171: 186, 157: 188, 148: 190, 136: 192, 127: 194, 121: 196, 115: 198, 212: 226, 206: 228, 242: 255, 236: 257, 289: 303, 274: 305, 259: 307, 230: 309, 200: 311, 109: 313, 80: 315, 65: 317, 54: 319, 52: 321, 370: 392, 355: 394, 342: 396, 331: 398, 329: 400, 429: 444, 423: 446, 454: 465, 530: 554, 517: 556, 502: 558, 560: 583, 497: 585, 482: 587, 467: 589, 448: 591, 417: 593, 402: 595, 323: 597, 46: 599, 6: 601}
{53: 66, 47: 68, 101: 107, 122: 130, 132: 147, 118: 149, 109: 151, 97: 153, 88: 155, 82: 157, 76: 159, 173: 187, 167: 189, 203: 216, 197: 218, 250: 264, 235: 266, 220: 268, 191: 270, 161: 272, 70: 274, 41: 276, 26: 278, 15: 280, 13: 282, 331: 353, 316: 355, 303: 357, 292: 359, 290: 361, 390: 405, 384: 407, 415: 426, 491: 515, 478: 517, 463: 519, 521: 544, 458: 546, 443: 548, 428: 550, 409: 552, 378: 554, 363: 556, 284: 558, 7: 560}
{55: 77, 40: 79, 27: 81, 16: 83, 14: 85, 114: 129, 108: 131, 139: 150, 215: 239, 202: 241, 187: 243, 245: 268, 182: 270, 167: 272, 152: 274, 133: 276, 102: 278, 87: 280, 8: 282}
remove lets from formula
final_formula  ( and .def_100 ( and ( not ( = countp_0 1 ) ) ( and ( = hp_1 1 ) ( and .def_100 ( and .def_451 ( or ( and .def_451 ( or .def_53 ( and .def_430 .def_448 ) ) ) ( and .def_47 .def_429 ) ) ) ) ) ) ) 
[' ( and ( = hp_0 1 ) ( and ( not ( = countp_0 1 ) ) ( and ( = hp_1 1 ) ( and ( = hp_0 1 ) ( and ( or ( = xp_1 8 ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( or ( = xp_1 1 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ( or ( and ( or ( = xp_1 8 ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( or ( = xp_1 1 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ( or ( = xp_1 1 ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {26: 41, 20: 43, 9: 45, 7: 47, 68: 84, 57: 86, 55: 88, 109: 121, 98: 123, 96: 125, 178: 184, 199: 207, 209: 225, 195: 227, 186: 229, 174: 231, 164: 233, 158: 235, 152: 237, 251: 266, 245: 268, 282: 296, 276: 298, 332: 338, 353: 361, 363: 379, 349: 381, 340: 383, 328: 385, 318: 387, 312: 389, 306: 391, 393: 417, 300: 419, 270: 421, 239: 423, 146: 425, 135: 427, 133: 429, 450: 462, 439: 464, 437: 466, 505: 520, 522: 537, 499: 539, 541: 556, 493: 558, 487: 560, 476: 562, 474: 564, 572: 584, 592: 604, 668: 682, 662: 684, 656: 695, 641: 697, 626: 699, 707: 730, 701: 741, 621: 743, 606: 745, 586: 747, 566: 749, 468: 751, 431: 753, 127: 755, 90: 757, 49: 759, 1: 761}
aux_vars_first_occ_dict {'.def_191 ': 11, '.def_400 ': 59, '.def_473 ': 100, '.def_482 ': 137, '.def_483 ': 441, '.def_499 ': 478}
aux_vars_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_400 ': '( = xpp_0 xpp_1 ) ', '.def_473 ': '( = xpp_1 8 ) ', '.def_482 ': '( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and .def_191 .def_400 ) ) ) ) ) ', '.def_483 ': '( = xpp_1 1 ) ', '.def_499 ': '( not ( and ( and ( not .def_482 ) ( not .def_483 ) ) ( not .def_473 ) ) ) '}
subs1 ( not ( = xpp_0 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_0 1009 ) ) 
subs1 ( = xpp_0 xpp_1 ) 
remove lets from formula
subs2 ( = xpp_0 xpp_1 ) 
subs1 ( = xpp_1 8 ) 
remove lets from formula
subs2 ( = xpp_1 8 ) 
subs1 ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and .def_191 .def_400 ) ) ) ) ) 
remove lets from formula
subs2 ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and .def_191 .def_400 ) ) ) ) ) 
.def_191 
253
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_400 ': '( = xpp_0 xpp_1 ) ', '.def_473 ': '( = xpp_1 8 ) '}
.def_400 
278
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_400 ': '( = xpp_0 xpp_1 ) ', '.def_473 ': '( = xpp_1 8 ) ', '.def_482 ': '( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) .def_400 ) ) ) ) ) '}
subs1 ( not ( = xpp_0 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_0 1009 ) ) 
subs1 ( = xpp_0 xpp_1 ) 
remove lets from formula
subs2 ( = xpp_0 xpp_1 ) 
subs1 ( = xpp_1 1 ) 
remove lets from formula
subs2 ( = xpp_1 1 ) 
subs1 ( not ( and ( and ( not .def_482 ) ( not .def_483 ) ) ( not .def_473 ) ) ) 
remove lets from formula
subs2 ( not ( and ( and ( not .def_482 ) ( not .def_483 ) ) ( not .def_473 ) ) ) 
.def_473 
60
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_400 ': '( = xpp_0 xpp_1 ) ', '.def_473 ': '( = xpp_1 8 ) ', '.def_482 ': '( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ', '.def_483 ': '( = xpp_1 1 ) ', '.def_499 ': '( not ( and ( and ( not .def_482 ) ( not .def_483 ) ) ( not .def_473 ) ) ) '}
.def_482 
24
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_400 ': '( = xpp_0 xpp_1 ) ', '.def_473 ': '( = xpp_1 8 ) ', '.def_482 ': '( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ', '.def_483 ': '( = xpp_1 1 ) ', '.def_499 ': '( not ( and ( and ( not .def_482 ) ( not .def_483 ) ) ( not ( = xpp_1 8 ) ) ) ) '}
.def_483 
338
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_400 ': '( = xpp_0 xpp_1 ) ', '.def_473 ': '( = xpp_1 8 ) ', '.def_482 ': '( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ', '.def_483 ': '( = xpp_1 1 ) ', '.def_499 ': '( not ( and ( and ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ( not .def_483 ) ) ( not ( = xpp_1 8 ) ) ) ) '}
subs1 ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and .def_191 .def_400 ) ) ) ) ) 
remove lets from formula
subs2 ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and .def_191 .def_400 ) ) ) ) ) 
.def_191 
253
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_400 ': '( = xpp_0 xpp_1 ) ', '.def_473 ': '( = xpp_1 8 ) ', '.def_482 ': '( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ', '.def_483 ': '( = xpp_1 1 ) ', '.def_499 ': '( not ( and ( and ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ( not ( = xpp_1 1 ) ) ) ( not ( = xpp_1 8 ) ) ) ) '}
.def_400 
278
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_400 ': '( = xpp_0 xpp_1 ) ', '.def_473 ': '( = xpp_1 8 ) ', '.def_482 ': '( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) .def_400 ) ) ) ) ) ', '.def_483 ': '( = xpp_1 1 ) ', '.def_499 ': '( not ( and ( and ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ( not ( = xpp_1 1 ) ) ) ( not ( = xpp_1 8 ) ) ) ) '}
subs1 ( = xpp_1 1 ) 
remove lets from formula
subs2 ( = xpp_1 1 ) 
subs1 ( = xpp_1 8 ) 
remove lets from formula
subs2 ( = xpp_1 8 ) 
subs1 ( not ( and ( and ( not .def_482 ) ( not .def_483 ) ) ( not .def_473 ) ) ) 
remove lets from formula
subs2 ( not ( and ( and ( not .def_482 ) ( not .def_483 ) ) ( not .def_473 ) ) ) 
.def_473 
60
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_400 ': '( = xpp_0 xpp_1 ) ', '.def_473 ': '( = xpp_1 8 ) ', '.def_482 ': '( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ', '.def_483 ': '( = xpp_1 1 ) ', '.def_499 ': '( not ( and ( and ( not .def_482 ) ( not .def_483 ) ) ( not .def_473 ) ) ) '}
.def_482 
24
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_400 ': '( = xpp_0 xpp_1 ) ', '.def_473 ': '( = xpp_1 8 ) ', '.def_482 ': '( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ', '.def_483 ': '( = xpp_1 1 ) ', '.def_499 ': '( not ( and ( and ( not .def_482 ) ( not .def_483 ) ) ( not ( = xpp_1 8 ) ) ) ) '}
.def_483 
338
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_400 ': '( = xpp_0 xpp_1 ) ', '.def_473 ': '( = xpp_1 8 ) ', '.def_482 ': '( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ', '.def_483 ': '( = xpp_1 1 ) ', '.def_499 ': '( not ( and ( and ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ( not .def_483 ) ) ( not ( = xpp_1 8 ) ) ) ) '}
subs1 ( = xpp_1 8 ) 
remove lets from formula
subs2 ( = xpp_1 8 ) 
subs1 ( = xpp_0 xpp_1 ) 
remove lets from formula
subs2 ( = xpp_0 xpp_1 ) 
subs1 ( not ( = xpp_0 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_0 1009 ) ) 
subs1 ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and .def_191 .def_400 ) ) ) ) ) 
remove lets from formula
subs2 ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and .def_191 .def_400 ) ) ) ) ) 
.def_191 
253
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_400 ': '( = xpp_0 xpp_1 ) ', '.def_473 ': '( = xpp_1 8 ) ', '.def_482 ': '( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ', '.def_483 ': '( = xpp_1 1 ) ', '.def_499 ': '( not ( and ( and ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ( not ( = xpp_1 1 ) ) ) ( not ( = xpp_1 8 ) ) ) ) '}
.def_400 
278
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_400 ': '( = xpp_0 xpp_1 ) ', '.def_473 ': '( = xpp_1 8 ) ', '.def_482 ': '( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) .def_400 ) ) ) ) ) ', '.def_483 ': '( = xpp_1 1 ) ', '.def_499 ': '( not ( and ( and ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ( not ( = xpp_1 1 ) ) ) ( not ( = xpp_1 8 ) ) ) ) '}
subs1 ( = xpp_1 1 ) 
remove lets from formula
subs2 ( = xpp_1 1 ) 
subs1 ( not ( and ( and ( not .def_482 ) ( not .def_483 ) ) ( not .def_473 ) ) ) 
remove lets from formula
subs2 ( not ( and ( and ( not .def_482 ) ( not .def_483 ) ) ( not .def_473 ) ) ) 
.def_473 
60
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_400 ': '( = xpp_0 xpp_1 ) ', '.def_473 ': '( = xpp_1 8 ) ', '.def_482 ': '( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ', '.def_483 ': '( = xpp_1 1 ) ', '.def_499 ': '( not ( and ( and ( not .def_482 ) ( not .def_483 ) ) ( not .def_473 ) ) ) '}
.def_482 
24
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_400 ': '( = xpp_0 xpp_1 ) ', '.def_473 ': '( = xpp_1 8 ) ', '.def_482 ': '( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ', '.def_483 ': '( = xpp_1 1 ) ', '.def_499 ': '( not ( and ( and ( not .def_482 ) ( not .def_483 ) ) ( not ( = xpp_1 8 ) ) ) ) '}
.def_483 
338
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_400 ': '( = xpp_0 xpp_1 ) ', '.def_473 ': '( = xpp_1 8 ) ', '.def_482 ': '( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ', '.def_483 ': '( = xpp_1 1 ) ', '.def_499 ': '( not ( and ( and ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ( not .def_483 ) ) ( not ( = xpp_1 8 ) ) ) ) '}
aux_vars_subs_dict  {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_400 ': '( = xpp_0 xpp_1 ) ', '.def_473 ': '( = xpp_1 8 ) ', '.def_482 ': '( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ', '.def_483 ': '( = xpp_1 1 ) ', '.def_499 ': '( not ( and ( and ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ( not ( = xpp_1 1 ) ) ) ( not ( = xpp_1 8 ) ) ) ) '}
{26: 41, 20: 43, 9: 45, 7: 47, 68: 84, 57: 86, 55: 88, 109: 121, 98: 123, 96: 125, 178: 184, 199: 207, 209: 225, 195: 227, 186: 229, 174: 231, 164: 233, 158: 235, 152: 237, 251: 266, 245: 268, 282: 296, 276: 298, 332: 338, 353: 361, 363: 379, 349: 381, 340: 383, 328: 385, 318: 387, 312: 389, 306: 391, 393: 417, 300: 419, 270: 421, 239: 423, 146: 425, 135: 427, 133: 429, 450: 462, 439: 464, 437: 466, 505: 520, 522: 537, 499: 539, 541: 556, 493: 558, 487: 560, 476: 562, 474: 564, 572: 584, 592: 604, 668: 682, 662: 684, 656: 695, 641: 697, 626: 699, 707: 730, 701: 741, 621: 743, 606: 745, 586: 747, 566: 749, 468: 751, 431: 753, 127: 755, 90: 757, 49: 759, 1: 761}
{21: 37, 10: 39, 8: 41, 62: 74, 51: 76, 49: 78, 131: 137, 152: 160, 162: 178, 148: 180, 139: 182, 127: 184, 117: 186, 111: 188, 105: 190, 204: 219, 198: 221, 235: 249, 229: 251, 285: 291, 306: 314, 316: 332, 302: 334, 293: 336, 281: 338, 271: 340, 265: 342, 259: 344, 346: 370, 253: 372, 223: 374, 192: 376, 99: 378, 88: 380, 86: 382, 403: 415, 392: 417, 390: 419, 458: 473, 475: 490, 452: 492, 494: 509, 446: 511, 440: 513, 429: 515, 427: 517, 525: 537, 545: 557, 621: 635, 615: 637, 609: 648, 594: 650, 579: 652, 660: 683, 654: 694, 574: 696, 559: 698, 539: 700, 519: 702, 421: 704, 384: 706, 80: 708, 43: 710, 2: 712}
{22: 34, 11: 36, 9: 38, 91: 97, 112: 120, 122: 138, 108: 140, 99: 142, 87: 144, 77: 146, 71: 148, 65: 150, 164: 179, 158: 181, 195: 209, 189: 211, 245: 251, 266: 274, 276: 292, 262: 294, 253: 296, 241: 298, 231: 300, 225: 302, 219: 304, 306: 330, 213: 332, 183: 334, 152: 336, 59: 338, 48: 340, 46: 342, 363: 375, 352: 377, 350: 379, 418: 433, 435: 450, 412: 452, 454: 469, 406: 471, 400: 473, 389: 475, 387: 477, 485: 497, 505: 517, 581: 595, 575: 597, 569: 608, 554: 610, 539: 612, 620: 643, 614: 654, 534: 656, 519: 658, 499: 660, 479: 662, 381: 664, 344: 666, 40: 668, 3: 670}
{55: 61, 76: 84, 86: 102, 72: 104, 63: 106, 51: 108, 41: 110, 35: 112, 29: 114, 128: 143, 122: 145, 159: 173, 153: 175, 209: 215, 230: 238, 240: 256, 226: 258, 217: 260, 205: 262, 195: 264, 189: 266, 183: 268, 270: 294, 177: 296, 147: 298, 116: 300, 23: 302, 12: 304, 10: 306, 327: 339, 316: 341, 314: 343, 382: 397, 399: 414, 376: 416, 418: 433, 370: 435, 364: 437, 353: 439, 351: 441, 449: 461, 469: 481, 545: 559, 539: 561, 533: 572, 518: 574, 503: 576, 584: 607, 578: 618, 498: 620, 483: 622, 463: 624, 443: 626, 345: 628, 308: 630, 4: 632}
{24: 36, 13: 38, 11: 40, 79: 94, 96: 111, 73: 113, 115: 130, 67: 132, 61: 134, 50: 136, 48: 138, 146: 158, 166: 178, 242: 256, 236: 258, 230: 269, 215: 271, 200: 273, 281: 304, 275: 315, 195: 317, 180: 319, 160: 321, 140: 323, 42: 325, 5: 327}
{43: 58, 60: 75, 37: 77, 79: 94, 31: 96, 25: 98, 14: 100, 12: 102, 110: 122, 130: 142, 206: 220, 200: 222, 194: 233, 179: 235, 164: 237, 245: 268, 239: 279, 159: 281, 144: 283, 124: 285, 104: 287, 6: 289}
remove lets from formula
final_formula  ( and ( = hpp_1 1 ) ( and ( = hpp_0 1 ) ( and .def_499 ( or ( and .def_473 ( and .def_400 ( and ( not ( = xpp_0 383 ) ) .def_191 ) ) ) ( and ( or .def_482 .def_483 ) .def_499 ) ) ) ) ) 
[' ( and ( = hpp_1 1 ) ( and ( = hpp_0 1 ) ( and ( not ( and ( and ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ( not ( = xpp_1 1 ) ) ) ( not ( = xpp_1 8 ) ) ) ) ( or ( and ( = xpp_1 8 ) ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 383 ) ) ( not ( = xpp_0 1009 ) ) ) ) ) ( and ( or ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ( = xpp_1 1 ) ) ( not ( and ( and ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ( not ( = xpp_1 1 ) ) ) ( not ( = xpp_1 8 ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 37, 9: 39, 7: 41, 68: 86, 62: 88, 51: 90, 49: 92, 119: 132, 113: 134, 102: 136, 100: 138, 159: 183, 148: 185, 146: 187, 223: 247, 208: 249, 197: 251, 195: 253, 297: 321, 291: 332, 276: 334, 261: 336, 255: 338, 189: 340, 140: 342, 94: 344, 43: 346, 1: 348}
aux_vars_first_occ_dict {'.def_233 ': 11, '.def_273 ': 53, '.def_274 ': 104, '.def_281 ': 150, '.def_517 ': 199}
aux_vars_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_281 ': '( and .def_233 .def_273 ) ', '.def_517 ': '( and .def_281 ( and .def_233 .def_274 ) ) '}
subs1 ( = countppp_1 1 ) 
remove lets from formula
subs2 ( = countppp_1 1 ) 
subs1 ( not ( = xppp_0 xppp_1 ) ) 
remove lets from formula
subs2 ( not ( = xppp_0 xppp_1 ) ) 
subs1 ( not ( = xppp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = xppp_1 1 ) ) 
subs1 ( and .def_233 .def_273 ) 
remove lets from formula
subs2 ( and .def_233 .def_273 ) 
.def_233 
6
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) '}
.def_273 
25
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_281 ': '( and ( = countppp_1 1 ) .def_273 ) '}
subs1 ( = countppp_1 1 ) 
remove lets from formula
subs2 ( = countppp_1 1 ) 
subs1 ( not ( = xppp_0 xppp_1 ) ) 
remove lets from formula
subs2 ( not ( = xppp_0 xppp_1 ) ) 
subs1 ( and .def_281 ( and .def_233 .def_274 ) ) 
remove lets from formula
subs2 ( and .def_281 ( and .def_233 .def_274 ) ) 
.def_233 
21
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_281 ': '( and ( = countppp_1 1 ) ( not ( = xppp_0 xppp_1 ) ) ) '}
.def_274 
40
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_281 ': '( and ( = countppp_1 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ', '.def_517 ': '( and .def_281 ( and ( = countppp_1 1 ) .def_274 ) ) '}
.def_281 
6
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_281 ': '( and ( = countppp_1 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ', '.def_517 ': '( and .def_281 ( and ( = countppp_1 1 ) ( not ( = xppp_1 1 ) ) ) ) '}
subs1 ( and .def_233 .def_273 ) 
remove lets from formula
subs2 ( and .def_233 .def_273 ) 
.def_233 
6
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_281 ': '( and ( = countppp_1 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ', '.def_517 ': '( and ( and ( = countppp_1 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ( and ( = countppp_1 1 ) ( not ( = xppp_1 1 ) ) ) ) '}
.def_273 
25
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_281 ': '( and ( = countppp_1 1 ) .def_273 ) ', '.def_517 ': '( and ( and ( = countppp_1 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ( and ( = countppp_1 1 ) ( not ( = xppp_1 1 ) ) ) ) '}
subs1 ( = countppp_1 1 ) 
remove lets from formula
subs2 ( = countppp_1 1 ) 
subs1 ( not ( = xppp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = xppp_1 1 ) ) 
subs1 ( and .def_281 ( and .def_233 .def_274 ) ) 
remove lets from formula
subs2 ( and .def_281 ( and .def_233 .def_274 ) ) 
.def_233 
21
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_281 ': '( and ( = countppp_1 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ', '.def_517 ': '( and ( and ( = countppp_1 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ( and ( = countppp_1 1 ) ( not ( = xppp_1 1 ) ) ) ) '}
.def_274 
40
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_281 ': '( and ( = countppp_1 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ', '.def_517 ': '( and .def_281 ( and ( = countppp_1 1 ) .def_274 ) ) '}
.def_281 
6
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_281 ': '( and ( = countppp_1 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ', '.def_517 ': '( and .def_281 ( and ( = countppp_1 1 ) ( not ( = xppp_1 1 ) ) ) ) '}
subs1 ( not ( = xppp_0 xppp_1 ) ) 
remove lets from formula
subs2 ( not ( = xppp_0 xppp_1 ) ) 
subs1 ( not ( = xppp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = xppp_1 1 ) ) 
subs1 ( and .def_233 .def_273 ) 
remove lets from formula
subs2 ( and .def_233 .def_273 ) 
.def_233 
6
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_281 ': '( and ( = countppp_1 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ', '.def_517 ': '( and ( and ( = countppp_1 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ( and ( = countppp_1 1 ) ( not ( = xppp_1 1 ) ) ) ) '}
.def_273 
25
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_281 ': '( and ( = countppp_1 1 ) .def_273 ) ', '.def_517 ': '( and ( and ( = countppp_1 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ( and ( = countppp_1 1 ) ( not ( = xppp_1 1 ) ) ) ) '}
subs1 ( and .def_281 ( and .def_233 .def_274 ) ) 
remove lets from formula
subs2 ( and .def_281 ( and .def_233 .def_274 ) ) 
.def_233 
21
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_281 ': '( and ( = countppp_1 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ', '.def_517 ': '( and ( and ( = countppp_1 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ( and ( = countppp_1 1 ) ( not ( = xppp_1 1 ) ) ) ) '}
.def_274 
40
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_281 ': '( and ( = countppp_1 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ', '.def_517 ': '( and .def_281 ( and ( = countppp_1 1 ) .def_274 ) ) '}
.def_281 
6
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_281 ': '( and ( = countppp_1 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ', '.def_517 ': '( and .def_281 ( and ( = countppp_1 1 ) ( not ( = xppp_1 1 ) ) ) ) '}
aux_vars_subs_dict  {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_281 ': '( and ( = countppp_1 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ', '.def_517 ': '( and ( and ( = countppp_1 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ( and ( = countppp_1 1 ) ( not ( = xppp_1 1 ) ) ) ) '}
{20: 37, 9: 39, 7: 41, 68: 86, 62: 88, 51: 90, 49: 92, 119: 132, 113: 134, 102: 136, 100: 138, 159: 183, 148: 185, 146: 187, 223: 247, 208: 249, 197: 251, 195: 253, 297: 321, 291: 332, 276: 334, 261: 336, 255: 338, 189: 340, 140: 342, 94: 344, 43: 346, 1: 348}
{27: 45, 21: 47, 10: 49, 8: 51, 78: 91, 72: 93, 61: 95, 59: 97, 118: 142, 107: 144, 105: 146, 182: 206, 167: 208, 156: 210, 154: 212, 256: 280, 250: 291, 235: 293, 220: 295, 214: 297, 148: 299, 99: 301, 53: 303, 2: 305}
{28: 41, 22: 43, 11: 45, 9: 47, 68: 92, 57: 94, 55: 96, 132: 156, 117: 158, 106: 160, 104: 162, 206: 230, 200: 241, 185: 243, 170: 245, 164: 247, 98: 249, 49: 251, 3: 253}
{23: 47, 12: 49, 10: 51, 87: 111, 72: 113, 61: 115, 59: 117, 161: 185, 155: 196, 140: 198, 125: 200, 119: 202, 53: 204, 4: 206}
{39: 63, 24: 65, 13: 67, 11: 69, 113: 137, 107: 148, 92: 150, 77: 152, 71: 154, 5: 156}
remove lets from formula
final_formula  ( not ( and .def_517 ( and .def_273 ( and ( and .def_274 .def_281 ) .def_517 ) ) ) ) 
[' ( not ( and ( and ( and ( = countppp_1 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ( and ( = countppp_1 1 ) ( not ( = xppp_1 1 ) ) ) ) ( and ( not ( = xppp_0 xppp_1 ) ) ( and ( and ( not ( = xppp_1 1 ) ) ( and ( = countppp_1 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ) ( and ( and ( = countppp_1 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ( and ( = countppp_1 1 ) ( not ( = xppp_1 1 ) ) ) ) ) ) ) ) ']
new_pred_smt_format ['(declare-rel pred_0_synth_msat_3 (Int Int Int))\n (rule (=>  ( = (rel count 0) 1  ) (pred_0_synth_msat_3 x h count)))']
['(declare-rel pred_0_synth_msat_3 (Int Int Int))\n (rule (=>  ( = (rel count 0) 1  ) (pred_0_synth_msat_3 x h count)))']
Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied.
Pre-processing time:	0.049855 
Solver time:	1.137277
Total time:	1.187132
Iteration count:	6
Predicate count:	7
Successfully added new predicate to input file. !
Start next refinement loop: True



PDSC: Verifying ./Benchmarks_msat/subsume_ref_ref.smt2
Namespace(file='./Benchmarks_msat/subsume_ref_ref.smt2', log=False, msat=True, property=None, qe=False, sygus=False)
In if ladder True
Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[2]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, 
pred_0_synth_msat_3, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, 
pred_0_synth_msat_3, ]
--->[1]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


6 SMT queries performed.
before complete_trace: [abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


after complete_trace [abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[-1]


-----------------------------------check_spur-------------------------------
final init cond And(0 == count_0,
    0 == count_1,
    And(x_0 == x_1, h_0 == 1, h_1 == 1))
Initial concrete state  {'x_1': 2, 'count_0_1': True, 'abs_h_1': True, 'count_0_0': True, 'abs_h_0': True, 'pred_0_synth_msat_3': False, 'pred_0_synth_msat_2': False, 'pred_0_synth_msat_1': False, 'x0_eq_x1': True, 'h_1': 1, 'h_0': 1, 'x_0': 2, 'count_1': 0, 'count_0': 0}
Next concrete state {'count_1': 1, 'x_1': 2, 'count_0': 0, 'h_0': 1, 'x_0': 2, 'h_1': 1}
Next concrete state {'count_0': 1, 'x_0': 2, 'count_1': 1, 'h_1': 1, 'x_1': 2, 'h_0': 1}
Next concrete state {'x_1': 2, 'count_0': 1, 'x_0': 2, 'count_1': 1, 'h_1': 1, 'h_0': 1}
Writing an smt file to be run using mathsat
Checking output from mathsat 5
hi
paren_dict {19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 89: 99, 79: 101, 77: 103, 130: 144, 124: 146, 113: 148, 111: 150, 185: 208, 171: 210, 160: 212, 158: 214, 235: 258, 224: 260, 222: 262, 319: 333, 313: 335, 415: 439, 401: 441, 395: 452, 380: 454, 366: 456, 351: 458, 337: 460, 307: 462, 292: 464, 278: 466, 264: 468, 216: 470, 152: 472, 105: 474, 71: 476, 37: 478, 1: 480}
aux_vars_first_occ_dict {'.def_17 ': 11, '.def_20 ': 47, '.def_22 ': 81, '.def_413 ': 115, '.def_417 ': 162, '.def_420 ': 226}
aux_vars_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_413 ': '( not ( = count_1 1 ) ) ', '.def_417 ': '( and .def_22 ( and .def_17 .def_413 ) ) ', '.def_420 ': '( and .def_17 .def_417 ) '}
subs1 ( = x_0 x_1 ) 
remove lets from formula
subs2 ( = x_0 x_1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( and .def_22 ( and .def_17 .def_413 ) ) 
remove lets from formula
subs2 ( and .def_22 ( and .def_17 .def_413 ) ) 
.def_17 
20
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_413 ': '( not ( = count_1 1 ) ) '}
.def_22 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_413 ': '( not ( = count_1 1 ) ) ', '.def_417 ': '( and .def_22 ( and ( = x_0 x_1 ) .def_413 ) ) '}
.def_413 
38
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_413 ': '( not ( = count_1 1 ) ) ', '.def_417 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) .def_413 ) ) '}
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( = x_0 x_1 ) 
remove lets from formula
subs2 ( = x_0 x_1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( and .def_17 .def_417 ) 
remove lets from formula
subs2 ( and .def_17 .def_417 ) 
.def_17 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_413 ': '( not ( = count_1 1 ) ) ', '.def_417 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) '}
.def_417 
20
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_413 ': '( not ( = count_1 1 ) ) ', '.def_417 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_420 ': '( and ( = x_0 x_1 ) .def_417 ) '}
subs1 ( = x_0 x_1 ) 
remove lets from formula
subs2 ( = x_0 x_1 ) 
subs1 ( and .def_22 ( and .def_17 .def_413 ) ) 
remove lets from formula
subs2 ( and .def_22 ( and .def_17 .def_413 ) ) 
.def_17 
20
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_413 ': '( not ( = count_1 1 ) ) ', '.def_417 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_420 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) '}
.def_22 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_413 ': '( not ( = count_1 1 ) ) ', '.def_417 ': '( and .def_22 ( and ( = x_0 x_1 ) .def_413 ) ) ', '.def_420 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) '}
.def_413 
38
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_413 ': '( not ( = count_1 1 ) ) ', '.def_417 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) .def_413 ) ) ', '.def_420 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) '}
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( and .def_17 .def_417 ) 
remove lets from formula
subs2 ( and .def_17 .def_417 ) 
.def_17 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_413 ': '( not ( = count_1 1 ) ) ', '.def_417 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_420 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) '}
.def_417 
20
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_413 ': '( not ( = count_1 1 ) ) ', '.def_417 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_420 ': '( and ( = x_0 x_1 ) .def_417 ) '}
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( and .def_22 ( and .def_17 .def_413 ) ) 
remove lets from formula
subs2 ( and .def_22 ( and .def_17 .def_413 ) ) 
.def_17 
20
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_413 ': '( not ( = count_1 1 ) ) ', '.def_417 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_420 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) '}
.def_22 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_413 ': '( not ( = count_1 1 ) ) ', '.def_417 ': '( and .def_22 ( and ( = x_0 x_1 ) .def_413 ) ) ', '.def_420 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) '}
.def_413 
38
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_413 ': '( not ( = count_1 1 ) ) ', '.def_417 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) .def_413 ) ) ', '.def_420 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) '}
subs1 ( and .def_17 .def_417 ) 
remove lets from formula
subs2 ( and .def_17 .def_417 ) 
.def_17 
6
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_413 ': '( not ( = count_1 1 ) ) ', '.def_417 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_420 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) '}
.def_417 
20
aux_vars_subs_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_413 ': '( not ( = count_1 1 ) ) ', '.def_417 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_420 ': '( and ( = x_0 x_1 ) .def_417 ) '}
aux_vars_subs_dict  {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_413 ': '( not ( = count_1 1 ) ) ', '.def_417 ': '( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ', '.def_420 ': '( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) '}
{19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 89: 99, 79: 101, 77: 103, 130: 144, 124: 146, 113: 148, 111: 150, 185: 208, 171: 210, 160: 212, 158: 214, 235: 258, 224: 260, 222: 262, 319: 333, 313: 335, 415: 439, 401: 441, 395: 452, 380: 454, 366: 456, 351: 458, 337: 460, 307: 462, 292: 464, 278: 466, 264: 468, 216: 470, 152: 472, 105: 474, 71: 476, 37: 478, 1: 480}
{20: 30, 10: 32, 8: 34, 54: 64, 44: 66, 42: 68, 95: 109, 89: 111, 78: 113, 76: 115, 150: 173, 136: 175, 125: 177, 123: 179, 200: 223, 189: 225, 187: 227, 284: 298, 278: 300, 380: 404, 366: 406, 360: 417, 345: 419, 331: 421, 316: 423, 302: 425, 272: 427, 257: 429, 243: 431, 229: 433, 181: 435, 117: 437, 70: 439, 36: 441, 2: 443}
{21: 31, 11: 33, 9: 35, 62: 76, 56: 78, 45: 80, 43: 82, 117: 140, 103: 142, 92: 144, 90: 146, 167: 190, 156: 192, 154: 194, 251: 265, 245: 267, 347: 371, 333: 373, 327: 384, 312: 386, 298: 388, 283: 390, 269: 392, 239: 394, 224: 396, 210: 398, 196: 400, 148: 402, 84: 404, 37: 406, 3: 408}
{29: 43, 23: 45, 12: 47, 10: 49, 84: 107, 70: 109, 59: 111, 57: 113, 134: 157, 123: 159, 121: 161, 218: 232, 212: 234, 314: 338, 300: 340, 294: 351, 279: 353, 265: 355, 250: 357, 236: 359, 206: 361, 191: 363, 177: 365, 163: 367, 115: 369, 51: 371, 4: 373}
{38: 61, 24: 63, 13: 65, 11: 67, 88: 111, 77: 113, 75: 115, 172: 186, 166: 188, 268: 292, 254: 294, 248: 305, 233: 307, 219: 309, 204: 311, 190: 313, 160: 315, 145: 317, 131: 319, 117: 321, 69: 323, 5: 325}
{25: 48, 14: 50, 12: 52, 109: 123, 103: 125, 205: 229, 191: 231, 185: 242, 170: 244, 156: 246, 141: 248, 127: 250, 97: 252, 82: 254, 68: 256, 54: 258, 6: 260}
remove lets from formula
final_formula  ( and .def_22 ( and .def_20 ( and .def_413 ( and ( not ( = count_0 1 ) ) ( and .def_20 ( and .def_420 ( and .def_22 ( and .def_413 ( and ( and .def_22 ( and .def_413 .def_417 ) ) .def_420 ) ) ) ) ) ) ) ) ) 
[' ( and ( = h_1 1 ) ( and ( = h_0 1 ) ( and ( not ( = count_1 1 ) ) ( and ( not ( = count_0 1 ) ) ( and ( = h_0 1 ) ( and ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( and ( = h_1 1 ) ( and ( not ( = count_1 1 ) ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {19: 30, 9: 32, 7: 34, 55: 66, 44: 68, 42: 70, 97: 111, 91: 113, 80: 115, 78: 117, 157: 163, 178: 186, 188: 203, 174: 205, 165: 207, 153: 209, 144: 211, 138: 213, 127: 215, 125: 217, 257: 263, 278: 286, 288: 303, 274: 305, 265: 307, 253: 309, 244: 311, 238: 313, 227: 315, 225: 317, 338: 353, 327: 355, 325: 357, 384: 407, 378: 409, 367: 411, 365: 413, 440: 451, 434: 453, 423: 455, 421: 457, 526: 539, 520: 541, 549: 564, 578: 592, 572: 594, 608: 621, 602: 623, 655: 669, 640: 671, 625: 673, 596: 675, 566: 677, 543: 679, 514: 681, 499: 683, 484: 685, 478: 687, 467: 689, 465: 691, 720: 735, 714: 737, 745: 756, 797: 821, 791: 832, 785: 834, 857: 881, 842: 883, 836: 885, 779: 887, 925: 939, 910: 941, 895: 943, 889: 945, 773: 947, 758: 949, 739: 951, 708: 953, 693: 955, 459: 957, 415: 959, 359: 961, 319: 963, 219: 965, 119: 967, 72: 969, 36: 971, 1: 973}
aux_vars_first_occ_dict {'.def_47 ': 11, '.def_100 ': 46, '.def_127 ': 82, '.def_444 ': 129, '.def_450 ': 229, '.def_458 ': 329, '.def_479 ': 369, '.def_481 ': 425, '.def_484 ': 469}
aux_vars_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not .def_444 ) ', '.def_479 ': '( not ( and .def_47 .def_444 ) ) ', '.def_481 ': '( not ( = xp_1 1 ) ) ', '.def_484 ': '( not ( and .def_458 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not .def_450 ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_458 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
subs1 ( = xp_1 8 ) 
remove lets from formula
subs2 ( = xp_1 8 ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( not ( = xp_0 1009 ) ) 
remove lets from formula
subs2 ( not ( = xp_0 1009 ) ) 
subs1 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
subs1 ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) 
subs1 ( not .def_444 ) 
remove lets from formula
subs2 ( not .def_444 ) 
.def_444 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not .def_444 ) '}
subs1 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
subs1 ( not ( and .def_47 .def_444 ) ) 
remove lets from formula
subs2 ( not ( and .def_47 .def_444 ) ) 
.def_47 
12
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) '}
.def_444 
25
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_479 ': '( not ( and ( = xp_1 8 ) .def_444 ) ) '}
subs1 ( = xp_1 8 ) 
remove lets from formula
subs2 ( = xp_1 8 ) 
subs1 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
subs1 ( not ( = xp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 1 ) ) 
subs1 ( not ( and .def_458 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not .def_450 ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_458 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_458 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not .def_450 ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_458 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) 
.def_127 
168
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_479 ': '( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 1 ) ) ', '.def_484 ': '( not ( and .def_458 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not .def_450 ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_458 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
27
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_479 ': '( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 1 ) ) ', '.def_484 ': '( not ( and .def_458 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not .def_450 ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_458 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
.def_450 
92
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_479 ': '( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 1 ) ) ', '.def_484 ': '( not ( and .def_458 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not .def_450 ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_458 ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
.def_458 
236
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_479 ': '( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 1 ) ) ', '.def_484 ': '( not ( and .def_458 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_458 ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
12
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_479 ': '( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 1 ) ) ', '.def_484 ': '( not ( and .def_458 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_458 ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
subs1 ( not .def_444 ) 
remove lets from formula
subs2 ( not .def_444 ) 
.def_444 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not .def_444 ) ', '.def_479 ': '( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 1 ) ) ', '.def_484 ': '( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
subs1 ( not ( = xp_0 1009 ) ) 
remove lets from formula
subs2 ( not ( = xp_0 1009 ) ) 
subs1 ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) 
subs1 ( not .def_444 ) 
remove lets from formula
subs2 ( not .def_444 ) 
.def_444 
6
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not .def_444 ) ', '.def_479 ': '( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 1 ) ) ', '.def_484 ': '( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
subs1 ( not ( = xp_0 1009 ) ) 
remove lets from formula
subs2 ( not ( = xp_0 1009 ) ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) 
subs1 ( not ( and .def_47 .def_444 ) ) 
remove lets from formula
subs2 ( not ( and .def_47 .def_444 ) ) 
.def_47 
12
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_479 ': '( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 1 ) ) ', '.def_484 ': '( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
.def_444 
25
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_479 ': '( not ( and ( = xp_1 8 ) .def_444 ) ) ', '.def_481 ': '( not ( = xp_1 1 ) ) ', '.def_484 ': '( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
subs1 ( not ( = xp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 1 ) ) 
subs1 ( not ( = xp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 1 ) ) 
subs1 ( not ( and .def_47 .def_444 ) ) 
remove lets from formula
subs2 ( not ( and .def_47 .def_444 ) ) 
.def_47 
12
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_479 ': '( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 1 ) ) ', '.def_484 ': '( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
.def_444 
25
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_479 ': '( not ( and ( = xp_1 8 ) .def_444 ) ) ', '.def_481 ': '( not ( = xp_1 1 ) ) ', '.def_484 ': '( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
subs1 ( not ( and .def_458 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not .def_450 ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_458 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_458 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not .def_450 ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_458 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) 
.def_127 
168
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_479 ': '( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 1 ) ) ', '.def_484 ': '( not ( and .def_458 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not .def_450 ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_458 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
27
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_479 ': '( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 1 ) ) ', '.def_484 ': '( not ( and .def_458 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not .def_450 ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_458 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
.def_450 
92
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_479 ': '( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 1 ) ) ', '.def_484 ': '( not ( and .def_458 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not .def_450 ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_458 ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
.def_458 
236
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_479 ': '( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 1 ) ) ', '.def_484 ': '( not ( and .def_458 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_458 ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
12
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_479 ': '( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 1 ) ) ', '.def_484 ': '( not ( and .def_458 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_458 ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
subs1 ( not ( = xp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 1 ) ) 
subs1 ( not ( and .def_458 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not .def_450 ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_458 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_458 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not .def_450 ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_458 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) 
.def_127 
168
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_479 ': '( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 1 ) ) ', '.def_484 ': '( not ( and .def_458 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not .def_450 ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_458 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
27
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_479 ': '( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 1 ) ) ', '.def_484 ': '( not ( and .def_458 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not .def_450 ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_458 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
.def_450 
92
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_479 ': '( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 1 ) ) ', '.def_484 ': '( not ( and .def_458 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not .def_450 ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_458 ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
.def_458 
236
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_479 ': '( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 1 ) ) ', '.def_484 ': '( not ( and .def_458 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_458 ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
12
aux_vars_subs_dict {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_479 ': '( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 1 ) ) ', '.def_484 ': '( not ( and .def_458 ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and .def_458 ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
subs1 ( = xp_1 8 ) 
remove lets from formula
subs2 ( = xp_1 8 ) 
aux_vars_subs_dict  {'.def_47 ': '( = xp_1 8 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_444 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ', '.def_450 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_458 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_479 ': '( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 1 ) ) ', '.def_484 ': '( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) '}
{19: 30, 9: 32, 7: 34, 55: 66, 44: 68, 42: 70, 97: 111, 91: 113, 80: 115, 78: 117, 157: 163, 178: 186, 188: 203, 174: 205, 165: 207, 153: 209, 144: 211, 138: 213, 127: 215, 125: 217, 257: 263, 278: 286, 288: 303, 274: 305, 265: 307, 253: 309, 244: 311, 238: 313, 227: 315, 225: 317, 338: 353, 327: 355, 325: 357, 384: 407, 378: 409, 367: 411, 365: 413, 440: 451, 434: 453, 423: 455, 421: 457, 526: 539, 520: 541, 549: 564, 578: 592, 572: 594, 608: 621, 602: 623, 655: 669, 640: 671, 625: 673, 596: 675, 566: 677, 543: 679, 514: 681, 499: 683, 484: 685, 478: 687, 467: 689, 465: 691, 720: 735, 714: 737, 745: 756, 797: 821, 791: 832, 785: 834, 857: 881, 842: 883, 836: 885, 779: 887, 925: 939, 910: 941, 895: 943, 889: 945, 773: 947, 758: 949, 739: 951, 708: 953, 693: 955, 459: 957, 415: 959, 359: 961, 319: 963, 219: 965, 119: 967, 72: 969, 36: 971, 1: 973}
{21: 32, 10: 34, 8: 36, 63: 77, 57: 79, 46: 81, 44: 83, 123: 129, 144: 152, 154: 169, 140: 171, 131: 173, 119: 175, 110: 177, 104: 179, 93: 181, 91: 183, 223: 229, 244: 252, 254: 269, 240: 271, 231: 273, 219: 275, 210: 277, 204: 279, 193: 281, 191: 283, 304: 319, 293: 321, 291: 323, 350: 373, 344: 375, 333: 377, 331: 379, 406: 417, 400: 419, 389: 421, 387: 423, 492: 505, 486: 507, 515: 530, 544: 558, 538: 560, 574: 587, 568: 589, 621: 635, 606: 637, 591: 639, 562: 641, 532: 643, 509: 645, 480: 647, 465: 649, 450: 651, 444: 653, 433: 655, 431: 657, 686: 701, 680: 703, 711: 722, 763: 787, 757: 798, 751: 800, 823: 847, 808: 849, 802: 851, 745: 853, 891: 905, 876: 907, 861: 909, 855: 911, 739: 913, 724: 915, 705: 917, 674: 919, 659: 921, 425: 923, 381: 925, 325: 927, 285: 929, 185: 931, 85: 933, 38: 935, 2: 937}
{28: 42, 22: 44, 11: 46, 9: 48, 88: 94, 109: 117, 119: 134, 105: 136, 96: 138, 84: 140, 75: 142, 69: 144, 58: 146, 56: 148, 188: 194, 209: 217, 219: 234, 205: 236, 196: 238, 184: 240, 175: 242, 169: 244, 158: 246, 156: 248, 269: 284, 258: 286, 256: 288, 315: 338, 309: 340, 298: 342, 296: 344, 371: 382, 365: 384, 354: 386, 352: 388, 457: 470, 451: 472, 480: 495, 509: 523, 503: 525, 539: 552, 533: 554, 586: 600, 571: 602, 556: 604, 527: 606, 497: 608, 474: 610, 445: 612, 430: 614, 415: 616, 409: 618, 398: 620, 396: 622, 651: 666, 645: 668, 676: 687, 728: 752, 722: 763, 716: 765, 788: 812, 773: 814, 767: 816, 710: 818, 856: 870, 841: 872, 826: 874, 820: 876, 704: 878, 689: 880, 670: 882, 639: 884, 624: 886, 390: 888, 346: 890, 290: 892, 250: 894, 150: 896, 50: 898, 3: 900}
{42: 48, 63: 71, 73: 88, 59: 90, 50: 92, 38: 94, 29: 96, 23: 98, 12: 100, 10: 102, 142: 148, 163: 171, 173: 188, 159: 190, 150: 192, 138: 194, 129: 196, 123: 198, 112: 200, 110: 202, 223: 238, 212: 240, 210: 242, 269: 292, 263: 294, 252: 296, 250: 298, 325: 336, 319: 338, 308: 340, 306: 342, 411: 424, 405: 426, 434: 449, 463: 477, 457: 479, 493: 506, 487: 508, 540: 554, 525: 556, 510: 558, 481: 560, 451: 562, 428: 564, 399: 566, 384: 568, 369: 570, 363: 572, 352: 574, 350: 576, 605: 620, 599: 622, 630: 641, 682: 706, 676: 717, 670: 719, 742: 766, 727: 768, 721: 770, 664: 772, 810: 824, 795: 826, 780: 828, 774: 830, 658: 832, 643: 834, 624: 836, 593: 838, 578: 840, 344: 842, 300: 844, 244: 846, 204: 848, 104: 850, 4: 852}
{43: 49, 64: 72, 74: 89, 60: 91, 51: 93, 39: 95, 30: 97, 24: 99, 13: 101, 11: 103, 124: 139, 113: 141, 111: 143, 170: 193, 164: 195, 153: 197, 151: 199, 226: 237, 220: 239, 209: 241, 207: 243, 312: 325, 306: 327, 335: 350, 364: 378, 358: 380, 394: 407, 388: 409, 441: 455, 426: 457, 411: 459, 382: 461, 352: 463, 329: 465, 300: 467, 285: 469, 270: 471, 264: 473, 253: 475, 251: 477, 506: 521, 500: 523, 531: 542, 583: 607, 577: 618, 571: 620, 643: 667, 628: 669, 622: 671, 565: 673, 711: 725, 696: 727, 681: 729, 675: 731, 559: 733, 544: 735, 525: 737, 494: 739, 479: 741, 245: 743, 201: 745, 145: 747, 105: 749, 5: 751}
{25: 40, 14: 42, 12: 44, 71: 94, 65: 96, 54: 98, 52: 100, 127: 138, 121: 140, 110: 142, 108: 144, 213: 226, 207: 228, 236: 251, 265: 279, 259: 281, 295: 308, 289: 310, 342: 356, 327: 358, 312: 360, 283: 362, 253: 364, 230: 366, 201: 368, 186: 370, 171: 372, 165: 374, 154: 376, 152: 378, 407: 422, 401: 424, 432: 443, 484: 508, 478: 519, 472: 521, 544: 568, 529: 570, 523: 572, 466: 574, 612: 626, 597: 628, 582: 630, 576: 632, 460: 634, 445: 636, 426: 638, 395: 640, 380: 642, 146: 644, 102: 646, 46: 648, 6: 650}
{32: 55, 26: 57, 15: 59, 13: 61, 88: 99, 82: 101, 71: 103, 69: 105, 174: 187, 168: 189, 197: 212, 226: 240, 220: 242, 256: 269, 250: 271, 303: 317, 288: 319, 273: 321, 244: 323, 214: 325, 191: 327, 162: 329, 147: 331, 132: 333, 126: 335, 115: 337, 113: 339, 368: 383, 362: 385, 393: 404, 445: 469, 439: 480, 433: 482, 505: 529, 490: 531, 484: 533, 427: 535, 573: 587, 558: 589, 543: 591, 537: 593, 421: 595, 406: 597, 387: 599, 356: 601, 341: 603, 107: 605, 63: 607, 7: 609}
{33: 44, 27: 46, 16: 48, 14: 50, 119: 132, 113: 134, 142: 157, 171: 185, 165: 187, 201: 214, 195: 216, 248: 262, 233: 264, 218: 266, 189: 268, 159: 270, 136: 272, 107: 274, 92: 276, 77: 278, 71: 280, 60: 282, 58: 284, 313: 328, 307: 330, 338: 349, 390: 414, 384: 425, 378: 427, 450: 474, 435: 476, 429: 478, 372: 480, 518: 532, 503: 534, 488: 536, 482: 538, 366: 540, 351: 542, 332: 544, 301: 546, 286: 548, 52: 550, 8: 552}
{76: 89, 70: 91, 99: 114, 128: 142, 122: 144, 158: 171, 152: 173, 205: 219, 190: 221, 175: 223, 146: 225, 116: 227, 93: 229, 64: 231, 49: 233, 34: 235, 28: 237, 17: 239, 15: 241, 270: 285, 264: 287, 295: 306, 347: 371, 341: 382, 335: 384, 407: 431, 392: 433, 386: 435, 329: 437, 475: 489, 460: 491, 445: 493, 439: 495, 323: 497, 308: 499, 289: 501, 258: 503, 243: 505, 9: 507}
remove lets from formula
final_formula  ( and .def_100 ( and ( not ( = countp_0 1 ) ) ( and ( = hp_1 1 ) ( and .def_100 ( and ( and ( not ( and ( and .def_450 .def_479 ) .def_481 ) ) ( not ( and .def_481 ( and .def_479 .def_484 ) ) ) ) ( not ( and .def_481 ( and .def_484 ( not .def_47 ) ) ) ) ) ) ) ) ) 
[' ( and ( = hp_0 1 ) ( and ( not ( = countp_0 1 ) ) ( and ( = hp_1 1 ) ( and ( = hp_0 1 ) ( and ( and ( not ( and ( and ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ( not ( = xp_1 1 ) ) ) ) ( not ( and ( not ( = xp_1 1 ) ) ( and ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_1 1 ) ) ( and ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {26: 41, 20: 43, 9: 45, 7: 47, 68: 84, 57: 86, 55: 88, 109: 121, 98: 123, 96: 125, 166: 172, 187: 195, 197: 213, 183: 215, 174: 217, 162: 219, 152: 221, 146: 223, 135: 225, 133: 227, 254: 278, 248: 280, 237: 282, 235: 284, 311: 323, 305: 325, 294: 327, 292: 329, 362: 377, 391: 406, 385: 408, 422: 436, 416: 438, 472: 478, 493: 501, 503: 519, 489: 521, 480: 523, 468: 525, 458: 527, 452: 529, 446: 531, 533: 557, 440: 559, 410: 561, 379: 563, 356: 565, 350: 567, 339: 569, 337: 571, 579: 591, 599: 611, 643: 667, 637: 678, 631: 680, 703: 727, 688: 729, 682: 731, 625: 733, 804: 818, 798: 820, 792: 831, 777: 833, 771: 835, 756: 837, 741: 839, 735: 841, 619: 843, 881: 896, 866: 898, 851: 900, 845: 902, 613: 904, 593: 906, 573: 908, 331: 910, 286: 912, 229: 914, 127: 916, 90: 918, 49: 920, 1: 922}
aux_vars_first_occ_dict {'.def_191 ': 11, '.def_402 ': 59, '.def_499 ': 100, '.def_502 ': 137, '.def_526 ': 239, '.def_528 ': 296, '.def_531 ': 341}
aux_vars_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_402 ': '( = xpp_0 xpp_1 ) ', '.def_499 ': '( = xpp_1 8 ) ', '.def_502 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_526 ': '( not ( and .def_402 .def_499 ) ) ', '.def_528 ': '( not ( = xpp_1 1 ) ) ', '.def_531 ': '( not ( and ( not .def_502 ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and .def_191 .def_402 ) ) ) ) ) ) '}
subs1 ( not ( = xpp_0 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_0 1009 ) ) 
subs1 ( = xpp_0 xpp_1 ) 
remove lets from formula
subs2 ( = xpp_0 xpp_1 ) 
subs1 ( = xpp_1 8 ) 
remove lets from formula
subs2 ( = xpp_1 8 ) 
subs1 ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) 
subs1 ( not ( and .def_402 .def_499 ) ) 
remove lets from formula
subs2 ( not ( and .def_402 .def_499 ) ) 
.def_402 
12
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_402 ': '( = xpp_0 xpp_1 ) ', '.def_499 ': '( = xpp_1 8 ) ', '.def_502 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_526 ': '( not ( and .def_402 .def_499 ) ) '}
.def_499 
30
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_402 ': '( = xpp_0 xpp_1 ) ', '.def_499 ': '( = xpp_1 8 ) ', '.def_502 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_526 ': '( not ( and ( = xpp_0 xpp_1 ) .def_499 ) ) '}
subs1 ( = xpp_0 xpp_1 ) 
remove lets from formula
subs2 ( = xpp_0 xpp_1 ) 
subs1 ( = xpp_1 8 ) 
remove lets from formula
subs2 ( = xpp_1 8 ) 
subs1 ( not ( = xpp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 1 ) ) 
subs1 ( not ( and ( not .def_502 ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and .def_191 .def_402 ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( and ( not .def_502 ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and .def_191 .def_402 ) ) ) ) ) ) 
.def_191 
189
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_402 ': '( = xpp_0 xpp_1 ) ', '.def_499 ': '( = xpp_1 8 ) ', '.def_502 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_526 ': '( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ', '.def_528 ': '( not ( = xpp_1 1 ) ) '}
.def_402 
214
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_402 ': '( = xpp_0 xpp_1 ) ', '.def_499 ': '( = xpp_1 8 ) ', '.def_502 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_526 ': '( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ', '.def_528 ': '( not ( = xpp_1 1 ) ) ', '.def_531 ': '( not ( and ( not .def_502 ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) .def_402 ) ) ) ) ) ) '}
.def_502 
18
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_402 ': '( = xpp_0 xpp_1 ) ', '.def_499 ': '( = xpp_1 8 ) ', '.def_502 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_526 ': '( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ', '.def_528 ': '( not ( = xpp_1 1 ) ) ', '.def_531 ': '( not ( and ( not .def_502 ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
subs1 ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) 
subs1 ( not ( = xpp_0 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_0 1009 ) ) 
subs1 ( = xpp_0 xpp_1 ) 
remove lets from formula
subs2 ( = xpp_0 xpp_1 ) 
subs1 ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) 
subs1 ( not ( and .def_402 .def_499 ) ) 
remove lets from formula
subs2 ( not ( and .def_402 .def_499 ) ) 
.def_402 
12
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_402 ': '( = xpp_0 xpp_1 ) ', '.def_499 ': '( = xpp_1 8 ) ', '.def_502 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_526 ': '( not ( and .def_402 .def_499 ) ) ', '.def_528 ': '( not ( = xpp_1 1 ) ) ', '.def_531 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
.def_499 
30
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_402 ': '( = xpp_0 xpp_1 ) ', '.def_499 ': '( = xpp_1 8 ) ', '.def_502 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_526 ': '( not ( and ( = xpp_0 xpp_1 ) .def_499 ) ) ', '.def_528 ': '( not ( = xpp_1 1 ) ) ', '.def_531 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
subs1 ( not ( = xpp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 1 ) ) 
subs1 ( not ( = xpp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 1 ) ) 
subs1 ( not ( and .def_402 .def_499 ) ) 
remove lets from formula
subs2 ( not ( and .def_402 .def_499 ) ) 
.def_402 
12
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_402 ': '( = xpp_0 xpp_1 ) ', '.def_499 ': '( = xpp_1 8 ) ', '.def_502 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_526 ': '( not ( and .def_402 .def_499 ) ) ', '.def_528 ': '( not ( = xpp_1 1 ) ) ', '.def_531 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
.def_499 
30
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_402 ': '( = xpp_0 xpp_1 ) ', '.def_499 ': '( = xpp_1 8 ) ', '.def_502 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_526 ': '( not ( and ( = xpp_0 xpp_1 ) .def_499 ) ) ', '.def_528 ': '( not ( = xpp_1 1 ) ) ', '.def_531 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
subs1 ( not ( and ( not .def_502 ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and .def_191 .def_402 ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( and ( not .def_502 ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and .def_191 .def_402 ) ) ) ) ) ) 
.def_191 
189
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_402 ': '( = xpp_0 xpp_1 ) ', '.def_499 ': '( = xpp_1 8 ) ', '.def_502 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_526 ': '( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ', '.def_528 ': '( not ( = xpp_1 1 ) ) ', '.def_531 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
.def_402 
214
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_402 ': '( = xpp_0 xpp_1 ) ', '.def_499 ': '( = xpp_1 8 ) ', '.def_502 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_526 ': '( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ', '.def_528 ': '( not ( = xpp_1 1 ) ) ', '.def_531 ': '( not ( and ( not .def_502 ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) .def_402 ) ) ) ) ) ) '}
.def_502 
18
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_402 ': '( = xpp_0 xpp_1 ) ', '.def_499 ': '( = xpp_1 8 ) ', '.def_502 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_526 ': '( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ', '.def_528 ': '( not ( = xpp_1 1 ) ) ', '.def_531 ': '( not ( and ( not .def_502 ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
subs1 ( not ( = xpp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 1 ) ) 
subs1 ( not ( and ( not .def_502 ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and .def_191 .def_402 ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( and ( not .def_502 ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and .def_191 .def_402 ) ) ) ) ) ) 
.def_191 
189
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_402 ': '( = xpp_0 xpp_1 ) ', '.def_499 ': '( = xpp_1 8 ) ', '.def_502 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_526 ': '( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ', '.def_528 ': '( not ( = xpp_1 1 ) ) ', '.def_531 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
.def_402 
214
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_402 ': '( = xpp_0 xpp_1 ) ', '.def_499 ': '( = xpp_1 8 ) ', '.def_502 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_526 ': '( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ', '.def_528 ': '( not ( = xpp_1 1 ) ) ', '.def_531 ': '( not ( and ( not .def_502 ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) .def_402 ) ) ) ) ) ) '}
.def_502 
18
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_402 ': '( = xpp_0 xpp_1 ) ', '.def_499 ': '( = xpp_1 8 ) ', '.def_502 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_526 ': '( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ', '.def_528 ': '( not ( = xpp_1 1 ) ) ', '.def_531 ': '( not ( and ( not .def_502 ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
subs1 ( = xpp_0 xpp_1 ) 
remove lets from formula
subs2 ( = xpp_0 xpp_1 ) 
subs1 ( not ( = xpp_0 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_0 1009 ) ) 
subs1 ( not ( = xpp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 1 ) ) 
subs1 ( not ( and ( not .def_502 ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and .def_191 .def_402 ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( and ( not .def_502 ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and .def_191 .def_402 ) ) ) ) ) ) 
.def_191 
189
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_402 ': '( = xpp_0 xpp_1 ) ', '.def_499 ': '( = xpp_1 8 ) ', '.def_502 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_526 ': '( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ', '.def_528 ': '( not ( = xpp_1 1 ) ) ', '.def_531 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
.def_402 
214
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_402 ': '( = xpp_0 xpp_1 ) ', '.def_499 ': '( = xpp_1 8 ) ', '.def_502 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_526 ': '( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ', '.def_528 ': '( not ( = xpp_1 1 ) ) ', '.def_531 ': '( not ( and ( not .def_502 ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) .def_402 ) ) ) ) ) ) '}
.def_502 
18
aux_vars_subs_dict {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_402 ': '( = xpp_0 xpp_1 ) ', '.def_499 ': '( = xpp_1 8 ) ', '.def_502 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_526 ': '( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ', '.def_528 ': '( not ( = xpp_1 1 ) ) ', '.def_531 ': '( not ( and ( not .def_502 ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
subs1 ( = xpp_1 8 ) 
remove lets from formula
subs2 ( = xpp_1 8 ) 
aux_vars_subs_dict  {'.def_191 ': '( not ( = xpp_0 1009 ) ) ', '.def_402 ': '( = xpp_0 xpp_1 ) ', '.def_499 ': '( = xpp_1 8 ) ', '.def_502 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_526 ': '( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ', '.def_528 ': '( not ( = xpp_1 1 ) ) ', '.def_531 ': '( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) '}
{26: 41, 20: 43, 9: 45, 7: 47, 68: 84, 57: 86, 55: 88, 109: 121, 98: 123, 96: 125, 166: 172, 187: 195, 197: 213, 183: 215, 174: 217, 162: 219, 152: 221, 146: 223, 135: 225, 133: 227, 254: 278, 248: 280, 237: 282, 235: 284, 311: 323, 305: 325, 294: 327, 292: 329, 362: 377, 391: 406, 385: 408, 422: 436, 416: 438, 472: 478, 493: 501, 503: 519, 489: 521, 480: 523, 468: 525, 458: 527, 452: 529, 446: 531, 533: 557, 440: 559, 410: 561, 379: 563, 356: 565, 350: 567, 339: 569, 337: 571, 579: 591, 599: 611, 643: 667, 637: 678, 631: 680, 703: 727, 688: 729, 682: 731, 625: 733, 804: 818, 798: 820, 792: 831, 777: 833, 771: 835, 756: 837, 741: 839, 735: 841, 619: 843, 881: 896, 866: 898, 851: 900, 845: 902, 613: 904, 593: 906, 573: 908, 331: 910, 286: 912, 229: 914, 127: 916, 90: 918, 49: 920, 1: 922}
{21: 37, 10: 39, 8: 41, 62: 74, 51: 76, 49: 78, 119: 125, 140: 148, 150: 166, 136: 168, 127: 170, 115: 172, 105: 174, 99: 176, 88: 178, 86: 180, 207: 231, 201: 233, 190: 235, 188: 237, 264: 276, 258: 278, 247: 280, 245: 282, 315: 330, 344: 359, 338: 361, 375: 389, 369: 391, 425: 431, 446: 454, 456: 472, 442: 474, 433: 476, 421: 478, 411: 480, 405: 482, 399: 484, 486: 510, 393: 512, 363: 514, 332: 516, 309: 518, 303: 520, 292: 522, 290: 524, 532: 544, 552: 564, 596: 620, 590: 631, 584: 633, 656: 680, 641: 682, 635: 684, 578: 686, 757: 771, 751: 773, 745: 784, 730: 786, 724: 788, 709: 790, 694: 792, 688: 794, 572: 796, 834: 849, 819: 851, 804: 853, 798: 855, 566: 857, 546: 859, 526: 861, 284: 863, 239: 865, 182: 867, 80: 869, 43: 871, 2: 873}
{22: 34, 11: 36, 9: 38, 79: 85, 100: 108, 110: 126, 96: 128, 87: 130, 75: 132, 65: 134, 59: 136, 48: 138, 46: 140, 167: 191, 161: 193, 150: 195, 148: 197, 224: 236, 218: 238, 207: 240, 205: 242, 275: 290, 304: 319, 298: 321, 335: 349, 329: 351, 385: 391, 406: 414, 416: 432, 402: 434, 393: 436, 381: 438, 371: 440, 365: 442, 359: 444, 446: 470, 353: 472, 323: 474, 292: 476, 269: 478, 263: 480, 252: 482, 250: 484, 492: 504, 512: 524, 556: 580, 550: 591, 544: 593, 616: 640, 601: 642, 595: 644, 538: 646, 717: 731, 711: 733, 705: 744, 690: 746, 684: 748, 669: 750, 654: 752, 648: 754, 532: 756, 794: 809, 779: 811, 764: 813, 758: 815, 526: 817, 506: 819, 486: 821, 244: 823, 199: 825, 142: 827, 40: 829, 3: 831}
{43: 49, 64: 72, 74: 90, 60: 92, 51: 94, 39: 96, 29: 98, 23: 100, 12: 102, 10: 104, 131: 155, 125: 157, 114: 159, 112: 161, 188: 200, 182: 202, 171: 204, 169: 206, 239: 254, 268: 283, 262: 285, 299: 313, 293: 315, 349: 355, 370: 378, 380: 396, 366: 398, 357: 400, 345: 402, 335: 404, 329: 406, 323: 408, 410: 434, 317: 436, 287: 438, 256: 440, 233: 442, 227: 444, 216: 446, 214: 448, 456: 468, 476: 488, 520: 544, 514: 555, 508: 557, 580: 604, 565: 606, 559: 608, 502: 610, 681: 695, 675: 697, 669: 708, 654: 710, 648: 712, 633: 714, 618: 716, 612: 718, 496: 720, 758: 773, 743: 775, 728: 777, 722: 779, 490: 781, 470: 783, 450: 785, 208: 787, 163: 789, 106: 791, 4: 793}
{30: 54, 24: 56, 13: 58, 11: 60, 87: 99, 81: 101, 70: 103, 68: 105, 138: 153, 167: 182, 161: 184, 198: 212, 192: 214, 248: 254, 269: 277, 279: 295, 265: 297, 256: 299, 244: 301, 234: 303, 228: 305, 222: 307, 309: 333, 216: 335, 186: 337, 155: 339, 132: 341, 126: 343, 115: 345, 113: 347, 355: 367, 375: 387, 419: 443, 413: 454, 407: 456, 479: 503, 464: 505, 458: 507, 401: 509, 580: 594, 574: 596, 568: 607, 553: 609, 547: 611, 532: 613, 517: 615, 511: 617, 395: 619, 657: 672, 642: 674, 627: 676, 621: 678, 389: 680, 369: 682, 349: 684, 107: 686, 62: 688, 5: 690}
{31: 43, 25: 45, 14: 47, 12: 49, 82: 97, 111: 126, 105: 128, 142: 156, 136: 158, 192: 198, 213: 221, 223: 239, 209: 241, 200: 243, 188: 245, 178: 247, 172: 249, 166: 251, 253: 277, 160: 279, 130: 281, 99: 283, 76: 285, 70: 287, 59: 289, 57: 291, 299: 311, 319: 331, 363: 387, 357: 398, 351: 400, 423: 447, 408: 449, 402: 451, 345: 453, 524: 538, 518: 540, 512: 551, 497: 553, 491: 555, 476: 557, 461: 559, 455: 561, 339: 563, 601: 616, 586: 618, 571: 620, 565: 622, 333: 624, 313: 626, 293: 628, 51: 630, 6: 632}
{38: 53, 67: 82, 61: 84, 98: 112, 92: 114, 148: 154, 169: 177, 179: 195, 165: 197, 156: 199, 144: 201, 134: 203, 128: 205, 122: 207, 209: 233, 116: 235, 86: 237, 55: 239, 32: 241, 26: 243, 15: 245, 13: 247, 255: 267, 275: 287, 319: 343, 313: 354, 307: 356, 379: 403, 364: 405, 358: 407, 301: 409, 480: 494, 474: 496, 468: 507, 453: 509, 447: 511, 432: 513, 417: 515, 411: 517, 295: 519, 557: 572, 542: 574, 527: 576, 521: 578, 289: 580, 269: 582, 249: 584, 7: 586}
remove lets from formula
final_formula  ( and ( = hpp_1 1 ) ( and ( = hpp_0 1 ) ( and ( and ( and ( not ( and ( and .def_502 .def_526 ) .def_528 ) ) ( not ( and .def_528 ( and .def_526 .def_531 ) ) ) ) ( not ( and .def_528 ( and .def_531 ( not ( and .def_402 ( and ( not ( = xpp_0 383 ) ) .def_191 ) ) ) ) ) ) ) ( not ( and .def_528 ( and .def_531 ( not .def_499 ) ) ) ) ) ) ) 
[' ( and ( = hpp_1 1 ) ( and ( = hpp_0 1 ) ( and ( and ( and ( not ( and ( and ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ) ( not ( = xpp_1 1 ) ) ) ) ( not ( and ( not ( = xpp_1 1 ) ) ( and ( not ( and ( = xpp_0 xpp_1 ) ( = xpp_1 8 ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xpp_1 1 ) ) ( and ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ( not ( and ( = xpp_0 xpp_1 ) ( and ( not ( = xpp_0 383 ) ) ( not ( = xpp_0 1009 ) ) ) ) ) ) ) ) ) ( not ( and ( not ( = xpp_1 1 ) ) ( and ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ( not ( = xpp_1 8 ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 37, 9: 39, 7: 41, 68: 86, 62: 88, 51: 90, 49: 92, 119: 132, 113: 134, 102: 136, 100: 138, 180: 197, 174: 208, 159: 210, 148: 212, 146: 214, 235: 259, 224: 261, 222: 263, 319: 343, 304: 345, 298: 356, 283: 358, 360: 384, 277: 386, 388: 412, 271: 414, 265: 416, 216: 418, 140: 420, 94: 422, 43: 424, 1: 426}
aux_vars_first_occ_dict {'.def_233 ': 11, '.def_273 ': 53, '.def_274 ': 104, '.def_563 ': 150, '.def_566 ': 226}
aux_vars_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_563 ': '( and .def_233 ( and ( = countppp_0 1 ) .def_273 ) ) ', '.def_566 ': '( and .def_233 .def_274 ) '}
subs1 ( = countppp_1 1 ) 
remove lets from formula
subs2 ( = countppp_1 1 ) 
subs1 ( not ( = xppp_0 xppp_1 ) ) 
remove lets from formula
subs2 ( not ( = xppp_0 xppp_1 ) ) 
subs1 ( not ( = xppp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = xppp_1 1 ) ) 
subs1 ( and .def_233 ( and ( = countppp_0 1 ) .def_273 ) ) 
remove lets from formula
subs2 ( and .def_233 ( and ( = countppp_0 1 ) .def_273 ) ) 
.def_233 
6
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) '}
.def_273 
50
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_563 ': '( and ( = countppp_1 1 ) ( and ( = countppp_0 1 ) .def_273 ) ) '}
subs1 ( = countppp_1 1 ) 
remove lets from formula
subs2 ( = countppp_1 1 ) 
subs1 ( not ( = xppp_0 xppp_1 ) ) 
remove lets from formula
subs2 ( not ( = xppp_0 xppp_1 ) ) 
subs1 ( and .def_233 .def_274 ) 
remove lets from formula
subs2 ( and .def_233 .def_274 ) 
.def_233 
6
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_563 ': '( and ( = countppp_1 1 ) ( and ( = countppp_0 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ) '}
.def_274 
25
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_563 ': '( and ( = countppp_1 1 ) ( and ( = countppp_0 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ) ', '.def_566 ': '( and ( = countppp_1 1 ) .def_274 ) '}
subs1 ( = countppp_1 1 ) 
remove lets from formula
subs2 ( = countppp_1 1 ) 
subs1 ( not ( = xppp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = xppp_1 1 ) ) 
subs1 ( not ( = xppp_0 xppp_1 ) ) 
remove lets from formula
subs2 ( not ( = xppp_0 xppp_1 ) ) 
subs1 ( not ( = xppp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = xppp_1 1 ) ) 
subs1 ( not ( = xppp_0 xppp_1 ) ) 
remove lets from formula
subs2 ( not ( = xppp_0 xppp_1 ) ) 
subs1 ( and .def_233 ( and ( = countppp_0 1 ) .def_273 ) ) 
remove lets from formula
subs2 ( and .def_233 ( and ( = countppp_0 1 ) .def_273 ) ) 
.def_233 
6
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_563 ': '( and ( = countppp_1 1 ) ( and ( = countppp_0 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ) ', '.def_566 ': '( and ( = countppp_1 1 ) ( not ( = xppp_1 1 ) ) ) '}
.def_273 
50
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_563 ': '( and ( = countppp_1 1 ) ( and ( = countppp_0 1 ) .def_273 ) ) ', '.def_566 ': '( and ( = countppp_1 1 ) ( not ( = xppp_1 1 ) ) ) '}
subs1 ( and .def_233 .def_274 ) 
remove lets from formula
subs2 ( and .def_233 .def_274 ) 
.def_233 
6
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_563 ': '( and ( = countppp_1 1 ) ( and ( = countppp_0 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ) ', '.def_566 ': '( and ( = countppp_1 1 ) ( not ( = xppp_1 1 ) ) ) '}
.def_274 
25
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_563 ': '( and ( = countppp_1 1 ) ( and ( = countppp_0 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ) ', '.def_566 ': '( and ( = countppp_1 1 ) .def_274 ) '}
subs1 ( not ( = xppp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = xppp_1 1 ) ) 
subs1 ( and .def_233 ( and ( = countppp_0 1 ) .def_273 ) ) 
remove lets from formula
subs2 ( and .def_233 ( and ( = countppp_0 1 ) .def_273 ) ) 
.def_233 
6
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_563 ': '( and ( = countppp_1 1 ) ( and ( = countppp_0 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ) ', '.def_566 ': '( and ( = countppp_1 1 ) ( not ( = xppp_1 1 ) ) ) '}
.def_273 
50
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_563 ': '( and ( = countppp_1 1 ) ( and ( = countppp_0 1 ) .def_273 ) ) ', '.def_566 ': '( and ( = countppp_1 1 ) ( not ( = xppp_1 1 ) ) ) '}
subs1 ( and .def_233 ( and ( = countppp_0 1 ) .def_273 ) ) 
remove lets from formula
subs2 ( and .def_233 ( and ( = countppp_0 1 ) .def_273 ) ) 
.def_233 
6
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_563 ': '( and ( = countppp_1 1 ) ( and ( = countppp_0 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ) ', '.def_566 ': '( and ( = countppp_1 1 ) ( not ( = xppp_1 1 ) ) ) '}
.def_273 
50
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_563 ': '( and ( = countppp_1 1 ) ( and ( = countppp_0 1 ) .def_273 ) ) ', '.def_566 ': '( and ( = countppp_1 1 ) ( not ( = xppp_1 1 ) ) ) '}
subs1 ( and .def_233 .def_274 ) 
remove lets from formula
subs2 ( and .def_233 .def_274 ) 
.def_233 
6
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_563 ': '( and ( = countppp_1 1 ) ( and ( = countppp_0 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ) ', '.def_566 ': '( and ( = countppp_1 1 ) ( not ( = xppp_1 1 ) ) ) '}
.def_274 
25
aux_vars_subs_dict {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_563 ': '( and ( = countppp_1 1 ) ( and ( = countppp_0 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ) ', '.def_566 ': '( and ( = countppp_1 1 ) .def_274 ) '}
aux_vars_subs_dict  {'.def_233 ': '( = countppp_1 1 ) ', '.def_273 ': '( not ( = xppp_0 xppp_1 ) ) ', '.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_563 ': '( and ( = countppp_1 1 ) ( and ( = countppp_0 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ) ', '.def_566 ': '( and ( = countppp_1 1 ) ( not ( = xppp_1 1 ) ) ) '}
{20: 37, 9: 39, 7: 41, 68: 86, 62: 88, 51: 90, 49: 92, 119: 132, 113: 134, 102: 136, 100: 138, 180: 197, 174: 208, 159: 210, 148: 212, 146: 214, 235: 259, 224: 261, 222: 263, 319: 343, 304: 345, 298: 356, 283: 358, 360: 384, 277: 386, 388: 412, 271: 414, 265: 416, 216: 418, 140: 420, 94: 422, 43: 424, 1: 426}
{27: 45, 21: 47, 10: 49, 8: 51, 78: 91, 72: 93, 61: 95, 59: 97, 139: 156, 133: 167, 118: 169, 107: 171, 105: 173, 194: 218, 183: 220, 181: 222, 278: 302, 263: 304, 257: 315, 242: 317, 319: 343, 236: 345, 347: 371, 230: 373, 224: 375, 175: 377, 99: 379, 53: 381, 2: 383}
{28: 41, 22: 43, 11: 45, 9: 47, 89: 106, 83: 117, 68: 119, 57: 121, 55: 123, 144: 168, 133: 170, 131: 172, 228: 252, 213: 254, 207: 265, 192: 267, 269: 293, 186: 295, 297: 321, 180: 323, 174: 325, 125: 327, 49: 329, 3: 331}
{44: 61, 38: 72, 23: 74, 12: 76, 10: 78, 99: 123, 88: 125, 86: 127, 183: 207, 168: 209, 162: 220, 147: 222, 224: 248, 141: 250, 252: 276, 135: 278, 129: 280, 80: 282, 4: 284}
{24: 48, 13: 50, 11: 52, 108: 132, 93: 134, 87: 145, 72: 147, 149: 173, 66: 175, 177: 201, 60: 203, 54: 205, 5: 207}
remove lets from formula
final_formula  ( not ( and ( and ( and .def_273 ( and ( and .def_274 ( and .def_273 .def_563 ) ) .def_566 ) ) ( and .def_274 .def_563 ) ) ( and .def_563 .def_566 ) ) ) 
[' ( not ( and ( and ( and ( not ( = xppp_0 xppp_1 ) ) ( and ( and ( not ( = xppp_1 1 ) ) ( and ( not ( = xppp_0 xppp_1 ) ) ( and ( = countppp_1 1 ) ( and ( = countppp_0 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ) ) ) ( and ( = countppp_1 1 ) ( not ( = xppp_1 1 ) ) ) ) ) ( and ( not ( = xppp_1 1 ) ) ( and ( = countppp_1 1 ) ( and ( = countppp_0 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ) ) ) ( and ( and ( = countppp_1 1 ) ( and ( = countppp_0 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ) ( and ( = countppp_1 1 ) ( not ( = xppp_1 1 ) ) ) ) ) ) ']
new_pred_smt_format ['(declare-rel pred_0_synth_msat_4 (Int Int Int))\n (rule (=>  ( = (rel x 0) 1009  ) (pred_0_synth_msat_4 x h count)))']
['(declare-rel pred_0_synth_msat_4 (Int Int Int))\n (rule (=>  ( = (rel x 0) 1009  ) (pred_0_synth_msat_4 x h count)))']
Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied.
Pre-processing time:	0.051806 
Solver time:	1.30708
Total time:	1.358886
Iteration count:	6
Predicate count:	8
Successfully added new predicate to input file. !
Start next refinement loop: True



PDSC: Verifying ./Benchmarks_msat/subsume_ref_ref.smt2
Namespace(file='./Benchmarks_msat/subsume_ref_ref.smt2', log=False, msat=True, property=None, qe=False, sygus=False)
In if ladder True
Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[2]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
count_0_1, 
pred_0_synth_msat_3, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
count_0_1, 
pred_0_synth_msat_3, ]
--->[1]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


6 SMT queries performed.
before complete_trace: [abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


after complete_trace [abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[-1]


-----------------------------------check_spur-------------------------------
final init cond And(0 == count_0,
    0 == count_1,
    And(x_0 == x_1, h_0 == 1, h_1 == 1))
Initial concrete state  {'x_1': 0, 'count_0_1': True, 'abs_h_1': True, 'count_0_0': True, 'abs_h_0': True, 'pred_0_synth_msat_4': False, 'pred_0_synth_msat_3': False, 'pred_0_synth_msat_2': False, 'pred_0_synth_msat_1': False, 'x0_eq_x1': True, 'h_1': 1, 'h_0': 1, 'x_0': 0, 'count_1': 0, 'count_0': 0}
Next concrete state {'count_1': 1, 'x_1': 8, 'count_0': 0, 'h_0': 1, 'x_0': 0, 'h_1': 1}
Writing an smt file to be run using mathsat
Checking output from mathsat 5
hi
paren_dict {19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 96: 110, 90: 112, 79: 114, 77: 116, 138: 148, 177: 191, 171: 193, 223: 246, 209: 248, 195: 250, 165: 252, 150: 254, 132: 256, 118: 258, 71: 260, 37: 262, 1: 264}
aux_vars_first_occ_dict {'.def_17 ': 11, '.def_22 ': 47, '.def_227 ': 81}
aux_vars_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_227 ': '( not ( = count_1 1 ) ) '}
subs1 ( = x_0 x_1 ) 
remove lets from formula
subs2 ( = x_0 x_1 ) 
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( = x_0 x_1 ) 
remove lets from formula
subs2 ( = x_0 x_1 ) 
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( = x_0 x_1 ) 
remove lets from formula
subs2 ( = x_0 x_1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
aux_vars_subs_dict  {'.def_17 ': '( = x_0 x_1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_227 ': '( not ( = count_1 1 ) ) '}
{19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 96: 110, 90: 112, 79: 114, 77: 116, 138: 148, 177: 191, 171: 193, 223: 246, 209: 248, 195: 250, 165: 252, 150: 254, 132: 256, 118: 258, 71: 260, 37: 262, 1: 264}
{20: 30, 10: 32, 8: 34, 61: 75, 55: 77, 44: 79, 42: 81, 103: 113, 142: 156, 136: 158, 188: 211, 174: 213, 160: 215, 130: 217, 115: 219, 97: 221, 83: 223, 36: 225, 2: 227}
{28: 42, 22: 44, 11: 46, 9: 48, 70: 80, 109: 123, 103: 125, 155: 178, 141: 180, 127: 182, 97: 184, 82: 186, 64: 188, 50: 190, 3: 192}
remove lets from formula
final_formula  ( and .def_22 ( and ( = h_0 1 ) ( and .def_227 ( and ( not ( = count_0 1 ) ) ( and .def_17 ( and .def_22 ( and .def_17 .def_227 ) ) ) ) ) ) ) 
[' ( and ( = h_1 1 ) ( and ( = h_0 1 ) ( and ( not ( = count_1 1 ) ) ( and ( not ( = count_0 1 ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {19: 34, 9: 36, 7: 38, 78: 84, 99: 107, 109: 124, 95: 126, 86: 128, 74: 130, 65: 132, 59: 134, 48: 136, 46: 138, 146: 157, 177: 188, 171: 190, 211: 226, 260: 275, 289: 303, 283: 305, 319: 332, 313: 334, 336: 350, 307: 352, 277: 354, 254: 356, 248: 358, 234: 360, 374: 385, 368: 396, 362: 398, 228: 400, 206: 402, 192: 404, 165: 406, 159: 408, 140: 410, 40: 412, 1: 414}
aux_vars_first_occ_dict {'.def_49 ': 11, '.def_239 ': 50}
aux_vars_dict {'.def_49 ': '( = countp_1 1 ) ', '.def_239 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) '}
subs1 ( = countp_1 1 ) 
remove lets from formula
subs2 ( = countp_1 1 ) 
subs1 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
subs1 ( = countp_1 1 ) 
remove lets from formula
subs2 ( = countp_1 1 ) 
subs1 ( = countp_1 1 ) 
remove lets from formula
subs2 ( = countp_1 1 ) 
subs1 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
subs1 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) 
aux_vars_subs_dict  {'.def_49 ': '( = countp_1 1 ) ', '.def_239 ': '( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) '}
{19: 34, 9: 36, 7: 38, 78: 84, 99: 107, 109: 124, 95: 126, 86: 128, 74: 130, 65: 132, 59: 134, 48: 136, 46: 138, 146: 157, 177: 188, 171: 190, 211: 226, 260: 275, 289: 303, 283: 305, 319: 332, 313: 334, 336: 350, 307: 352, 277: 354, 254: 356, 248: 358, 234: 360, 374: 385, 368: 396, 362: 398, 228: 400, 206: 402, 192: 404, 165: 406, 159: 408, 140: 410, 40: 412, 1: 414}
{40: 46, 61: 69, 71: 86, 57: 88, 48: 90, 36: 92, 27: 94, 21: 96, 10: 98, 8: 100, 108: 119, 139: 150, 133: 152, 173: 188, 222: 237, 251: 265, 245: 267, 281: 294, 275: 296, 298: 312, 269: 314, 239: 316, 216: 318, 210: 320, 196: 322, 336: 347, 330: 358, 324: 360, 190: 362, 168: 364, 154: 366, 127: 368, 121: 370, 102: 372, 2: 374}
remove lets from formula
final_formula  ( and ( = hp_0 1 ) ( not ( and ( not ( = xp_1 1 ) ) ( and .def_49 ( or ( = countp_0 1 ) ( and ( and .def_49 ( not ( and ( not .def_239 ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ( not ( and ( = xp_1 8 ) .def_239 ) ) ) ) ) ) ) ) 
[' ( and ( = hp_0 1 ) ( not ( and ( not ( = xp_1 1 ) ) ( and ( = countp_1 1 ) ( or ( = countp_0 1 ) ( and ( and ( = countp_1 1 ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ( not ( and ( = xp_1 8 ) ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 36, 9: 38, 7: 40, 60: 72, 54: 74, 97: 113, 127: 143, 121: 145, 115: 156, 91: 158, 76: 160, 48: 162, 42: 164, 1: 166}
aux_vars_first_occ_dict {'.def_164 ': 11}
aux_vars_dict {'.def_164 ': '( = countpp_1 1 ) '}
subs1 ( = countpp_1 1 ) 
remove lets from formula
subs2 ( = countpp_1 1 ) 
subs1 ( = countpp_1 1 ) 
remove lets from formula
subs2 ( = countpp_1 1 ) 
subs1 ( = countpp_1 1 ) 
remove lets from formula
subs2 ( = countpp_1 1 ) 
aux_vars_subs_dict  {'.def_164 ': '( = countpp_1 1 ) '}
{20: 36, 9: 38, 7: 40, 60: 72, 54: 74, 97: 113, 127: 143, 121: 145, 115: 156, 91: 158, 76: 160, 48: 162, 42: 164, 1: 166}
remove lets from formula
final_formula  ( not ( and ( not ( = xpp_1 1 ) ) ( and .def_164 ( and ( = countpp_0 1 ) ( and ( not ( = xpp_0 xpp_1 ) ) .def_164 ) ) ) ) ) 
[' ( not ( and ( not ( = xpp_1 1 ) ) ( and ( = countpp_1 1 ) ( and ( = countpp_0 1 ) ( and ( not ( = xpp_0 xpp_1 ) ) ( = countpp_1 1 ) ) ) ) ) ) ']
new_pred_smt_format ['(declare-rel pred_0_synth_msat_5 (Int Int Int))\n (rule (=>  ( = (rel x 1) 8  ) (pred_0_synth_msat_5 x h count)))']
['(declare-rel pred_0_synth_msat_5 (Int Int Int))\n (rule (=>  ( = (rel x 1) 8  ) (pred_0_synth_msat_5 x h count)))']
Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied.
Pre-processing time:	0.053792 
Solver time:	1.325109
Total time:	1.3789010000000002
Iteration count:	6
Predicate count:	9
Successfully added new predicate to input file. !
Start next refinement loop: True



PDSC: Verifying ./Benchmarks_msat/subsume_ref_ref.smt2
Namespace(file='./Benchmarks_msat/subsume_ref_ref.smt2', log=False, msat=True, property=None, qe=False, sygus=False)
In if ladder True
Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[2]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
count_0_1, 
pred_0_synth_msat_3, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
count_0_1, 
pred_0_synth_msat_3, ]
--->[1]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


6 SMT queries performed.
before complete_trace: [abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


after complete_trace [abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[-1]


-----------------------------------check_spur-------------------------------
final init cond And(0 == count_0,
    0 == count_1,
    And(x_0 == x_1, h_0 == 1, h_1 == 1))
Initial concrete state  {'x_1': 9, 'count_0_1': True, 'abs_h_1': True, 'count_0_0': True, 'abs_h_0': True, 'pred_0_synth_msat_5': False, 'pred_0_synth_msat_4': False, 'pred_0_synth_msat_3': False, 'pred_0_synth_msat_2': False, 'pred_0_synth_msat_1': False, 'x0_eq_x1': True, 'h_1': 1, 'h_0': 1, 'x_0': 9, 'count_1': 0, 'count_0': 0}
Next concrete state {'count_1': 1, 'x_1': 9, 'count_0': 0, 'h_0': 1, 'x_0': 9, 'h_1': 1}
Next concrete state {'count_0': 1, 'x_0': 9, 'count_1': 1, 'h_1': 1, 'x_1': 9, 'h_0': 1}
Next concrete state {'x_1': 9, 'count_0': 1, 'x_0': 9, 'count_1': 1, 'h_1': 1, 'h_0': 1}
Writing an smt file to be run using mathsat
Checking output from mathsat 5
hi
paren_dict {19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 89: 99, 79: 101, 77: 103, 130: 144, 124: 146, 113: 148, 111: 150, 207: 221, 201: 223, 245: 268, 298: 321, 284: 323, 270: 325, 239: 327, 225: 329, 195: 331, 180: 333, 166: 335, 152: 337, 105: 339, 71: 341, 37: 343, 1: 345}
aux_vars_first_occ_dict {'.def_17 ': 11, '.def_20 ': 47, '.def_22 ': 81, '.def_433 ': 115}
aux_vars_dict {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_433 ': '( not ( = count_1 1 ) ) '}
subs1 ( = x_0 x_1 ) 
remove lets from formula
subs2 ( = x_0 x_1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
subs1 ( = x_0 x_1 ) 
remove lets from formula
subs2 ( = x_0 x_1 ) 
subs1 ( = h_1 1 ) 
remove lets from formula
subs2 ( = h_1 1 ) 
subs1 ( = x_0 x_1 ) 
remove lets from formula
subs2 ( = x_0 x_1 ) 
subs1 ( not ( = count_1 1 ) ) 
remove lets from formula
subs2 ( not ( = count_1 1 ) ) 
aux_vars_subs_dict  {'.def_17 ': '( = x_0 x_1 ) ', '.def_20 ': '( = h_0 1 ) ', '.def_22 ': '( = h_1 1 ) ', '.def_433 ': '( not ( = count_1 1 ) ) '}
{19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 89: 99, 79: 101, 77: 103, 130: 144, 124: 146, 113: 148, 111: 150, 207: 221, 201: 223, 245: 268, 298: 321, 284: 323, 270: 325, 239: 327, 225: 329, 195: 331, 180: 333, 166: 335, 152: 337, 105: 339, 71: 341, 37: 343, 1: 345}
{20: 30, 10: 32, 8: 34, 54: 64, 44: 66, 42: 68, 95: 109, 89: 111, 78: 113, 76: 115, 172: 186, 166: 188, 210: 233, 263: 286, 249: 288, 235: 290, 204: 292, 190: 294, 160: 296, 145: 298, 131: 300, 117: 302, 70: 304, 36: 306, 2: 308}
{21: 31, 11: 33, 9: 35, 62: 76, 56: 78, 45: 80, 43: 82, 139: 153, 133: 155, 177: 200, 230: 253, 216: 255, 202: 257, 171: 259, 157: 261, 127: 263, 112: 265, 98: 267, 84: 269, 37: 271, 3: 273}
{29: 43, 23: 45, 12: 47, 10: 49, 106: 120, 100: 122, 144: 167, 197: 220, 183: 222, 169: 224, 138: 226, 124: 228, 94: 230, 79: 232, 65: 234, 51: 236, 4: 238}
remove lets from formula
final_formula  ( and .def_22 ( and .def_20 ( and .def_433 ( and ( not ( = count_0 1 ) ) ( and .def_20 ( and ( and .def_22 .def_433 ) ( and .def_17 ( and .def_22 ( and .def_17 .def_433 ) ) ) ) ) ) ) ) ) 
[' ( and ( = h_1 1 ) ( and ( = h_0 1 ) ( and ( not ( = count_1 1 ) ) ( and ( not ( = count_0 1 ) ) ( and ( = h_0 1 ) ( and ( and ( = h_1 1 ) ( not ( = count_1 1 ) ) ) ( and ( = x_0 x_1 ) ( and ( = h_1 1 ) ( and ( = x_0 x_1 ) ( not ( = count_1 1 ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {19: 30, 9: 32, 7: 34, 55: 66, 44: 68, 42: 70, 97: 111, 91: 113, 80: 115, 78: 117, 144: 158, 138: 160, 127: 162, 125: 164, 191: 204, 185: 206, 174: 208, 172: 210, 250: 256, 271: 279, 281: 296, 267: 298, 258: 300, 246: 302, 237: 304, 231: 306, 220: 308, 218: 310, 356: 362, 377: 385, 387: 402, 373: 404, 364: 406, 352: 408, 343: 410, 337: 412, 331: 414, 320: 416, 318: 418, 445: 456, 439: 458, 428: 460, 426: 462, 518: 541, 503: 543, 489: 545, 483: 547, 472: 549, 470: 551, 580: 595, 574: 597, 605: 616, 651: 675, 645: 686, 639: 688, 774: 787, 768: 789, 797: 812, 874: 888, 859: 890, 844: 892, 829: 894, 814: 896, 791: 898, 762: 900, 747: 902, 732: 904, 726: 906, 711: 908, 696: 910, 690: 912, 633: 914, 618: 916, 599: 918, 568: 920, 553: 922, 464: 924, 420: 926, 312: 928, 212: 930, 166: 932, 119: 934, 72: 936, 36: 938, 1: 940}
aux_vars_first_occ_dict {'.def_53 ': 11, '.def_100 ': 46, '.def_127 ': 82, '.def_449 ': 129, '.def_451 ': 176, '.def_459 ': 222, '.def_464 ': 322, '.def_481 ': 430, '.def_483 ': 474}
aux_vars_dict {'.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( not ( = xp_1 1009 ) ) ', '.def_451 ': '( not ( = xp_1 383 ) ) ', '.def_459 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_464 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 8 ) ) ', '.def_483 ': '( not ( and .def_53 ( and .def_449 ( and .def_53 .def_451 ) ) ) ) '}
subs1 ( = xp_1 1 ) 
remove lets from formula
subs2 ( = xp_1 1 ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( not ( = xp_0 1009 ) ) 
remove lets from formula
subs2 ( not ( = xp_0 1009 ) ) 
subs1 ( not ( = xp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 1009 ) ) 
subs1 ( not ( = xp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 383 ) ) 
subs1 ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) 
subs1 ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) 
subs1 ( not ( = xp_1 8 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 8 ) ) 
subs1 ( not ( and .def_53 ( and .def_449 ( and .def_53 .def_451 ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_53 ( and .def_449 ( and .def_53 .def_451 ) ) ) ) 
.def_53 
41
aux_vars_subs_dict {'.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( not ( = xp_1 1009 ) ) ', '.def_451 ': '( not ( = xp_1 383 ) ) ', '.def_459 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_464 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 8 ) ) '}
12
aux_vars_subs_dict {'.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( not ( = xp_1 1009 ) ) ', '.def_451 ': '( not ( = xp_1 383 ) ) ', '.def_459 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_464 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 8 ) ) '}
.def_449 
31
aux_vars_subs_dict {'.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( not ( = xp_1 1009 ) ) ', '.def_451 ': '( not ( = xp_1 383 ) ) ', '.def_459 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_464 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 8 ) ) ', '.def_483 ': '( not ( and ( = xp_1 1 ) ( and .def_449 ( and ( = xp_1 1 ) .def_451 ) ) ) ) '}
.def_451 
74
aux_vars_subs_dict {'.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( not ( = xp_1 1009 ) ) ', '.def_451 ': '( not ( = xp_1 383 ) ) ', '.def_459 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_464 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 8 ) ) ', '.def_483 ': '( not ( and ( = xp_1 1 ) ( and ( not ( = xp_1 1009 ) ) ( and ( = xp_1 1 ) .def_451 ) ) ) ) '}
subs1 ( = xp_1 1 ) 
remove lets from formula
subs2 ( = xp_1 1 ) 
subs1 ( not ( = xp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 1009 ) ) 
subs1 ( = xp_1 1 ) 
remove lets from formula
subs2 ( = xp_1 1 ) 
subs1 ( not ( = xp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 383 ) ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) 
subs1 ( not ( = xp_1 8 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 8 ) ) 
subs1 ( not ( and .def_53 ( and .def_449 ( and .def_53 .def_451 ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_53 ( and .def_449 ( and .def_53 .def_451 ) ) ) ) 
.def_53 
41
aux_vars_subs_dict {'.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( not ( = xp_1 1009 ) ) ', '.def_451 ': '( not ( = xp_1 383 ) ) ', '.def_459 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_464 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 8 ) ) ', '.def_483 ': '( not ( and ( = xp_1 1 ) ( and ( not ( = xp_1 1009 ) ) ( and ( = xp_1 1 ) ( not ( = xp_1 383 ) ) ) ) ) ) '}
12
aux_vars_subs_dict {'.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( not ( = xp_1 1009 ) ) ', '.def_451 ': '( not ( = xp_1 383 ) ) ', '.def_459 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_464 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 8 ) ) ', '.def_483 ': '( not ( and ( = xp_1 1 ) ( and ( not ( = xp_1 1009 ) ) ( and ( = xp_1 1 ) ( not ( = xp_1 383 ) ) ) ) ) ) '}
.def_449 
31
aux_vars_subs_dict {'.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( not ( = xp_1 1009 ) ) ', '.def_451 ': '( not ( = xp_1 383 ) ) ', '.def_459 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_464 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 8 ) ) ', '.def_483 ': '( not ( and ( = xp_1 1 ) ( and .def_449 ( and ( = xp_1 1 ) .def_451 ) ) ) ) '}
.def_451 
74
aux_vars_subs_dict {'.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( not ( = xp_1 1009 ) ) ', '.def_451 ': '( not ( = xp_1 383 ) ) ', '.def_459 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_464 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 8 ) ) ', '.def_483 ': '( not ( and ( = xp_1 1 ) ( and ( not ( = xp_1 1009 ) ) ( and ( = xp_1 1 ) .def_451 ) ) ) ) '}
subs1 ( not ( = xp_1 8 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 8 ) ) 
subs1 ( not ( and .def_53 ( and .def_449 ( and .def_53 .def_451 ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_53 ( and .def_449 ( and .def_53 .def_451 ) ) ) ) 
.def_53 
41
aux_vars_subs_dict {'.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( not ( = xp_1 1009 ) ) ', '.def_451 ': '( not ( = xp_1 383 ) ) ', '.def_459 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_464 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 8 ) ) ', '.def_483 ': '( not ( and ( = xp_1 1 ) ( and ( not ( = xp_1 1009 ) ) ( and ( = xp_1 1 ) ( not ( = xp_1 383 ) ) ) ) ) ) '}
12
aux_vars_subs_dict {'.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( not ( = xp_1 1009 ) ) ', '.def_451 ': '( not ( = xp_1 383 ) ) ', '.def_459 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_464 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 8 ) ) ', '.def_483 ': '( not ( and ( = xp_1 1 ) ( and ( not ( = xp_1 1009 ) ) ( and ( = xp_1 1 ) ( not ( = xp_1 383 ) ) ) ) ) ) '}
.def_449 
31
aux_vars_subs_dict {'.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( not ( = xp_1 1009 ) ) ', '.def_451 ': '( not ( = xp_1 383 ) ) ', '.def_459 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_464 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 8 ) ) ', '.def_483 ': '( not ( and ( = xp_1 1 ) ( and .def_449 ( and ( = xp_1 1 ) .def_451 ) ) ) ) '}
.def_451 
74
aux_vars_subs_dict {'.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( not ( = xp_1 1009 ) ) ', '.def_451 ': '( not ( = xp_1 383 ) ) ', '.def_459 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_464 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 8 ) ) ', '.def_483 ': '( not ( and ( = xp_1 1 ) ( and ( not ( = xp_1 1009 ) ) ( and ( = xp_1 1 ) .def_451 ) ) ) ) '}
subs1 ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) 
subs1 ( not ( = xp_0 1009 ) ) 
remove lets from formula
subs2 ( not ( = xp_0 1009 ) ) 
subs1 ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) 
subs1 ( not ( = xp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 1009 ) ) 
subs1 ( not ( = xp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xp_1 383 ) ) 
subs1 ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) 
remove lets from formula
subs2 ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) 
subs1 ( not ( = xp_0 1009 ) ) 
remove lets from formula
subs2 ( not ( = xp_0 1009 ) ) 
aux_vars_subs_dict  {'.def_53 ': '( = xp_1 1 ) ', '.def_100 ': '( = hp_0 1 ) ', '.def_127 ': '( not ( = xp_0 1009 ) ) ', '.def_449 ': '( not ( = xp_1 1009 ) ) ', '.def_451 ': '( not ( = xp_1 383 ) ) ', '.def_459 ': '( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ', '.def_464 ': '( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ', '.def_481 ': '( not ( = xp_1 8 ) ) ', '.def_483 ': '( not ( and ( = xp_1 1 ) ( and ( not ( = xp_1 1009 ) ) ( and ( = xp_1 1 ) ( not ( = xp_1 383 ) ) ) ) ) ) '}
{19: 30, 9: 32, 7: 34, 55: 66, 44: 68, 42: 70, 97: 111, 91: 113, 80: 115, 78: 117, 144: 158, 138: 160, 127: 162, 125: 164, 191: 204, 185: 206, 174: 208, 172: 210, 250: 256, 271: 279, 281: 296, 267: 298, 258: 300, 246: 302, 237: 304, 231: 306, 220: 308, 218: 310, 356: 362, 377: 385, 387: 402, 373: 404, 364: 406, 352: 408, 343: 410, 337: 412, 331: 414, 320: 416, 318: 418, 445: 456, 439: 458, 428: 460, 426: 462, 518: 541, 503: 543, 489: 545, 483: 547, 472: 549, 470: 551, 580: 595, 574: 597, 605: 616, 651: 675, 645: 686, 639: 688, 774: 787, 768: 789, 797: 812, 874: 888, 859: 890, 844: 892, 829: 894, 814: 896, 791: 898, 762: 900, 747: 902, 732: 904, 726: 906, 711: 908, 696: 910, 690: 912, 633: 914, 618: 916, 599: 918, 568: 920, 553: 922, 464: 924, 420: 926, 312: 928, 212: 930, 166: 932, 119: 934, 72: 936, 36: 938, 1: 940}
{21: 32, 10: 34, 8: 36, 63: 77, 57: 79, 46: 81, 44: 83, 110: 124, 104: 126, 93: 128, 91: 130, 157: 170, 151: 172, 140: 174, 138: 176, 216: 222, 237: 245, 247: 262, 233: 264, 224: 266, 212: 268, 203: 270, 197: 272, 186: 274, 184: 276, 322: 328, 343: 351, 353: 368, 339: 370, 330: 372, 318: 374, 309: 376, 303: 378, 297: 380, 286: 382, 284: 384, 411: 422, 405: 424, 394: 426, 392: 428, 484: 507, 469: 509, 455: 511, 449: 513, 438: 515, 436: 517, 546: 561, 540: 563, 571: 582, 617: 641, 611: 652, 605: 654, 740: 753, 734: 755, 763: 778, 840: 854, 825: 856, 810: 858, 795: 860, 780: 862, 757: 864, 728: 866, 713: 868, 698: 870, 692: 872, 677: 874, 662: 876, 656: 878, 599: 880, 584: 882, 565: 884, 534: 886, 519: 888, 430: 890, 386: 892, 278: 894, 178: 896, 132: 898, 85: 900, 38: 902, 2: 904}
{28: 42, 22: 44, 11: 46, 9: 48, 75: 89, 69: 91, 58: 93, 56: 95, 122: 135, 116: 137, 105: 139, 103: 141, 181: 187, 202: 210, 212: 227, 198: 229, 189: 231, 177: 233, 168: 235, 162: 237, 151: 239, 149: 241, 287: 293, 308: 316, 318: 333, 304: 335, 295: 337, 283: 339, 274: 341, 268: 343, 262: 345, 251: 347, 249: 349, 376: 387, 370: 389, 359: 391, 357: 393, 449: 472, 434: 474, 420: 476, 414: 478, 403: 480, 401: 482, 511: 526, 505: 528, 536: 547, 582: 606, 576: 617, 570: 619, 705: 718, 699: 720, 728: 743, 805: 819, 790: 821, 775: 823, 760: 825, 745: 827, 722: 829, 693: 831, 678: 833, 663: 835, 657: 837, 642: 839, 627: 841, 621: 843, 564: 845, 549: 847, 530: 849, 499: 851, 484: 853, 395: 855, 351: 857, 243: 859, 143: 861, 97: 863, 50: 865, 3: 867}
{29: 43, 23: 45, 12: 47, 10: 49, 76: 89, 70: 91, 59: 93, 57: 95, 135: 141, 156: 164, 166: 181, 152: 183, 143: 185, 131: 187, 122: 189, 116: 191, 105: 193, 103: 195, 241: 247, 262: 270, 272: 287, 258: 289, 249: 291, 237: 293, 228: 295, 222: 297, 216: 299, 205: 301, 203: 303, 330: 341, 324: 343, 313: 345, 311: 347, 403: 426, 388: 428, 374: 430, 368: 432, 357: 434, 355: 436, 465: 480, 459: 482, 490: 501, 536: 560, 530: 571, 524: 573, 659: 672, 653: 674, 682: 697, 759: 773, 744: 775, 729: 777, 714: 779, 699: 781, 676: 783, 647: 785, 632: 787, 617: 789, 611: 791, 596: 793, 581: 795, 575: 797, 518: 799, 503: 801, 484: 803, 453: 805, 438: 807, 349: 809, 305: 811, 197: 813, 97: 815, 51: 817, 4: 819}
{30: 43, 24: 45, 13: 47, 11: 49, 89: 95, 110: 118, 120: 135, 106: 137, 97: 139, 85: 141, 76: 143, 70: 145, 59: 147, 57: 149, 195: 201, 216: 224, 226: 241, 212: 243, 203: 245, 191: 247, 182: 249, 176: 251, 170: 253, 159: 255, 157: 257, 284: 295, 278: 297, 267: 299, 265: 301, 357: 380, 342: 382, 328: 384, 322: 386, 311: 388, 309: 390, 419: 434, 413: 436, 444: 455, 490: 514, 484: 525, 478: 527, 613: 626, 607: 628, 636: 651, 713: 727, 698: 729, 683: 731, 668: 733, 653: 735, 630: 737, 601: 739, 586: 741, 571: 743, 565: 745, 550: 747, 535: 749, 529: 751, 472: 753, 457: 755, 438: 757, 407: 759, 392: 761, 303: 763, 259: 765, 151: 767, 51: 769, 5: 771}
{44: 50, 65: 73, 75: 90, 61: 92, 52: 94, 40: 96, 31: 98, 25: 100, 14: 102, 12: 104, 150: 156, 171: 179, 181: 196, 167: 198, 158: 200, 146: 202, 137: 204, 131: 206, 125: 208, 114: 210, 112: 212, 239: 250, 233: 252, 222: 254, 220: 256, 312: 335, 297: 337, 283: 339, 277: 341, 266: 343, 264: 345, 374: 389, 368: 391, 399: 410, 445: 469, 439: 480, 433: 482, 568: 581, 562: 583, 591: 606, 668: 682, 653: 684, 638: 686, 623: 688, 608: 690, 585: 692, 556: 694, 541: 696, 526: 698, 520: 700, 505: 702, 490: 704, 484: 706, 427: 708, 412: 710, 393: 712, 362: 714, 347: 716, 258: 718, 214: 720, 106: 722, 6: 724}
{51: 57, 72: 80, 82: 97, 68: 99, 59: 101, 47: 103, 38: 105, 32: 107, 26: 109, 15: 111, 13: 113, 140: 151, 134: 153, 123: 155, 121: 157, 213: 236, 198: 238, 184: 240, 178: 242, 167: 244, 165: 246, 275: 290, 269: 292, 300: 311, 346: 370, 340: 381, 334: 383, 469: 482, 463: 484, 492: 507, 569: 583, 554: 585, 539: 587, 524: 589, 509: 591, 486: 593, 457: 595, 442: 597, 427: 599, 421: 601, 406: 603, 391: 605, 385: 607, 328: 609, 313: 611, 294: 613, 263: 615, 248: 617, 159: 619, 115: 621, 7: 623}
{33: 44, 27: 46, 16: 48, 14: 50, 106: 129, 91: 131, 77: 133, 71: 135, 60: 137, 58: 139, 168: 183, 162: 185, 193: 204, 239: 263, 233: 274, 227: 276, 362: 375, 356: 377, 385: 400, 462: 476, 447: 478, 432: 480, 417: 482, 402: 484, 379: 486, 350: 488, 335: 490, 320: 492, 314: 494, 299: 496, 284: 498, 278: 500, 221: 502, 206: 504, 187: 506, 156: 508, 141: 510, 52: 512, 8: 514}
{63: 86, 48: 88, 34: 90, 28: 92, 17: 94, 15: 96, 125: 140, 119: 142, 150: 161, 196: 220, 190: 231, 184: 233, 319: 332, 313: 334, 342: 357, 419: 433, 404: 435, 389: 437, 374: 439, 359: 441, 336: 443, 307: 445, 292: 447, 277: 449, 271: 451, 256: 453, 241: 455, 235: 457, 178: 459, 163: 461, 144: 463, 113: 465, 98: 467, 9: 469}
remove lets from formula
final_formula  ( and .def_100 ( and ( not ( = countp_0 1 ) ) ( and ( = hp_1 1 ) ( and .def_100 ( and ( not ( and ( and .def_459 .def_481 ) .def_483 ) ) ( not ( and .def_481 ( and .def_483 ( not ( and .def_464 ( and .def_127 ( and ( not ( = xp_0 383 ) ) ( and ( not .def_459 ) ( and .def_449 ( and .def_451 ( and .def_464 ( and .def_127 ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hp_0 1 ) ( and ( not ( = countp_0 1 ) ) ( and ( = hp_1 1 ) ( and ( = hp_0 1 ) ( and ( not ( and ( and ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ( not ( = xp_1 8 ) ) ) ( not ( and ( = xp_1 1 ) ( and ( not ( = xp_1 1009 ) ) ( and ( = xp_1 1 ) ( not ( = xp_1 383 ) ) ) ) ) ) ) ) ( not ( and ( not ( = xp_1 8 ) ) ( and ( not ( and ( = xp_1 1 ) ( and ( not ( = xp_1 1009 ) ) ( and ( = xp_1 1 ) ( not ( = xp_1 383 ) ) ) ) ) ) ( not ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( and ( not ( = xp_0 383 ) ) ( and ( not ( = 0 ( + xp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_1 ) ) ) ) ) ) ) ( and ( not ( = xp_1 1009 ) ) ( and ( not ( = xp_1 383 ) ) ( and ( not ( = 0 ( + xp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xp_0 ) ) ) ) ) ) ) ( and ( not ( = xp_0 1009 ) ) ( = xp_1 xp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {26: 40, 20: 42, 9: 44, 7: 46, 73: 88, 67: 90, 56: 92, 54: 94, 115: 127, 104: 129, 102: 131, 172: 178, 193: 201, 203: 219, 189: 221, 180: 223, 168: 225, 158: 227, 152: 229, 141: 231, 139: 233, 260: 272, 254: 274, 243: 276, 241: 278, 335: 359, 320: 361, 305: 363, 299: 365, 288: 367, 286: 369, 377: 389, 397: 409, 429: 453, 423: 464, 417: 466, 516: 531, 595: 601, 616: 624, 626: 642, 612: 644, 603: 646, 591: 648, 581: 650, 575: 652, 569: 654, 668: 683, 662: 685, 687: 703, 656: 705, 563: 707, 548: 709, 533: 711, 510: 713, 504: 715, 489: 717, 474: 719, 468: 721, 411: 723, 391: 725, 371: 727, 280: 729, 235: 731, 133: 733, 96: 735, 48: 737, 1: 739}
aux_vars_first_occ_dict {'.def_241 ': 11, '.def_245 ': 58, '.def_495 ': 106, '.def_500 ': 143, '.def_516 ': 245, '.def_518 ': 290}
aux_vars_dict {'.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_495 ': '( = xpp_1 1 ) ', '.def_500 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_516 ': '( not ( = xpp_1 8 ) ) ', '.def_518 ': '( not ( and .def_495 ( and .def_245 ( and .def_241 .def_495 ) ) ) ) '}
subs1 ( not ( = xpp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 383 ) ) 
subs1 ( not ( = xpp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 1009 ) ) 
subs1 ( = xpp_1 1 ) 
remove lets from formula
subs2 ( = xpp_1 1 ) 
subs1 ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) 
subs1 ( not ( = xpp_1 8 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 8 ) ) 
subs1 ( not ( and .def_495 ( and .def_245 ( and .def_241 .def_495 ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_495 ( and .def_245 ( and .def_241 .def_495 ) ) ) ) 
.def_241 
42
aux_vars_subs_dict {'.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_495 ': '( = xpp_1 1 ) ', '.def_500 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_516 ': '( not ( = xpp_1 8 ) ) '}
.def_245 
27
aux_vars_subs_dict {'.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_495 ': '( = xpp_1 1 ) ', '.def_500 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_516 ': '( not ( = xpp_1 8 ) ) ', '.def_518 ': '( not ( and .def_495 ( and .def_245 ( and ( not ( = xpp_1 383 ) ) .def_495 ) ) ) ) '}
.def_495 
82
aux_vars_subs_dict {'.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_495 ': '( = xpp_1 1 ) ', '.def_500 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_516 ': '( not ( = xpp_1 8 ) ) ', '.def_518 ': '( not ( and .def_495 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) .def_495 ) ) ) ) '}
12
aux_vars_subs_dict {'.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_495 ': '( = xpp_1 1 ) ', '.def_500 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_516 ': '( not ( = xpp_1 8 ) ) ', '.def_518 ': '( not ( and .def_495 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) .def_495 ) ) ) ) '}
subs1 ( = xpp_1 1 ) 
remove lets from formula
subs2 ( = xpp_1 1 ) 
subs1 ( not ( = xpp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 1009 ) ) 
subs1 ( not ( = xpp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 383 ) ) 
subs1 ( = xpp_1 1 ) 
remove lets from formula
subs2 ( = xpp_1 1 ) 
subs1 ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) 
subs1 ( not ( = xpp_1 8 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 8 ) ) 
subs1 ( not ( and .def_495 ( and .def_245 ( and .def_241 .def_495 ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_495 ( and .def_245 ( and .def_241 .def_495 ) ) ) ) 
.def_241 
42
aux_vars_subs_dict {'.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_495 ': '( = xpp_1 1 ) ', '.def_500 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_516 ': '( not ( = xpp_1 8 ) ) ', '.def_518 ': '( not ( and ( = xpp_1 1 ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( = xpp_1 1 ) ) ) ) ) '}
.def_245 
27
aux_vars_subs_dict {'.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_495 ': '( = xpp_1 1 ) ', '.def_500 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_516 ': '( not ( = xpp_1 8 ) ) ', '.def_518 ': '( not ( and .def_495 ( and .def_245 ( and ( not ( = xpp_1 383 ) ) .def_495 ) ) ) ) '}
.def_495 
82
aux_vars_subs_dict {'.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_495 ': '( = xpp_1 1 ) ', '.def_500 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_516 ': '( not ( = xpp_1 8 ) ) ', '.def_518 ': '( not ( and .def_495 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) .def_495 ) ) ) ) '}
12
aux_vars_subs_dict {'.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_495 ': '( = xpp_1 1 ) ', '.def_500 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_516 ': '( not ( = xpp_1 8 ) ) ', '.def_518 ': '( not ( and .def_495 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) .def_495 ) ) ) ) '}
subs1 ( not ( = xpp_1 8 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 8 ) ) 
subs1 ( not ( and .def_495 ( and .def_245 ( and .def_241 .def_495 ) ) ) ) 
remove lets from formula
subs2 ( not ( and .def_495 ( and .def_245 ( and .def_241 .def_495 ) ) ) ) 
.def_241 
42
aux_vars_subs_dict {'.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_495 ': '( = xpp_1 1 ) ', '.def_500 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_516 ': '( not ( = xpp_1 8 ) ) ', '.def_518 ': '( not ( and ( = xpp_1 1 ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( = xpp_1 1 ) ) ) ) ) '}
.def_245 
27
aux_vars_subs_dict {'.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_495 ': '( = xpp_1 1 ) ', '.def_500 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_516 ': '( not ( = xpp_1 8 ) ) ', '.def_518 ': '( not ( and .def_495 ( and .def_245 ( and ( not ( = xpp_1 383 ) ) .def_495 ) ) ) ) '}
.def_495 
82
aux_vars_subs_dict {'.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_495 ': '( = xpp_1 1 ) ', '.def_500 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_516 ': '( not ( = xpp_1 8 ) ) ', '.def_518 ': '( not ( and .def_495 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) .def_495 ) ) ) ) '}
12
aux_vars_subs_dict {'.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_495 ': '( = xpp_1 1 ) ', '.def_500 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_516 ': '( not ( = xpp_1 8 ) ) ', '.def_518 ': '( not ( and .def_495 ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) .def_495 ) ) ) ) '}
subs1 ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) 
remove lets from formula
subs2 ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) 
subs1 ( not ( = xpp_1 1009 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 1009 ) ) 
subs1 ( not ( = xpp_1 383 ) ) 
remove lets from formula
subs2 ( not ( = xpp_1 383 ) ) 
aux_vars_subs_dict  {'.def_241 ': '( not ( = xpp_1 383 ) ) ', '.def_245 ': '( not ( = xpp_1 1009 ) ) ', '.def_495 ': '( = xpp_1 1 ) ', '.def_500 ': '( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ', '.def_516 ': '( not ( = xpp_1 8 ) ) ', '.def_518 ': '( not ( and ( = xpp_1 1 ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( = xpp_1 1 ) ) ) ) ) '}
{26: 40, 20: 42, 9: 44, 7: 46, 73: 88, 67: 90, 56: 92, 54: 94, 115: 127, 104: 129, 102: 131, 172: 178, 193: 201, 203: 219, 189: 221, 180: 223, 168: 225, 158: 227, 152: 229, 141: 231, 139: 233, 260: 272, 254: 274, 243: 276, 241: 278, 335: 359, 320: 361, 305: 363, 299: 365, 288: 367, 286: 369, 377: 389, 397: 409, 429: 453, 423: 464, 417: 466, 516: 531, 595: 601, 616: 624, 626: 642, 612: 644, 603: 646, 591: 648, 581: 650, 575: 652, 569: 654, 668: 683, 662: 685, 687: 703, 656: 705, 563: 707, 548: 709, 533: 711, 510: 713, 504: 715, 489: 717, 474: 719, 468: 721, 411: 723, 391: 725, 371: 727, 280: 729, 235: 731, 133: 733, 96: 735, 48: 737, 1: 739}
{27: 42, 21: 44, 10: 46, 8: 48, 69: 81, 58: 83, 56: 85, 126: 132, 147: 155, 157: 173, 143: 175, 134: 177, 122: 179, 112: 181, 106: 183, 95: 185, 93: 187, 214: 226, 208: 228, 197: 230, 195: 232, 289: 313, 274: 315, 259: 317, 253: 319, 242: 321, 240: 323, 331: 343, 351: 363, 383: 407, 377: 418, 371: 420, 470: 485, 549: 555, 570: 578, 580: 596, 566: 598, 557: 600, 545: 602, 535: 604, 529: 606, 523: 608, 622: 637, 616: 639, 641: 657, 610: 659, 517: 661, 502: 663, 487: 665, 464: 667, 458: 669, 443: 671, 428: 673, 422: 675, 365: 677, 345: 679, 325: 681, 234: 683, 189: 685, 87: 687, 50: 689, 2: 691}
{22: 34, 11: 36, 9: 38, 79: 85, 100: 108, 110: 126, 96: 128, 87: 130, 75: 132, 65: 134, 59: 136, 48: 138, 46: 140, 167: 179, 161: 181, 150: 183, 148: 185, 242: 266, 227: 268, 212: 270, 206: 272, 195: 274, 193: 276, 284: 296, 304: 316, 336: 360, 330: 371, 324: 373, 423: 438, 502: 508, 523: 531, 533: 549, 519: 551, 510: 553, 498: 555, 488: 557, 482: 559, 476: 561, 575: 590, 569: 592, 594: 610, 563: 612, 470: 614, 455: 616, 440: 618, 417: 620, 411: 622, 396: 624, 381: 626, 375: 628, 318: 630, 298: 632, 278: 634, 187: 636, 142: 638, 40: 640, 3: 642}
{43: 49, 64: 72, 74: 90, 60: 92, 51: 94, 39: 96, 29: 98, 23: 100, 12: 102, 10: 104, 131: 143, 125: 145, 114: 147, 112: 149, 206: 230, 191: 232, 176: 234, 170: 236, 159: 238, 157: 240, 248: 260, 268: 280, 300: 324, 294: 335, 288: 337, 387: 402, 466: 472, 487: 495, 497: 513, 483: 515, 474: 517, 462: 519, 452: 521, 446: 523, 440: 525, 539: 554, 533: 556, 558: 574, 527: 576, 434: 578, 419: 580, 404: 582, 381: 584, 375: 586, 360: 588, 345: 590, 339: 592, 282: 594, 262: 596, 242: 598, 151: 600, 106: 602, 4: 604}
{30: 42, 24: 44, 13: 46, 11: 48, 105: 129, 90: 131, 75: 133, 69: 135, 58: 137, 56: 139, 147: 159, 167: 179, 199: 223, 193: 234, 187: 236, 286: 301, 365: 371, 386: 394, 396: 412, 382: 414, 373: 416, 361: 418, 351: 420, 345: 422, 339: 424, 438: 453, 432: 455, 457: 473, 426: 475, 333: 477, 318: 479, 303: 481, 280: 483, 274: 485, 259: 487, 244: 489, 238: 491, 181: 493, 161: 495, 141: 497, 50: 499, 5: 501}
{61: 85, 46: 87, 31: 89, 25: 91, 14: 93, 12: 95, 103: 115, 123: 135, 155: 179, 149: 190, 143: 192, 242: 257, 321: 327, 342: 350, 352: 368, 338: 370, 329: 372, 317: 374, 307: 376, 301: 378, 295: 380, 394: 409, 388: 411, 413: 429, 382: 431, 289: 433, 274: 435, 259: 437, 236: 439, 230: 441, 215: 443, 200: 445, 194: 447, 137: 449, 117: 451, 97: 453, 6: 455}
remove lets from formula
final_formula  ( and ( = hpp_1 1 ) ( and ( = hpp_0 1 ) ( and ( not ( and ( and .def_500 .def_516 ) .def_518 ) ) ( not ( and .def_516 ( and .def_518 ( not ( and ( not .def_500 ) ( and .def_245 ( and .def_241 ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hpp_1 1 ) ( and ( = hpp_0 1 ) ( and ( not ( and ( and ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ( not ( = xpp_1 8 ) ) ) ( not ( and ( = xpp_1 1 ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( = xpp_1 1 ) ) ) ) ) ) ) ( not ( and ( not ( = xpp_1 8 ) ) ( and ( not ( and ( = xpp_1 1 ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( = xpp_1 1 ) ) ) ) ) ( not ( and ( not ( = 0 ( + xpp_1 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_1 ) ) ) ) ) ) ) ( and ( not ( = xpp_1 1009 ) ) ( and ( not ( = xpp_1 383 ) ) ( and ( not ( = 0 ( + xpp_0 ( * ( - 7 ) ( to_int ( * ( / 1 7 ) ( to_real xpp_0 ) ) ) ) ) ) ) ( and ( not ( = xpp_0 1009 ) ) ( = xpp_0 xpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {26: 39, 20: 41, 9: 43, 7: 45, 72: 85, 66: 87, 55: 89, 53: 91, 112: 136, 101: 138, 99: 140, 214: 231, 239: 257, 233: 259, 208: 261, 193: 263, 178: 265, 163: 267, 148: 269, 142: 271, 93: 273, 47: 275, 1: 277}
aux_vars_first_occ_dict {'.def_274 ': 11, '.def_277 ': 57, '.def_537 ': 103}
aux_vars_dict {'.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_277 ': '( not ( = xppp_1 8 ) ) ', '.def_537 ': '( and .def_274 .def_277 ) '}
subs1 ( not ( = xppp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = xppp_1 1 ) ) 
subs1 ( not ( = xppp_1 8 ) ) 
remove lets from formula
subs2 ( not ( = xppp_1 8 ) ) 
subs1 ( and .def_274 .def_277 ) 
remove lets from formula
subs2 ( and .def_274 .def_277 ) 
.def_274 
6
aux_vars_subs_dict {'.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_277 ': '( not ( = xppp_1 8 ) ) '}
.def_277 
29
aux_vars_subs_dict {'.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_277 ': '( not ( = xppp_1 8 ) ) ', '.def_537 ': '( and ( not ( = xppp_1 1 ) ) .def_277 ) '}
subs1 ( not ( = xppp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = xppp_1 1 ) ) 
subs1 ( not ( = xppp_1 8 ) ) 
remove lets from formula
subs2 ( not ( = xppp_1 8 ) ) 
subs1 ( not ( = xppp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = xppp_1 1 ) ) 
subs1 ( and .def_274 .def_277 ) 
remove lets from formula
subs2 ( and .def_274 .def_277 ) 
.def_274 
6
aux_vars_subs_dict {'.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_277 ': '( not ( = xppp_1 8 ) ) ', '.def_537 ': '( and ( not ( = xppp_1 1 ) ) ( not ( = xppp_1 8 ) ) ) '}
.def_277 
29
aux_vars_subs_dict {'.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_277 ': '( not ( = xppp_1 8 ) ) ', '.def_537 ': '( and ( not ( = xppp_1 1 ) ) .def_277 ) '}
subs1 ( not ( = xppp_1 8 ) ) 
remove lets from formula
subs2 ( not ( = xppp_1 8 ) ) 
subs1 ( and .def_274 .def_277 ) 
remove lets from formula
subs2 ( and .def_274 .def_277 ) 
.def_274 
6
aux_vars_subs_dict {'.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_277 ': '( not ( = xppp_1 8 ) ) ', '.def_537 ': '( and ( not ( = xppp_1 1 ) ) ( not ( = xppp_1 8 ) ) ) '}
.def_277 
29
aux_vars_subs_dict {'.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_277 ': '( not ( = xppp_1 8 ) ) ', '.def_537 ': '( and ( not ( = xppp_1 1 ) ) .def_277 ) '}
aux_vars_subs_dict  {'.def_274 ': '( not ( = xppp_1 1 ) ) ', '.def_277 ': '( not ( = xppp_1 8 ) ) ', '.def_537 ': '( and ( not ( = xppp_1 1 ) ) ( not ( = xppp_1 8 ) ) ) '}
{26: 39, 20: 41, 9: 43, 7: 45, 72: 85, 66: 87, 55: 89, 53: 91, 112: 136, 101: 138, 99: 140, 214: 231, 239: 257, 233: 259, 208: 261, 193: 263, 178: 265, 163: 267, 148: 269, 142: 271, 93: 273, 47: 275, 1: 277}
{27: 40, 21: 42, 10: 44, 8: 46, 67: 91, 56: 93, 54: 95, 169: 186, 194: 212, 188: 214, 163: 216, 148: 218, 133: 220, 118: 222, 103: 224, 97: 226, 48: 228, 2: 230}
{22: 46, 11: 48, 9: 50, 124: 141, 149: 167, 143: 169, 118: 171, 103: 173, 88: 175, 73: 177, 58: 179, 52: 181, 3: 183}
remove lets from formula
final_formula  ( not ( and .def_274 ( and .def_537 ( and .def_277 ( and .def_537 ( and ( = countppp_0 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ) ) ) ) ) 
[' ( not ( and ( not ( = xppp_1 1 ) ) ( and ( and ( not ( = xppp_1 1 ) ) ( not ( = xppp_1 8 ) ) ) ( and ( not ( = xppp_1 8 ) ) ( and ( and ( not ( = xppp_1 1 ) ) ( not ( = xppp_1 8 ) ) ) ( and ( = countppp_0 1 ) ( not ( = xppp_0 xppp_1 ) ) ) ) ) ) ) ) ']
new_pred_smt_format ['(declare-rel pred_0_synth_msat_6 (Int Int Int))\n (rule (=>  ( = (rel x 1) 1009  ) (pred_0_synth_msat_6 x h count)))']
['(declare-rel pred_0_synth_msat_6 (Int Int Int))\n (rule (=>  ( = (rel x 1) 1009  ) (pred_0_synth_msat_6 x h count)))']
Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied.
Pre-processing time:	0.05592 
Solver time:	1.557037
Total time:	1.612957
Iteration count:	6
Predicate count:	10
Successfully added new predicate to input file. !
Start next refinement loop: True



PDSC: Verifying ./Benchmarks_msat/subsume_ref_ref.smt2
Namespace(file='./Benchmarks_msat/subsume_ref_ref.smt2', log=False, msat=True, property=None, qe=False, sygus=False)
In if ladder True
Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[2]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
count_0_1, 
pred_0_synth_msat_3, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
count_0_1, 
pred_0_synth_msat_3, ]
--->[1]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


6 SMT queries performed.
before complete_trace: [abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


after complete_trace [abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[-1]


-----------------------------------check_spur-------------------------------
final init cond And(0 == count_0,
    0 == count_1,
    And(x_0 == x_1, h_0 == 1, h_1 == 1))
Initial concrete state  {'x_1': 9, 'count_0_1': True, 'abs_h_1': True, 'count_0_0': True, 'abs_h_0': True, 'pred_0_synth_msat_6': False, 'pred_0_synth_msat_5': False, 'pred_0_synth_msat_4': False, 'pred_0_synth_msat_3': False, 'pred_0_synth_msat_2': False, 'pred_0_synth_msat_1': False, 'x0_eq_x1': True, 'h_1': 1, 'h_0': 1, 'x_0': 9, 'count_1': 0, 'count_0': 0}
Next concrete state {'count_1': 1, 'x_1': 9, 'count_0': 0, 'h_0': 1, 'x_0': 9, 'h_1': 1}
Next concrete state {'count_0': 1, 'x_0': 9, 'count_1': 1, 'h_1': 1, 'x_1': 9, 'h_0': 1}
Writing an smt file to be run using mathsat
Checking output from mathsat 5
new_pred_smt_format ['(declare-rel pred_0_synth_msat_7 (Int Int Int))\n (rule (=>  ( = (rel x 0) 383  ) (pred_0_synth_msat_7 x h count)))']
['(declare-rel pred_0_synth_msat_7 (Int Int Int))\n (rule (=>  ( = (rel x 0) 383  ) (pred_0_synth_msat_7 x h count)))']
Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied.
Pre-processing time:	0.057618 
Solver time:	1.655893
Total time:	1.713511
Iteration count:	6
Predicate count:	11
Successfully added new predicate to input file. !
Start next refinement loop: True



PDSC: Verifying ./Benchmarks_msat/subsume_ref_ref.smt2
Namespace(file='./Benchmarks_msat/subsume_ref_ref.smt2', log=False, msat=True, property=None, qe=False, sygus=False)
In if ladder True
Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[2]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, 
pred_0_synth_msat_3, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, 
pred_0_synth_msat_3, ]
--->[1]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Counter-example trace:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


6 SMT queries performed.
before complete_trace: [abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


after complete_trace [abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[-1]


-----------------------------------check_spur-------------------------------
final init cond And(0 == count_0,
    0 == count_1,
    And(x_0 == x_1, h_0 == 1, h_1 == 1))
Initial concrete state  {'x_1': 0, 'count_0_1': True, 'abs_h_1': True, 'count_0_0': True, 'abs_h_0': True, 'pred_0_synth_msat_7': False, 'pred_0_synth_msat_6': False, 'pred_0_synth_msat_5': False, 'pred_0_synth_msat_4': False, 'pred_0_synth_msat_3': False, 'pred_0_synth_msat_2': False, 'pred_0_synth_msat_1': False, 'x0_eq_x1': True, 'h_1': 1, 'h_0': 1, 'x_0': 0, 'count_1': 0, 'count_0': 0}
Next concrete state {'count_1': 1, 'x_1': 8, 'count_0': 0, 'h_0': 1, 'x_0': 0, 'h_1': 1}
Writing an smt file to be run using mathsat
Checking output from mathsat 5
new_pred_smt_format []
Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[2]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[2]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, 
pred_0_synth_msat_3, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, 
pred_0_synth_msat_3, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, 
pred_0_synth_msat_3, ]
--->[1]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[0]


6 SMT queries performed.
after complete_trace [abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, 
x0_eq_x1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_3, ]
--->[-1]


------------------------check_spuriousness-------------------------------
SEARCHING A CONCRETE CEX TRACE FROM ABOVE ABSTRACT CEX: 
--------------------------------------------------
Initial concrete state :  {'x_1': 0, 'count_0_1': True, 'abs_h_1': True, 'count_0_0': True, 'abs_h_0': True, 'pred_0_synth_msat_7': False, 'pred_0_synth_msat_6': False, 'pred_0_synth_msat_5': False, 'pred_0_synth_msat_4': False, 'pred_0_synth_msat_3': False, 'pred_0_synth_msat_2': False, 'pred_0_synth_msat_1': False, 'x0_eq_x1': True, 'h_1': 1, 'h_0': 1, 'x_0': 0, 'count_1': 0, 'count_0': 0}



Next concrete state :  {'count_1': 1, 'x_1': 8, 'count_0': 0, 'h_0': 1, 'x_0': 0, 'h_1': 1}



Is the trace spurious?  True
Discovering predicate from a_src, a_tgt, c_src, c_tgt to eliminate spurious trace
----------------------pred_disc-------------------
Running quantifier elimination: 
New predicate is  (let ((a!1 (and (= xU0 xU1)

                (not (= xU1 1))

                (not (= 0 (mod xU1 7)))

                (not (= xU1 8))

                (not (= xU1 383))

                (not (= xU0 1009)))))

  (not a!1))

Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied. 6 12 True ['(declare-rel p_synth_8 (Int Int Int))\n (rule (=>   (and  (= (rel x 0) (rel x 1) ) (not  (= (rel x 1) 1 ) ) (not  (= 0  (mod (rel x 1) 7 ) ) ) (not  (= (rel x 1) 8 ) ) (not  (= (rel x 1) 383 ) ) (not  (= (rel x 0) 1009 ) ) ) (p_synth_8 x h count)))']
Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied.
Pre-processing time:	0.061376 
Solver time:	5.412396
Total time:	5.473772
Iteration count:	6
Predicate count:	12
Successfully added new predicate to input file. !
Start next refinement loop: True



PDSC: Verifying ./Benchmarks_msat/subsume_ref_ref.smt2
Namespace(file='./Benchmarks_msat/subsume_ref_ref.smt2', log=False, msat=True, property=None, qe=False, sygus=False)
In if ladder True
1 SMT queries performed.
Proved by invariant:
And(abs_h_0,
    abs_h_1,
    x0_eq_x1,
    Or(count_0_1, pred_0_synth_msat_3),
    Or(Not(pred_0_synth_msat_7), count_0_1),
    Or(p_synth_8,
       pred_0_synth_msat_5,
       pred_0_synth_msat_2,
       count_0_1),
    Or(p_synth_8,
       pred_0_synth_msat_5,
       pred_0_synth_msat_2,
       count_0_0))
Pre-processing time:	0.08602 
Solver time:	1.443406
Total time:	1.529426
Iteration count:	1
Predicate count:	13
Start next refinement loop: False



Total time taken : 17.14683
Number of predicates guessed: 8.0
