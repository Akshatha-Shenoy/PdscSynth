PDSC: Verifying ./Benchmarks_msat/puzzle_2.smt2
Namespace(file='./Benchmarks_msat/puzzle_2.smt2', log=False, msat=True, property=None, qe=False, sygus=False)
In if ladder True
Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_0_0, 
abs_end_1, 
ct_1_1, 
n0_eq_n1, ]
--->[2]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_0_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_0_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_0_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_0_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_0_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, ]
--->[0]


9 SMT queries performed.
before complete_trace: [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, ]
--->[0]


after complete_trace [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, ]
--->[-1]


-----------------------------------check_spur-------------------------------
final init cond And(And(0 == ct_0, end_0 == 0),
    And(0 == ct_1, end_1 == 0),
    And(n_0 == n_1, h_0 == 1, h_1 == 0))
Initial concrete state  {'ct_1_1': False, 'ct_0_1': True, 'abs_end_1': False, 'abs_h_1': False, 'ct_1_0': False, 'ct_0_0': True, 'abs_end_0': False, 'abs_h_0': True, 'ct0_eq_ct1': True, 'n0_eq_n1': True, 'h_1': 0, 'h_0': 1, 'n_1': 0, 'n_0': 0, 'end_1': 0, 'ct_1': 0, 'end_0': 0, 'ct_0': 0}
Next concrete state {'end_1': 1, 'n_1': 0, 'ct_1': 0, 'ct_0': 0, 'h_0': 1, 'n_0': 0, 'end_0': 0, 'h_1': 0}
Next concrete state {'end_0': 1, 'n_0': 0, 'ct_0': 0, 'ct_1': 0, 'h_1': 0, 'n_1': 0, 'end_1': 1, 'h_0': 1}
Writing an smt file to be run using mathsat
Checking output from mathsat 5
hi
paren_dict {19: 29, 9: 31, 7: 33, 61: 71, 55: 73, 87: 99, 81: 101, 115: 127, 109: 129, 151: 163, 171: 182, 165: 184, 145: 186, 131: 188, 103: 190, 75: 192, 49: 194, 35: 196, 1: 198}
aux_vars_first_occ_dict {'.def_24 ': 11}
aux_vars_dict {'.def_24 ': '( = h_0 1 ) '}
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
aux_vars_subs_dict  {'.def_24 ': '( = h_0 1 ) '}
{19: 29, 9: 31, 7: 33, 61: 71, 55: 73, 87: 99, 81: 101, 115: 127, 109: 129, 151: 163, 171: 182, 165: 184, 145: 186, 131: 188, 103: 190, 75: 192, 49: 194, 35: 196, 1: 198}
remove lets from formula
final_formula  ( and .def_24 ( and ( not ( = h_1 1 ) ) ( and ( not ( = end_1 1 ) ) ( and ( not ( = end_0 1 ) ) ( and .def_24 ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) ) ) 
[' ( and ( = h_0 1 ) ( and ( not ( = h_1 1 ) ) ( and ( not ( = end_1 1 ) ) ( and ( not ( = end_0 1 ) ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 31, 9: 33, 7: 35, 64: 77, 97: 110, 91: 112, 135: 146, 154: 166, 148: 168, 129: 170, 114: 172, 85: 174, 79: 176, 58: 178, 52: 180, 37: 182, 1: 184}
aux_vars_first_occ_dict {'.def_107 ': 11}
aux_vars_dict {'.def_107 ': '( = hp_0 1 ) '}
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
aux_vars_subs_dict  {'.def_107 ': '( = hp_0 1 ) '}
{20: 31, 9: 33, 7: 35, 64: 77, 97: 110, 91: 112, 135: 146, 154: 166, 148: 168, 129: 170, 114: 172, 85: 174, 79: 176, 58: 178, 52: 180, 37: 182, 1: 184}
remove lets from formula
final_formula  ( and .def_107 ( not ( and ( = endp_1 1 ) ( not ( and ( not ( = endp_0 1 ) ) ( and .def_107 ( and ( = np_0 0 ) ( not ( = ctp_0 1 ) ) ) ) ) ) ) ) ) 
[' ( and ( = hp_0 1 ) ( not ( and ( = endp_1 1 ) ( not ( and ( not ( = endp_0 1 ) ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) ( not ( = ctp_0 1 ) ) ) ) ) ) ) ) ) ']
new_pred_smt_format ['(declare-rel pred_0_synth_msat_1 (Int Int Int Int))\n (rule (=>  ( = (rel n 0) 0  ) (pred_0_synth_msat_1 end n h ct)))']
['(declare-rel pred_0_synth_msat_1 (Int Int Int Int))\n (rule (=>  ( = (rel n 0) 0  ) (pred_0_synth_msat_1 end n h ct)))']
Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied.
Pre-processing time:	0.06623 
Solver time:	2.288087
Total time:	2.354317
Iteration count:	9
Predicate count:	10
Successfully added new predicate to input file. !
PDSC: Verifying ./Benchmarks_msat/puzzle_2.smt2
Namespace(file='./Benchmarks_msat/puzzle_2.smt2', log=False, msat=True, property=None, qe=False, sygus=False)
In if ladder True
Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_1_1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[0]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[1]

[abs_h_0, 
ct_0_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, ]
--->[2]

[abs_h_0, 
ct_1_1, ]
--->[2]

[abs_h_0, 
ct_0_0, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, ]
--->[2]

[abs_h_0, 
ct_1_1, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]


27 SMT queries performed.
before complete_trace: [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]


after complete_trace [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[-1]


-----------------------------------check_spur-------------------------------
final init cond And(And(0 == ct_0, end_0 == 0),
    And(0 == ct_1, end_1 == 0),
    And(n_0 == n_1, h_0 == 1, h_1 == 0))
Initial concrete state  {'n_1': 1, 'ct_1_1': False, 'ct_0_1': True, 'abs_end_1': False, 'abs_h_1': False, 'ct_1_0': False, 'ct_0_0': True, 'abs_end_0': False, 'abs_h_0': True, 'pred_0_synth_msat_1': False, 'ct0_eq_ct1': True, 'n0_eq_n1': True, 'h_1': 0, 'h_0': 1, 'n_0': 1, 'end_1': 0, 'ct_1': 0, 'end_0': 0, 'ct_0': 0}
Next concrete state {'end_1': 0, 'n_1': 0, 'ct_1': 1, 'ct_0': 0, 'h_0': 1, 'n_0': 1, 'end_0': 0, 'h_1': 0}
Writing an smt file to be run using mathsat
Checking output from mathsat 5
hi
paren_dict {19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 95: 105, 89: 107, 79: 109, 77: 111, 138: 150, 132: 152, 121: 154, 119: 156, 183: 194, 177: 196, 166: 198, 164: 200, 264: 287, 250: 289, 236: 291, 221: 293, 210: 295, 208: 297, 398: 410, 392: 412, 477: 489, 491: 503, 471: 505, 457: 507, 442: 509, 428: 511, 414: 513, 386: 515, 371: 517, 356: 519, 342: 521, 328: 523, 313: 525, 299: 527, 202: 529, 158: 531, 113: 533, 71: 535, 37: 537, 1: 539}
aux_vars_first_occ_dict {'.def_21 ': 11, '.def_24 ': 47, '.def_81 ': 81, '.def_525 ': 123, '.def_527 ': 168, '.def_531 ': 212}
aux_vars_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_525 ': '( not ( = end_0 1 ) ) ', '.def_527 ': '( not ( = ct_0 1 ) ) ', '.def_531 ': '( and .def_525 ( and .def_21 ( and .def_24 ( and .def_21 .def_527 ) ) ) ) '}
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
subs1 ( not ( = end_0 1 ) ) 
remove lets from formula
subs2 ( not ( = end_0 1 ) ) 
subs1 ( not ( = ct_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ct_0 1 ) ) 
subs1 ( and .def_525 ( and .def_21 ( and .def_24 ( and .def_21 .def_527 ) ) ) ) 
remove lets from formula
subs2 ( and .def_525 ( and .def_21 ( and .def_24 ( and .def_21 .def_527 ) ) ) ) 
.def_21 
49
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_525 ': '( not ( = end_0 1 ) ) ', '.def_527 ': '( not ( = ct_0 1 ) ) '}
21
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_525 ': '( not ( = end_0 1 ) ) ', '.def_527 ': '( not ( = ct_0 1 ) ) '}
.def_24 
41
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_525 ': '( not ( = end_0 1 ) ) ', '.def_527 ': '( not ( = ct_0 1 ) ) ', '.def_531 ': '( and .def_525 ( and ( = n_0 n_1 ) ( and .def_24 ( and ( = n_0 n_1 ) .def_527 ) ) ) ) '}
.def_525 
6
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_525 ': '( not ( = end_0 1 ) ) ', '.def_527 ': '( not ( = ct_0 1 ) ) ', '.def_531 ': '( and .def_525 ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_527 ) ) ) ) '}
.def_527 
86
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_525 ': '( not ( = end_0 1 ) ) ', '.def_527 ': '( not ( = ct_0 1 ) ) ', '.def_531 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_527 ) ) ) ) '}
subs1 ( not ( = end_0 1 ) ) 
remove lets from formula
subs2 ( not ( = end_0 1 ) ) 
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( not ( = ct_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ct_0 1 ) ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( and .def_525 ( and .def_21 ( and .def_24 ( and .def_21 .def_527 ) ) ) ) 
remove lets from formula
subs2 ( and .def_525 ( and .def_21 ( and .def_24 ( and .def_21 .def_527 ) ) ) ) 
.def_21 
49
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_525 ': '( not ( = end_0 1 ) ) ', '.def_527 ': '( not ( = ct_0 1 ) ) ', '.def_531 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
21
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_525 ': '( not ( = end_0 1 ) ) ', '.def_527 ': '( not ( = ct_0 1 ) ) ', '.def_531 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
.def_24 
41
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_525 ': '( not ( = end_0 1 ) ) ', '.def_527 ': '( not ( = ct_0 1 ) ) ', '.def_531 ': '( and .def_525 ( and ( = n_0 n_1 ) ( and .def_24 ( and ( = n_0 n_1 ) .def_527 ) ) ) ) '}
.def_525 
6
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_525 ': '( not ( = end_0 1 ) ) ', '.def_527 ': '( not ( = ct_0 1 ) ) ', '.def_531 ': '( and .def_525 ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_527 ) ) ) ) '}
.def_527 
86
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_525 ': '( not ( = end_0 1 ) ) ', '.def_527 ': '( not ( = ct_0 1 ) ) ', '.def_531 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_527 ) ) ) ) '}
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
subs1 ( and .def_525 ( and .def_21 ( and .def_24 ( and .def_21 .def_527 ) ) ) ) 
remove lets from formula
subs2 ( and .def_525 ( and .def_21 ( and .def_24 ( and .def_21 .def_527 ) ) ) ) 
.def_21 
49
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_525 ': '( not ( = end_0 1 ) ) ', '.def_527 ': '( not ( = ct_0 1 ) ) ', '.def_531 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
21
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_525 ': '( not ( = end_0 1 ) ) ', '.def_527 ': '( not ( = ct_0 1 ) ) ', '.def_531 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
.def_24 
41
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_525 ': '( not ( = end_0 1 ) ) ', '.def_527 ': '( not ( = ct_0 1 ) ) ', '.def_531 ': '( and .def_525 ( and ( = n_0 n_1 ) ( and .def_24 ( and ( = n_0 n_1 ) .def_527 ) ) ) ) '}
.def_525 
6
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_525 ': '( not ( = end_0 1 ) ) ', '.def_527 ': '( not ( = ct_0 1 ) ) ', '.def_531 ': '( and .def_525 ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_527 ) ) ) ) '}
.def_527 
86
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_525 ': '( not ( = end_0 1 ) ) ', '.def_527 ': '( not ( = ct_0 1 ) ) ', '.def_531 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_527 ) ) ) ) '}
subs1 ( not ( = end_0 1 ) ) 
remove lets from formula
subs2 ( not ( = end_0 1 ) ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
subs1 ( not ( = ct_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ct_0 1 ) ) 
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
aux_vars_subs_dict  {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_525 ': '( not ( = end_0 1 ) ) ', '.def_527 ': '( not ( = ct_0 1 ) ) ', '.def_531 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
{19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 95: 105, 89: 107, 79: 109, 77: 111, 138: 150, 132: 152, 121: 154, 119: 156, 183: 194, 177: 196, 166: 198, 164: 200, 264: 287, 250: 289, 236: 291, 221: 293, 210: 295, 208: 297, 398: 410, 392: 412, 477: 489, 491: 503, 471: 505, 457: 507, 442: 509, 428: 511, 414: 513, 386: 515, 371: 517, 356: 519, 342: 521, 328: 523, 313: 525, 299: 527, 202: 529, 158: 531, 113: 533, 71: 535, 37: 537, 1: 539}
{20: 30, 10: 32, 8: 34, 60: 70, 54: 72, 44: 74, 42: 76, 103: 115, 97: 117, 86: 119, 84: 121, 148: 159, 142: 161, 131: 163, 129: 165, 229: 252, 215: 254, 201: 256, 186: 258, 175: 260, 173: 262, 363: 375, 357: 377, 442: 454, 456: 468, 436: 470, 422: 472, 407: 474, 393: 476, 379: 478, 351: 480, 336: 482, 321: 484, 307: 486, 293: 488, 278: 490, 264: 492, 167: 494, 123: 496, 78: 498, 36: 500, 2: 502}
{27: 37, 21: 39, 11: 41, 9: 43, 70: 82, 64: 84, 53: 86, 51: 88, 115: 126, 109: 128, 98: 130, 96: 132, 196: 219, 182: 221, 168: 223, 153: 225, 142: 227, 140: 229, 330: 342, 324: 344, 409: 421, 423: 435, 403: 437, 389: 439, 374: 441, 360: 443, 346: 445, 318: 447, 303: 449, 288: 451, 274: 453, 260: 455, 245: 457, 231: 459, 134: 461, 90: 463, 45: 465, 3: 467}
{29: 41, 23: 43, 12: 45, 10: 47, 74: 85, 68: 87, 57: 89, 55: 91, 155: 178, 141: 180, 127: 182, 112: 184, 101: 186, 99: 188, 289: 301, 283: 303, 368: 380, 382: 394, 362: 396, 348: 398, 333: 400, 319: 402, 305: 404, 277: 406, 262: 408, 247: 410, 233: 412, 219: 414, 204: 416, 190: 418, 93: 420, 49: 422, 4: 424}
{30: 41, 24: 43, 13: 45, 11: 47, 111: 134, 97: 136, 83: 138, 68: 140, 57: 142, 55: 144, 245: 257, 239: 259, 324: 336, 338: 350, 318: 352, 304: 354, 289: 356, 275: 358, 261: 360, 233: 362, 218: 364, 203: 366, 189: 368, 175: 370, 160: 372, 146: 374, 49: 376, 5: 378}
{68: 91, 54: 93, 40: 95, 25: 97, 14: 99, 12: 101, 202: 214, 196: 216, 281: 293, 295: 307, 275: 309, 261: 311, 246: 313, 232: 315, 218: 317, 190: 319, 175: 321, 160: 323, 146: 325, 132: 327, 117: 329, 103: 331, 6: 333}
remove lets from formula
final_formula  ( and .def_24 ( and .def_531 ( and .def_21 ( and .def_81 ( and .def_531 ( and .def_525 ( and ( not ( = end_1 1 ) ) ( and .def_24 ( and .def_81 ( and .def_527 ( and .def_21 ( and ( <= ct_1 0 ) ( <= 0 ct_1 ) ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = h_0 1 ) ( and ( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) ( and ( = n_0 n_1 ) ( and ( not ( = h_1 1 ) ) ( and ( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) ( and ( not ( = end_0 1 ) ) ( and ( not ( = end_1 1 ) ) ( and ( = h_0 1 ) ( and ( not ( = h_1 1 ) ) ( and ( not ( = ct_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( <= ct_1 0 ) ( <= 0 ct_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {26: 37, 20: 39, 9: 41, 7: 43, 64: 75, 53: 77, 51: 79, 106: 119, 100: 121, 89: 123, 87: 125, 146: 157, 135: 159, 133: 161, 188: 200, 182: 202, 171: 204, 169: 206, 272: 296, 257: 298, 242: 300, 227: 302, 216: 304, 214: 306, 343: 358, 431: 444, 425: 446, 506: 515, 517: 532, 502: 534, 493: 536, 484: 538, 546: 559, 561: 574, 540: 576, 478: 578, 463: 580, 448: 582, 419: 584, 404: 586, 389: 588, 374: 590, 360: 592, 337: 594, 323: 596, 308: 598, 208: 600, 163: 602, 127: 604, 81: 606, 45: 608, 1: 610}
aux_vars_first_occ_dict {'.def_148 ': 11, '.def_561 ': 55, '.def_563 ': 91, '.def_564 ': 137, '.def_566 ': 173, '.def_570 ': 218}
aux_vars_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and .def_563 ( and .def_564 ( and .def_561 ( and .def_564 .def_566 ) ) ) ) '}
subs1 ( not ( = hp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = hp_1 1 ) ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( not ( = endp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endp_0 1 ) ) 
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( not ( = ctp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctp_0 1 ) ) 
subs1 ( and .def_563 ( and .def_564 ( and .def_561 ( and .def_564 .def_566 ) ) ) ) 
remove lets from formula
subs2 ( and .def_563 ( and .def_564 ( and .def_561 ( and .def_564 .def_566 ) ) ) ) 
.def_561 
36
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and .def_563 ( and .def_564 ( and .def_561 ( and .def_564 .def_566 ) ) ) ) '}
.def_563 
6
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and .def_563 ( and .def_564 ( and ( = hp_0 1 ) ( and .def_564 .def_566 ) ) ) ) '}
.def_564 
69
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and ( not ( = endp_0 1 ) ) ( and .def_564 ( and ( = hp_0 1 ) ( and .def_564 .def_566 ) ) ) ) '}
35
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and ( not ( = endp_0 1 ) ) ( and .def_564 ( and ( = hp_0 1 ) ( and .def_564 .def_566 ) ) ) ) '}
.def_566 
86
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) .def_566 ) ) ) ) '}
subs1 ( not ( = endp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endp_0 1 ) ) 
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( not ( = ctp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctp_0 1 ) ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( and .def_563 ( and .def_564 ( and .def_561 ( and .def_564 .def_566 ) ) ) ) 
remove lets from formula
subs2 ( and .def_563 ( and .def_564 ( and .def_561 ( and .def_564 .def_566 ) ) ) ) 
.def_561 
36
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and .def_563 ( and .def_564 ( and .def_561 ( and .def_564 .def_566 ) ) ) ) '}
.def_563 
6
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and .def_563 ( and .def_564 ( and ( = hp_0 1 ) ( and .def_564 .def_566 ) ) ) ) '}
.def_564 
69
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and ( not ( = endp_0 1 ) ) ( and .def_564 ( and ( = hp_0 1 ) ( and .def_564 .def_566 ) ) ) ) '}
35
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and ( not ( = endp_0 1 ) ) ( and .def_564 ( and ( = hp_0 1 ) ( and .def_564 .def_566 ) ) ) ) '}
.def_566 
86
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) .def_566 ) ) ) ) '}
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( and .def_563 ( and .def_564 ( and .def_561 ( and .def_564 .def_566 ) ) ) ) 
remove lets from formula
subs2 ( and .def_563 ( and .def_564 ( and .def_561 ( and .def_564 .def_566 ) ) ) ) 
.def_561 
36
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and .def_563 ( and .def_564 ( and .def_561 ( and .def_564 .def_566 ) ) ) ) '}
.def_563 
6
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and .def_563 ( and .def_564 ( and ( = hp_0 1 ) ( and .def_564 .def_566 ) ) ) ) '}
.def_564 
69
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and ( not ( = endp_0 1 ) ) ( and .def_564 ( and ( = hp_0 1 ) ( and .def_564 .def_566 ) ) ) ) '}
35
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and ( not ( = endp_0 1 ) ) ( and .def_564 ( and ( = hp_0 1 ) ( and .def_564 .def_566 ) ) ) ) '}
.def_566 
86
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) .def_566 ) ) ) ) '}
subs1 ( not ( = endp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endp_0 1 ) ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( not ( = hp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = hp_1 1 ) ) 
subs1 ( not ( = hp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = hp_1 1 ) ) 
subs1 ( not ( = ctp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctp_0 1 ) ) 
aux_vars_subs_dict  {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) ( not ( = ctp_0 1 ) ) ) ) ) ) '}
{26: 37, 20: 39, 9: 41, 7: 43, 64: 75, 53: 77, 51: 79, 106: 119, 100: 121, 89: 123, 87: 125, 146: 157, 135: 159, 133: 161, 188: 200, 182: 202, 171: 204, 169: 206, 272: 296, 257: 298, 242: 300, 227: 302, 216: 304, 214: 306, 343: 358, 431: 444, 425: 446, 506: 515, 517: 532, 502: 534, 493: 536, 484: 538, 546: 559, 561: 574, 540: 576, 478: 578, 463: 580, 448: 582, 419: 584, 404: 586, 389: 588, 374: 590, 360: 592, 337: 594, 323: 596, 308: 598, 208: 600, 163: 602, 127: 604, 81: 606, 45: 608, 1: 610}
{21: 32, 10: 34, 8: 36, 63: 76, 57: 78, 46: 80, 44: 82, 103: 114, 92: 116, 90: 118, 145: 157, 139: 159, 128: 161, 126: 163, 229: 253, 214: 255, 199: 257, 184: 259, 173: 261, 171: 263, 300: 315, 388: 401, 382: 403, 463: 472, 474: 489, 459: 491, 450: 493, 441: 495, 503: 516, 518: 531, 497: 533, 435: 535, 420: 537, 405: 539, 376: 541, 361: 543, 346: 545, 331: 547, 317: 549, 294: 551, 280: 553, 265: 555, 165: 557, 120: 559, 84: 561, 38: 563, 2: 565}
{28: 41, 22: 43, 11: 45, 9: 47, 68: 79, 57: 81, 55: 83, 110: 122, 104: 124, 93: 126, 91: 128, 194: 218, 179: 220, 164: 222, 149: 224, 138: 226, 136: 228, 265: 280, 353: 366, 347: 368, 428: 437, 439: 454, 424: 456, 415: 458, 406: 460, 468: 481, 483: 496, 462: 498, 400: 500, 385: 502, 370: 504, 341: 506, 326: 508, 311: 510, 296: 512, 282: 514, 259: 516, 245: 518, 230: 520, 130: 522, 85: 524, 49: 526, 3: 528}
{23: 34, 12: 36, 10: 38, 65: 77, 59: 79, 48: 81, 46: 83, 149: 173, 134: 175, 119: 177, 104: 179, 93: 181, 91: 183, 220: 235, 308: 321, 302: 323, 383: 392, 394: 409, 379: 411, 370: 413, 361: 415, 423: 436, 438: 451, 417: 453, 355: 455, 340: 457, 325: 459, 296: 461, 281: 463, 266: 465, 251: 467, 237: 469, 214: 471, 200: 473, 185: 475, 85: 477, 40: 479, 4: 481}
{30: 42, 24: 44, 13: 46, 11: 48, 114: 138, 99: 140, 84: 142, 69: 144, 58: 146, 56: 148, 185: 200, 273: 286, 267: 288, 348: 357, 359: 374, 344: 376, 335: 378, 326: 380, 388: 401, 403: 416, 382: 418, 320: 420, 305: 422, 290: 424, 261: 426, 246: 428, 231: 430, 216: 432, 202: 434, 179: 436, 165: 438, 150: 440, 50: 442, 5: 444}
{70: 94, 55: 96, 40: 98, 25: 100, 14: 102, 12: 104, 141: 156, 229: 242, 223: 244, 304: 313, 315: 330, 300: 332, 291: 334, 282: 336, 344: 357, 359: 372, 338: 374, 276: 376, 261: 378, 246: 380, 217: 382, 202: 384, 187: 386, 172: 388, 158: 390, 135: 392, 121: 394, 106: 396, 6: 398}
remove lets from formula
final_formula  ( and .def_561 ( or .def_570 ( and ( not .def_564 ) ( or .def_570 ( and .def_563 ( and .def_561 ( and .def_148 ( and ( not ( = endp_1 1 ) ) ( and .def_148 ( and .def_566 ( and ( = np_1 ( to_int ( * ( / 1 10 ) ( to_real np_0 ) ) ) ) ( and ( <= ctp_1 1 ) ( <= 1 ctp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hp_0 1 ) ( or ( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) ( not ( = ctp_0 1 ) ) ) ) ) ) ( and ( not ( = np_0 0 ) ) ( or ( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) ( not ( = ctp_0 1 ) ) ) ) ) ) ( and ( not ( = endp_0 1 ) ) ( and ( = hp_0 1 ) ( and ( not ( = hp_1 1 ) ) ( and ( not ( = endp_1 1 ) ) ( and ( not ( = hp_1 1 ) ) ( and ( not ( = ctp_0 1 ) ) ( and ( = np_1 ( to_int ( * ( / 1 10 ) ( to_real np_0 ) ) ) ) ( and ( <= ctp_1 1 ) ( <= 1 ctp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 32, 9: 34, 7: 36, 63: 77, 57: 79, 46: 81, 44: 83, 104: 116, 93: 118, 91: 120, 147: 160, 141: 162, 130: 164, 128: 166, 232: 256, 217: 258, 202: 260, 187: 262, 176: 264, 174: 266, 303: 318, 376: 388, 370: 390, 438: 447, 449: 465, 434: 467, 425: 469, 419: 471, 508: 517, 519: 535, 504: 537, 495: 539, 485: 541, 549: 563, 565: 579, 543: 581, 479: 583, 473: 585, 413: 587, 407: 589, 392: 591, 364: 593, 349: 595, 334: 597, 320: 599, 297: 601, 283: 603, 268: 605, 168: 607, 122: 609, 85: 611, 38: 613, 1: 615}
aux_vars_first_occ_dict {'.def_609 ': 11, '.def_611 ': 48, '.def_612 ': 95, '.def_614 ': 132, '.def_618 ': 178}
aux_vars_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) '}
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( not ( = endpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endpp_0 1 ) ) 
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( not ( = ctpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctpp_0 1 ) ) 
subs1 ( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) 
remove lets from formula
subs2 ( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) 
.def_609 
36
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) '}
.def_611 
6
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and .def_611 ( and .def_612 ( and ( = hpp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
.def_612 
71
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_612 ( and ( = hpp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
36
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_612 ( and ( = hpp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
.def_614 
90
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) .def_614 ) ) ) ) '}
subs1 ( not ( = endpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endpp_0 1 ) ) 
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( not ( = ctpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctpp_0 1 ) ) 
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) 
remove lets from formula
subs2 ( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) 
.def_609 
36
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) '}
.def_611 
6
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and .def_611 ( and .def_612 ( and ( = hpp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
.def_612 
71
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_612 ( and ( = hpp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
36
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_612 ( and ( = hpp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
.def_614 
90
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) .def_614 ) ) ) ) '}
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) 
remove lets from formula
subs2 ( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) 
.def_609 
36
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) '}
.def_611 
6
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and .def_611 ( and .def_612 ( and ( = hpp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
.def_612 
71
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_612 ( and ( = hpp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
36
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_612 ( and ( = hpp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
.def_614 
90
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) .def_614 ) ) ) ) '}
subs1 ( not ( = endpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endpp_0 1 ) ) 
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( not ( = ctpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctpp_0 1 ) ) 
aux_vars_subs_dict  {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) '}
{20: 32, 9: 34, 7: 36, 63: 77, 57: 79, 46: 81, 44: 83, 104: 116, 93: 118, 91: 120, 147: 160, 141: 162, 130: 164, 128: 166, 232: 256, 217: 258, 202: 260, 187: 262, 176: 264, 174: 266, 303: 318, 376: 388, 370: 390, 438: 447, 449: 465, 434: 467, 425: 469, 419: 471, 508: 517, 519: 535, 504: 537, 495: 539, 485: 541, 549: 563, 565: 579, 543: 581, 479: 583, 473: 585, 413: 587, 407: 589, 392: 591, 364: 593, 349: 595, 334: 597, 320: 599, 297: 601, 283: 603, 268: 605, 168: 607, 122: 609, 85: 611, 38: 613, 1: 615}
{27: 41, 21: 43, 10: 45, 8: 47, 68: 80, 57: 82, 55: 84, 111: 124, 105: 126, 94: 128, 92: 130, 196: 220, 181: 222, 166: 224, 151: 226, 140: 228, 138: 230, 267: 282, 340: 352, 334: 354, 402: 411, 413: 429, 398: 431, 389: 433, 383: 435, 472: 481, 483: 499, 468: 501, 459: 503, 449: 505, 513: 527, 529: 543, 507: 545, 443: 547, 437: 549, 377: 551, 371: 553, 356: 555, 328: 557, 313: 559, 298: 561, 284: 563, 261: 565, 247: 567, 232: 569, 132: 571, 86: 573, 49: 575, 2: 577}
{22: 34, 11: 36, 9: 38, 65: 78, 59: 80, 48: 82, 46: 84, 150: 174, 135: 176, 120: 178, 105: 180, 94: 182, 92: 184, 221: 236, 294: 306, 288: 308, 356: 365, 367: 383, 352: 385, 343: 387, 337: 389, 426: 435, 437: 453, 422: 455, 413: 457, 403: 459, 467: 481, 483: 497, 461: 499, 397: 501, 391: 503, 331: 505, 325: 507, 310: 509, 282: 511, 267: 513, 252: 515, 238: 517, 215: 519, 201: 521, 186: 523, 86: 525, 40: 527, 3: 529}
{29: 42, 23: 44, 12: 46, 10: 48, 114: 138, 99: 140, 84: 142, 69: 144, 58: 146, 56: 148, 185: 200, 258: 270, 252: 272, 320: 329, 331: 347, 316: 349, 307: 351, 301: 353, 390: 399, 401: 417, 386: 419, 377: 421, 367: 423, 431: 445, 447: 461, 425: 463, 361: 465, 355: 467, 295: 469, 289: 471, 274: 473, 246: 475, 231: 477, 216: 479, 202: 481, 179: 483, 165: 485, 150: 487, 50: 489, 4: 491}
{69: 93, 54: 95, 39: 97, 24: 99, 13: 101, 11: 103, 140: 155, 213: 225, 207: 227, 275: 284, 286: 302, 271: 304, 262: 306, 256: 308, 345: 354, 356: 372, 341: 374, 332: 376, 322: 378, 386: 400, 402: 416, 380: 418, 316: 420, 310: 422, 250: 424, 244: 426, 229: 428, 201: 430, 186: 432, 171: 434, 157: 436, 134: 438, 120: 440, 105: 442, 5: 444}
remove lets from formula
final_formula  ( and .def_609 ( or .def_618 ( and ( not .def_612 ) ( or .def_618 ( and .def_611 ( and .def_609 ( and ( not ( = hpp_1 1 ) ) ( and .def_614 ( not ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ( not ( and ( = npp_1 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ( and ( <= ctpp_1 1 ) ( <= 1 ctpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hpp_0 1 ) ( or ( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) ( and ( not ( = npp_0 0 ) ) ( or ( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) ( and ( not ( = endpp_0 1 ) ) ( and ( = hpp_0 1 ) ( and ( not ( = hpp_1 1 ) ) ( and ( not ( = ctpp_0 1 ) ) ( not ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ( not ( and ( = npp_1 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ( and ( <= ctpp_1 1 ) ( <= 1 ctpp_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 33, 9: 35, 7: 37, 58: 71, 47: 73, 45: 75, 102: 117, 96: 119, 85: 121, 83: 123, 150: 164, 144: 166, 133: 168, 131: 170, 236: 260, 221: 262, 206: 264, 191: 266, 180: 268, 178: 270, 307: 322, 414: 423, 425: 442, 410: 444, 401: 446, 395: 448, 462: 477, 479: 494, 456: 496, 450: 498, 389: 500, 383: 502, 368: 504, 353: 506, 338: 508, 324: 510, 301: 512, 287: 514, 272: 516, 172: 518, 125: 520, 77: 522, 39: 524, 1: 526}
aux_vars_first_occ_dict {'.def_239 ': 11, '.def_240 ': 49, '.def_659 ': 87, '.def_661 ': 135, '.def_665 ': 182}
aux_vars_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_659 ': '( not ( = endppp_0 1 ) ) ', '.def_661 ': '( not ( = ctppp_0 1 ) ) ', '.def_665 ': '( and .def_659 ( and .def_240 ( and .def_239 ( and .def_240 .def_661 ) ) ) ) '}
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( not ( = endppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endppp_0 1 ) ) 
subs1 ( not ( = ctppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctppp_0 1 ) ) 
subs1 ( and .def_659 ( and .def_240 ( and .def_239 ( and .def_240 .def_661 ) ) ) ) 
remove lets from formula
subs2 ( and .def_659 ( and .def_240 ( and .def_239 ( and .def_240 .def_661 ) ) ) ) 
.def_239 
36
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_659 ': '( not ( = endppp_0 1 ) ) ', '.def_661 ': '( not ( = ctppp_0 1 ) ) '}
.def_240 
57
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_659 ': '( not ( = endppp_0 1 ) ) ', '.def_661 ': '( not ( = ctppp_0 1 ) ) ', '.def_665 ': '( and .def_659 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_661 ) ) ) ) '}
21
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_659 ': '( not ( = endppp_0 1 ) ) ', '.def_661 ': '( not ( = ctppp_0 1 ) ) ', '.def_665 ': '( and .def_659 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_661 ) ) ) ) '}
.def_659 
6
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_659 ': '( not ( = endppp_0 1 ) ) ', '.def_661 ': '( not ( = ctppp_0 1 ) ) ', '.def_665 ': '( and .def_659 ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_661 ) ) ) ) '}
.def_661 
94
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_659 ': '( not ( = endppp_0 1 ) ) ', '.def_661 ': '( not ( = ctppp_0 1 ) ) ', '.def_665 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_661 ) ) ) ) '}
subs1 ( not ( = endppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endppp_0 1 ) ) 
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( not ( = ctppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctppp_0 1 ) ) 
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( and .def_659 ( and .def_240 ( and .def_239 ( and .def_240 .def_661 ) ) ) ) 
remove lets from formula
subs2 ( and .def_659 ( and .def_240 ( and .def_239 ( and .def_240 .def_661 ) ) ) ) 
.def_239 
36
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_659 ': '( not ( = endppp_0 1 ) ) ', '.def_661 ': '( not ( = ctppp_0 1 ) ) ', '.def_665 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) '}
.def_240 
57
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_659 ': '( not ( = endppp_0 1 ) ) ', '.def_661 ': '( not ( = ctppp_0 1 ) ) ', '.def_665 ': '( and .def_659 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_661 ) ) ) ) '}
21
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_659 ': '( not ( = endppp_0 1 ) ) ', '.def_661 ': '( not ( = ctppp_0 1 ) ) ', '.def_665 ': '( and .def_659 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_661 ) ) ) ) '}
.def_659 
6
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_659 ': '( not ( = endppp_0 1 ) ) ', '.def_661 ': '( not ( = ctppp_0 1 ) ) ', '.def_665 ': '( and .def_659 ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_661 ) ) ) ) '}
.def_661 
94
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_659 ': '( not ( = endppp_0 1 ) ) ', '.def_661 ': '( not ( = ctppp_0 1 ) ) ', '.def_665 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_661 ) ) ) ) '}
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( and .def_659 ( and .def_240 ( and .def_239 ( and .def_240 .def_661 ) ) ) ) 
remove lets from formula
subs2 ( and .def_659 ( and .def_240 ( and .def_239 ( and .def_240 .def_661 ) ) ) ) 
.def_239 
36
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_659 ': '( not ( = endppp_0 1 ) ) ', '.def_661 ': '( not ( = ctppp_0 1 ) ) ', '.def_665 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) '}
.def_240 
57
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_659 ': '( not ( = endppp_0 1 ) ) ', '.def_661 ': '( not ( = ctppp_0 1 ) ) ', '.def_665 ': '( and .def_659 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_661 ) ) ) ) '}
21
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_659 ': '( not ( = endppp_0 1 ) ) ', '.def_661 ': '( not ( = ctppp_0 1 ) ) ', '.def_665 ': '( and .def_659 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_661 ) ) ) ) '}
.def_659 
6
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_659 ': '( not ( = endppp_0 1 ) ) ', '.def_661 ': '( not ( = ctppp_0 1 ) ) ', '.def_665 ': '( and .def_659 ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_661 ) ) ) ) '}
.def_661 
94
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_659 ': '( not ( = endppp_0 1 ) ) ', '.def_661 ': '( not ( = ctppp_0 1 ) ) ', '.def_665 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_661 ) ) ) ) '}
subs1 ( not ( = endppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endppp_0 1 ) ) 
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( not ( = ctppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctppp_0 1 ) ) 
aux_vars_subs_dict  {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_659 ': '( not ( = endppp_0 1 ) ) ', '.def_661 ': '( not ( = ctppp_0 1 ) ) ', '.def_665 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) '}
{20: 33, 9: 35, 7: 37, 58: 71, 47: 73, 45: 75, 102: 117, 96: 119, 85: 121, 83: 123, 150: 164, 144: 166, 133: 168, 131: 170, 236: 260, 221: 262, 206: 264, 191: 266, 180: 268, 178: 270, 307: 322, 414: 423, 425: 442, 410: 444, 401: 446, 395: 448, 462: 477, 479: 494, 456: 496, 450: 498, 389: 500, 383: 502, 368: 504, 353: 506, 338: 508, 324: 510, 301: 512, 287: 514, 272: 516, 172: 518, 125: 520, 77: 522, 39: 524, 1: 526}
{21: 34, 10: 36, 8: 38, 65: 80, 59: 82, 48: 84, 46: 86, 113: 127, 107: 129, 96: 131, 94: 133, 199: 223, 184: 225, 169: 227, 154: 229, 143: 231, 141: 233, 270: 285, 377: 386, 388: 405, 373: 407, 364: 409, 358: 411, 425: 440, 442: 457, 419: 459, 413: 461, 352: 463, 346: 465, 331: 467, 316: 469, 301: 471, 287: 473, 264: 475, 250: 477, 235: 479, 135: 481, 88: 483, 40: 485, 2: 487}
{28: 43, 22: 45, 11: 47, 9: 49, 76: 90, 70: 92, 59: 94, 57: 96, 162: 186, 147: 188, 132: 190, 117: 192, 106: 194, 104: 196, 233: 248, 340: 349, 351: 368, 336: 370, 327: 372, 321: 374, 388: 403, 405: 420, 382: 422, 376: 424, 315: 426, 309: 428, 294: 430, 279: 432, 264: 434, 250: 436, 227: 438, 213: 440, 198: 442, 98: 444, 51: 446, 3: 448}
{29: 43, 23: 45, 12: 47, 10: 49, 115: 139, 100: 141, 85: 143, 70: 145, 59: 147, 57: 149, 186: 201, 293: 302, 304: 321, 289: 323, 280: 325, 274: 327, 341: 356, 358: 373, 335: 375, 329: 377, 268: 379, 262: 381, 247: 383, 232: 385, 217: 387, 203: 389, 180: 391, 166: 393, 151: 395, 51: 397, 4: 399}
{69: 93, 54: 95, 39: 97, 24: 99, 13: 101, 11: 103, 140: 155, 247: 256, 258: 275, 243: 277, 234: 279, 228: 281, 295: 310, 312: 327, 289: 329, 283: 331, 222: 333, 216: 335, 201: 337, 186: 339, 171: 341, 157: 343, 134: 345, 120: 347, 105: 349, 5: 351}
remove lets from formula
final_formula  ( and .def_239 ( or .def_665 ( and ( not .def_240 ) ( or .def_665 ( and .def_659 ( and .def_239 ( and .def_661 ( not ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real nppp_0 ) ) ) ) ( not ( and ( <= ctppp_1 1 ) ( <= 1 ctppp_1 ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hppp_0 1 ) ( or ( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) ( and ( not ( = nppp_0 0 ) ) ( or ( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) ( and ( not ( = endppp_0 1 ) ) ( and ( = hppp_0 1 ) ( and ( not ( = ctppp_0 1 ) ) ( not ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real nppp_0 ) ) ) ) ( not ( and ( <= ctppp_1 1 ) ( <= 1 ctppp_1 ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 34, 9: 36, 7: 38, 59: 73, 48: 75, 46: 77, 98: 113, 87: 115, 85: 117, 154: 169, 139: 171, 124: 173, 216: 232, 261: 277, 279: 295, 255: 297, 249: 299, 234: 301, 211: 303, 196: 305, 190: 307, 175: 309, 119: 311, 79: 313, 40: 315, 1: 317}
aux_vars_first_occ_dict {'.def_306 ': 11, '.def_307 ': 50, '.def_698 ': 89}
aux_vars_dict {'.def_306 ': '( = hpppp_0 1 ) ', '.def_307 ': '( = npppp_0 0 ) ', '.def_698 ': '( = ctpppp_0 1 ) '}
subs1 ( = hpppp_0 1 ) 
remove lets from formula
subs2 ( = hpppp_0 1 ) 
subs1 ( = npppp_0 0 ) 
remove lets from formula
subs2 ( = npppp_0 0 ) 
subs1 ( = ctpppp_0 1 ) 
remove lets from formula
subs2 ( = ctpppp_0 1 ) 
subs1 ( = hpppp_0 1 ) 
remove lets from formula
subs2 ( = hpppp_0 1 ) 
subs1 ( = npppp_0 0 ) 
remove lets from formula
subs2 ( = npppp_0 0 ) 
subs1 ( = ctpppp_0 1 ) 
remove lets from formula
subs2 ( = ctpppp_0 1 ) 
subs1 ( = hpppp_0 1 ) 
remove lets from formula
subs2 ( = hpppp_0 1 ) 
subs1 ( = ctpppp_0 1 ) 
remove lets from formula
subs2 ( = ctpppp_0 1 ) 
subs1 ( = npppp_0 0 ) 
remove lets from formula
subs2 ( = npppp_0 0 ) 
aux_vars_subs_dict  {'.def_306 ': '( = hpppp_0 1 ) ', '.def_307 ': '( = npppp_0 0 ) ', '.def_698 ': '( = ctpppp_0 1 ) '}
{20: 34, 9: 36, 7: 38, 59: 73, 48: 75, 46: 77, 98: 113, 87: 115, 85: 117, 154: 169, 139: 171, 124: 173, 216: 232, 261: 277, 279: 295, 255: 297, 249: 299, 234: 301, 211: 303, 196: 305, 190: 307, 175: 309, 119: 311, 79: 313, 40: 315, 1: 317}
{21: 35, 10: 37, 8: 39, 60: 75, 49: 77, 47: 79, 116: 131, 101: 133, 86: 135, 178: 194, 223: 239, 241: 257, 217: 259, 211: 261, 196: 263, 173: 265, 158: 267, 152: 269, 137: 271, 81: 273, 41: 275, 2: 277}
{22: 37, 11: 39, 9: 41, 78: 93, 63: 95, 48: 97, 140: 156, 185: 201, 203: 219, 179: 221, 173: 223, 158: 225, 135: 227, 120: 229, 114: 231, 99: 233, 43: 235, 3: 237}
remove lets from formula
final_formula  ( or ( and .def_306 ( and .def_307 ( not .def_698 ) ) ) ( and .def_306 ( not ( and .def_698 ( or ( = endpppp_0 1 ) ( and .def_307 ( not ( and ( <= ctpppp_1 1 ) ( <= 1 ctpppp_1 ) ) ) ) ) ) ) ) ) 
[' ( or ( and ( = hpppp_0 1 ) ( and ( = npppp_0 0 ) ( not ( = ctpppp_0 1 ) ) ) ) ( and ( = hpppp_0 1 ) ( not ( and ( = ctpppp_0 1 ) ( or ( = endpppp_0 1 ) ( and ( = npppp_0 0 ) ( not ( and ( <= ctpppp_1 1 ) ( <= 1 ctpppp_1 ) ) ) ) ) ) ) ) ) ']
new_pred_smt_format ['(declare-rel pred_0_synth_msat_2 (Int Int Int Int))\n (rule (=>  ( <= (rel ct 1) 0  ) (pred_0_synth_msat_2 end n h ct)))']
['(declare-rel pred_0_synth_msat_2 (Int Int Int Int))\n (rule (=>  ( <= (rel ct 1) 0  ) (pred_0_synth_msat_2 end n h ct)))']
Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied.
Pre-processing time:	0.068524 
Solver time:	8.010456
Total time:	8.07898
Iteration count:	27
Predicate count:	11
Successfully added new predicate to input file. !
Start next refinement loop: True



PDSC: Verifying ./Benchmarks_msat/puzzle_2.smt2
Namespace(file='./Benchmarks_msat/puzzle_2.smt2', log=False, msat=True, property=None, qe=False, sygus=False)
In if ladder True
Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_1_1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[2]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[0]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[1]

[abs_h_0, 
ct_0_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_1_1, ]
--->[2]

[abs_h_0, 
ct_0_0, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_1_1, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, ]
--->[1]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]


25 SMT queries performed.
before complete_trace: [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]


after complete_trace [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[-1]


-----------------------------------check_spur-------------------------------
final init cond And(And(0 == ct_0, end_0 == 0),
    And(0 == ct_1, end_1 == 0),
    And(n_0 == n_1, h_0 == 1, h_1 == 0))
Initial concrete state  {'n_1': 1, 'ct_1_1': False, 'ct_0_1': True, 'abs_end_1': False, 'abs_h_1': False, 'ct_1_0': False, 'ct_0_0': True, 'abs_end_0': False, 'abs_h_0': True, 'pred_0_synth_msat_2': True, 'pred_0_synth_msat_1': False, 'ct0_eq_ct1': True, 'n0_eq_n1': True, 'h_1': 0, 'h_0': 1, 'n_0': 1, 'end_1': 0, 'ct_1': 0, 'end_0': 0, 'ct_0': 0}
Next concrete state {'end_1': 0, 'n_1': 0, 'ct_1': 1, 'ct_0': 0, 'h_0': 1, 'n_0': 1, 'end_0': 0, 'h_1': 0}
Writing an smt file to be run using mathsat
Checking output from mathsat 5
hi
paren_dict {19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 95: 105, 89: 107, 79: 109, 77: 111, 138: 150, 132: 152, 121: 154, 119: 156, 183: 194, 177: 196, 166: 198, 164: 200, 264: 287, 250: 289, 236: 291, 221: 293, 210: 295, 208: 297, 398: 410, 392: 412, 477: 489, 491: 513, 471: 515, 457: 517, 443: 519, 428: 521, 414: 523, 386: 525, 371: 527, 356: 529, 342: 531, 328: 533, 313: 535, 299: 537, 202: 539, 158: 541, 113: 543, 71: 545, 37: 547, 1: 549}
aux_vars_first_occ_dict {'.def_21 ': 11, '.def_24 ': 47, '.def_81 ': 81, '.def_527 ': 123, '.def_529 ': 168, '.def_533 ': 212}
aux_vars_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_527 ': '( not ( = end_0 1 ) ) ', '.def_529 ': '( not ( = ct_0 1 ) ) ', '.def_533 ': '( and .def_527 ( and .def_21 ( and .def_24 ( and .def_21 .def_529 ) ) ) ) '}
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
subs1 ( not ( = end_0 1 ) ) 
remove lets from formula
subs2 ( not ( = end_0 1 ) ) 
subs1 ( not ( = ct_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ct_0 1 ) ) 
subs1 ( and .def_527 ( and .def_21 ( and .def_24 ( and .def_21 .def_529 ) ) ) ) 
remove lets from formula
subs2 ( and .def_527 ( and .def_21 ( and .def_24 ( and .def_21 .def_529 ) ) ) ) 
.def_21 
49
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_527 ': '( not ( = end_0 1 ) ) ', '.def_529 ': '( not ( = ct_0 1 ) ) '}
21
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_527 ': '( not ( = end_0 1 ) ) ', '.def_529 ': '( not ( = ct_0 1 ) ) '}
.def_24 
41
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_527 ': '( not ( = end_0 1 ) ) ', '.def_529 ': '( not ( = ct_0 1 ) ) ', '.def_533 ': '( and .def_527 ( and ( = n_0 n_1 ) ( and .def_24 ( and ( = n_0 n_1 ) .def_529 ) ) ) ) '}
.def_527 
6
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_527 ': '( not ( = end_0 1 ) ) ', '.def_529 ': '( not ( = ct_0 1 ) ) ', '.def_533 ': '( and .def_527 ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_529 ) ) ) ) '}
.def_529 
86
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_527 ': '( not ( = end_0 1 ) ) ', '.def_529 ': '( not ( = ct_0 1 ) ) ', '.def_533 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_529 ) ) ) ) '}
subs1 ( not ( = end_0 1 ) ) 
remove lets from formula
subs2 ( not ( = end_0 1 ) ) 
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( not ( = ct_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ct_0 1 ) ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( and .def_527 ( and .def_21 ( and .def_24 ( and .def_21 .def_529 ) ) ) ) 
remove lets from formula
subs2 ( and .def_527 ( and .def_21 ( and .def_24 ( and .def_21 .def_529 ) ) ) ) 
.def_21 
49
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_527 ': '( not ( = end_0 1 ) ) ', '.def_529 ': '( not ( = ct_0 1 ) ) ', '.def_533 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
21
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_527 ': '( not ( = end_0 1 ) ) ', '.def_529 ': '( not ( = ct_0 1 ) ) ', '.def_533 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
.def_24 
41
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_527 ': '( not ( = end_0 1 ) ) ', '.def_529 ': '( not ( = ct_0 1 ) ) ', '.def_533 ': '( and .def_527 ( and ( = n_0 n_1 ) ( and .def_24 ( and ( = n_0 n_1 ) .def_529 ) ) ) ) '}
.def_527 
6
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_527 ': '( not ( = end_0 1 ) ) ', '.def_529 ': '( not ( = ct_0 1 ) ) ', '.def_533 ': '( and .def_527 ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_529 ) ) ) ) '}
.def_529 
86
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_527 ': '( not ( = end_0 1 ) ) ', '.def_529 ': '( not ( = ct_0 1 ) ) ', '.def_533 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_529 ) ) ) ) '}
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
subs1 ( and .def_527 ( and .def_21 ( and .def_24 ( and .def_21 .def_529 ) ) ) ) 
remove lets from formula
subs2 ( and .def_527 ( and .def_21 ( and .def_24 ( and .def_21 .def_529 ) ) ) ) 
.def_21 
49
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_527 ': '( not ( = end_0 1 ) ) ', '.def_529 ': '( not ( = ct_0 1 ) ) ', '.def_533 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
21
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_527 ': '( not ( = end_0 1 ) ) ', '.def_529 ': '( not ( = ct_0 1 ) ) ', '.def_533 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
.def_24 
41
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_527 ': '( not ( = end_0 1 ) ) ', '.def_529 ': '( not ( = ct_0 1 ) ) ', '.def_533 ': '( and .def_527 ( and ( = n_0 n_1 ) ( and .def_24 ( and ( = n_0 n_1 ) .def_529 ) ) ) ) '}
.def_527 
6
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_527 ': '( not ( = end_0 1 ) ) ', '.def_529 ': '( not ( = ct_0 1 ) ) ', '.def_533 ': '( and .def_527 ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_529 ) ) ) ) '}
.def_529 
86
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_527 ': '( not ( = end_0 1 ) ) ', '.def_529 ': '( not ( = ct_0 1 ) ) ', '.def_533 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_529 ) ) ) ) '}
subs1 ( not ( = end_0 1 ) ) 
remove lets from formula
subs2 ( not ( = end_0 1 ) ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( not ( = ct_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ct_0 1 ) ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
aux_vars_subs_dict  {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_527 ': '( not ( = end_0 1 ) ) ', '.def_529 ': '( not ( = ct_0 1 ) ) ', '.def_533 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
{19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 95: 105, 89: 107, 79: 109, 77: 111, 138: 150, 132: 152, 121: 154, 119: 156, 183: 194, 177: 196, 166: 198, 164: 200, 264: 287, 250: 289, 236: 291, 221: 293, 210: 295, 208: 297, 398: 410, 392: 412, 477: 489, 491: 513, 471: 515, 457: 517, 443: 519, 428: 521, 414: 523, 386: 525, 371: 527, 356: 529, 342: 531, 328: 533, 313: 535, 299: 537, 202: 539, 158: 541, 113: 543, 71: 545, 37: 547, 1: 549}
{20: 30, 10: 32, 8: 34, 60: 70, 54: 72, 44: 74, 42: 76, 103: 115, 97: 117, 86: 119, 84: 121, 148: 159, 142: 161, 131: 163, 129: 165, 229: 252, 215: 254, 201: 256, 186: 258, 175: 260, 173: 262, 363: 375, 357: 377, 442: 454, 456: 478, 436: 480, 422: 482, 408: 484, 393: 486, 379: 488, 351: 490, 336: 492, 321: 494, 307: 496, 293: 498, 278: 500, 264: 502, 167: 504, 123: 506, 78: 508, 36: 510, 2: 512}
{27: 37, 21: 39, 11: 41, 9: 43, 70: 82, 64: 84, 53: 86, 51: 88, 115: 126, 109: 128, 98: 130, 96: 132, 196: 219, 182: 221, 168: 223, 153: 225, 142: 227, 140: 229, 330: 342, 324: 344, 409: 421, 423: 445, 403: 447, 389: 449, 375: 451, 360: 453, 346: 455, 318: 457, 303: 459, 288: 461, 274: 463, 260: 465, 245: 467, 231: 469, 134: 471, 90: 473, 45: 475, 3: 477}
{29: 41, 23: 43, 12: 45, 10: 47, 74: 85, 68: 87, 57: 89, 55: 91, 155: 178, 141: 180, 127: 182, 112: 184, 101: 186, 99: 188, 289: 301, 283: 303, 368: 380, 382: 404, 362: 406, 348: 408, 334: 410, 319: 412, 305: 414, 277: 416, 262: 418, 247: 420, 233: 422, 219: 424, 204: 426, 190: 428, 93: 430, 49: 432, 4: 434}
{30: 41, 24: 43, 13: 45, 11: 47, 111: 134, 97: 136, 83: 138, 68: 140, 57: 142, 55: 144, 245: 257, 239: 259, 324: 336, 338: 360, 318: 362, 304: 364, 290: 366, 275: 368, 261: 370, 233: 372, 218: 374, 203: 376, 189: 378, 175: 380, 160: 382, 146: 384, 49: 386, 5: 388}
{68: 91, 54: 93, 40: 95, 25: 97, 14: 99, 12: 101, 202: 214, 196: 216, 281: 293, 295: 317, 275: 319, 261: 321, 247: 323, 232: 325, 218: 327, 190: 329, 175: 331, 160: 333, 146: 335, 132: 337, 117: 339, 103: 341, 6: 343}
remove lets from formula
final_formula  ( and .def_24 ( and .def_533 ( and .def_21 ( and .def_81 ( and .def_533 ( and .def_527 ( and ( not ( = end_1 1 ) ) ( and .def_24 ( and .def_529 ( and .def_81 ( and .def_21 ( and ( <= ct_1 0 ) ( and .def_21 .def_81 ) ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = h_0 1 ) ( and ( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) ( and ( = n_0 n_1 ) ( and ( not ( = h_1 1 ) ) ( and ( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) ( and ( not ( = end_0 1 ) ) ( and ( not ( = end_1 1 ) ) ( and ( = h_0 1 ) ( and ( not ( = ct_0 1 ) ) ( and ( not ( = h_1 1 ) ) ( and ( = n_0 n_1 ) ( and ( <= ct_1 0 ) ( and ( = n_0 n_1 ) ( not ( = h_1 1 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {26: 37, 20: 39, 9: 41, 7: 43, 64: 75, 53: 77, 51: 79, 106: 119, 100: 121, 89: 123, 87: 125, 146: 157, 135: 159, 133: 161, 188: 200, 182: 202, 171: 204, 169: 206, 272: 296, 257: 298, 242: 300, 227: 302, 216: 304, 214: 306, 343: 358, 446: 459, 440: 461, 492: 501, 503: 518, 488: 520, 479: 522, 469: 524, 550: 559, 561: 576, 546: 578, 537: 580, 532: 587, 595: 608, 647: 656, 658: 673, 643: 675, 634: 677, 625: 679, 610: 681, 589: 683, 526: 685, 463: 687, 434: 689, 419: 691, 404: 693, 389: 695, 374: 697, 360: 699, 337: 701, 323: 703, 308: 705, 208: 707, 163: 709, 127: 711, 81: 713, 45: 715, 1: 717}
aux_vars_first_occ_dict {'.def_148 ': 11, '.def_561 ': 55, '.def_563 ': 91, '.def_564 ': 137, '.def_566 ': 173, '.def_570 ': 218}
aux_vars_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and .def_563 ( and .def_564 ( and .def_561 ( and .def_564 .def_566 ) ) ) ) '}
subs1 ( not ( = hp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = hp_1 1 ) ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( not ( = endp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endp_0 1 ) ) 
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( not ( = ctp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctp_0 1 ) ) 
subs1 ( and .def_563 ( and .def_564 ( and .def_561 ( and .def_564 .def_566 ) ) ) ) 
remove lets from formula
subs2 ( and .def_563 ( and .def_564 ( and .def_561 ( and .def_564 .def_566 ) ) ) ) 
.def_561 
36
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and .def_563 ( and .def_564 ( and .def_561 ( and .def_564 .def_566 ) ) ) ) '}
.def_563 
6
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and .def_563 ( and .def_564 ( and ( = hp_0 1 ) ( and .def_564 .def_566 ) ) ) ) '}
.def_564 
69
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and ( not ( = endp_0 1 ) ) ( and .def_564 ( and ( = hp_0 1 ) ( and .def_564 .def_566 ) ) ) ) '}
35
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and ( not ( = endp_0 1 ) ) ( and .def_564 ( and ( = hp_0 1 ) ( and .def_564 .def_566 ) ) ) ) '}
.def_566 
86
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) .def_566 ) ) ) ) '}
subs1 ( not ( = endp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endp_0 1 ) ) 
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( not ( = ctp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctp_0 1 ) ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( and .def_563 ( and .def_564 ( and .def_561 ( and .def_564 .def_566 ) ) ) ) 
remove lets from formula
subs2 ( and .def_563 ( and .def_564 ( and .def_561 ( and .def_564 .def_566 ) ) ) ) 
.def_561 
36
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and .def_563 ( and .def_564 ( and .def_561 ( and .def_564 .def_566 ) ) ) ) '}
.def_563 
6
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and .def_563 ( and .def_564 ( and ( = hp_0 1 ) ( and .def_564 .def_566 ) ) ) ) '}
.def_564 
69
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and ( not ( = endp_0 1 ) ) ( and .def_564 ( and ( = hp_0 1 ) ( and .def_564 .def_566 ) ) ) ) '}
35
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and ( not ( = endp_0 1 ) ) ( and .def_564 ( and ( = hp_0 1 ) ( and .def_564 .def_566 ) ) ) ) '}
.def_566 
86
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) .def_566 ) ) ) ) '}
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( and .def_563 ( and .def_564 ( and .def_561 ( and .def_564 .def_566 ) ) ) ) 
remove lets from formula
subs2 ( and .def_563 ( and .def_564 ( and .def_561 ( and .def_564 .def_566 ) ) ) ) 
.def_561 
36
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and .def_563 ( and .def_564 ( and .def_561 ( and .def_564 .def_566 ) ) ) ) '}
.def_563 
6
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and .def_563 ( and .def_564 ( and ( = hp_0 1 ) ( and .def_564 .def_566 ) ) ) ) '}
.def_564 
69
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and ( not ( = endp_0 1 ) ) ( and .def_564 ( and ( = hp_0 1 ) ( and .def_564 .def_566 ) ) ) ) '}
35
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and ( not ( = endp_0 1 ) ) ( and .def_564 ( and ( = hp_0 1 ) ( and .def_564 .def_566 ) ) ) ) '}
.def_566 
86
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) .def_566 ) ) ) ) '}
subs1 ( not ( = endp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endp_0 1 ) ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( not ( = ctp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctp_0 1 ) ) 
subs1 ( not ( = hp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = hp_1 1 ) ) 
subs1 ( not ( = hp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = hp_1 1 ) ) 
aux_vars_subs_dict  {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_561 ': '( = hp_0 1 ) ', '.def_563 ': '( not ( = endp_0 1 ) ) ', '.def_564 ': '( = np_0 0 ) ', '.def_566 ': '( not ( = ctp_0 1 ) ) ', '.def_570 ': '( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) ( not ( = ctp_0 1 ) ) ) ) ) ) '}
{26: 37, 20: 39, 9: 41, 7: 43, 64: 75, 53: 77, 51: 79, 106: 119, 100: 121, 89: 123, 87: 125, 146: 157, 135: 159, 133: 161, 188: 200, 182: 202, 171: 204, 169: 206, 272: 296, 257: 298, 242: 300, 227: 302, 216: 304, 214: 306, 343: 358, 446: 459, 440: 461, 492: 501, 503: 518, 488: 520, 479: 522, 469: 524, 550: 559, 561: 576, 546: 578, 537: 580, 532: 587, 595: 608, 647: 656, 658: 673, 643: 675, 634: 677, 625: 679, 610: 681, 589: 683, 526: 685, 463: 687, 434: 689, 419: 691, 404: 693, 389: 695, 374: 697, 360: 699, 337: 701, 323: 703, 308: 705, 208: 707, 163: 709, 127: 711, 81: 713, 45: 715, 1: 717}
{21: 32, 10: 34, 8: 36, 63: 76, 57: 78, 46: 80, 44: 82, 103: 114, 92: 116, 90: 118, 145: 157, 139: 159, 128: 161, 126: 163, 229: 253, 214: 255, 199: 257, 184: 259, 173: 261, 171: 263, 300: 315, 403: 416, 397: 418, 449: 458, 460: 475, 445: 477, 436: 479, 426: 481, 507: 516, 518: 533, 503: 535, 494: 537, 489: 544, 552: 565, 604: 613, 615: 630, 600: 632, 591: 634, 582: 636, 567: 638, 546: 640, 483: 642, 420: 644, 391: 646, 376: 648, 361: 650, 346: 652, 331: 654, 317: 656, 294: 658, 280: 660, 265: 662, 165: 664, 120: 666, 84: 668, 38: 670, 2: 672}
{28: 41, 22: 43, 11: 45, 9: 47, 68: 79, 57: 81, 55: 83, 110: 122, 104: 124, 93: 126, 91: 128, 194: 218, 179: 220, 164: 222, 149: 224, 138: 226, 136: 228, 265: 280, 368: 381, 362: 383, 414: 423, 425: 440, 410: 442, 401: 444, 391: 446, 472: 481, 483: 498, 468: 500, 459: 502, 454: 509, 517: 530, 569: 578, 580: 595, 565: 597, 556: 599, 547: 601, 532: 603, 511: 605, 448: 607, 385: 609, 356: 611, 341: 613, 326: 615, 311: 617, 296: 619, 282: 621, 259: 623, 245: 625, 230: 627, 130: 629, 85: 631, 49: 633, 3: 635}
{23: 34, 12: 36, 10: 38, 65: 77, 59: 79, 48: 81, 46: 83, 149: 173, 134: 175, 119: 177, 104: 179, 93: 181, 91: 183, 220: 235, 323: 336, 317: 338, 369: 378, 380: 395, 365: 397, 356: 399, 346: 401, 427: 436, 438: 453, 423: 455, 414: 457, 409: 464, 472: 485, 524: 533, 535: 550, 520: 552, 511: 554, 502: 556, 487: 558, 466: 560, 403: 562, 340: 564, 311: 566, 296: 568, 281: 570, 266: 572, 251: 574, 237: 576, 214: 578, 200: 580, 185: 582, 85: 584, 40: 586, 4: 588}
{30: 42, 24: 44, 13: 46, 11: 48, 114: 138, 99: 140, 84: 142, 69: 144, 58: 146, 56: 148, 185: 200, 288: 301, 282: 303, 334: 343, 345: 360, 330: 362, 321: 364, 311: 366, 392: 401, 403: 418, 388: 420, 379: 422, 374: 429, 437: 450, 489: 498, 500: 515, 485: 517, 476: 519, 467: 521, 452: 523, 431: 525, 368: 527, 305: 529, 276: 531, 261: 533, 246: 535, 231: 537, 216: 539, 202: 541, 179: 543, 165: 545, 150: 547, 50: 549, 5: 551}
{70: 94, 55: 96, 40: 98, 25: 100, 14: 102, 12: 104, 141: 156, 244: 257, 238: 259, 290: 299, 301: 316, 286: 318, 277: 320, 267: 322, 348: 357, 359: 374, 344: 376, 335: 378, 330: 385, 393: 406, 445: 454, 456: 471, 441: 473, 432: 475, 423: 477, 408: 479, 387: 481, 324: 483, 261: 485, 232: 487, 217: 489, 202: 491, 187: 493, 172: 495, 158: 497, 135: 499, 121: 501, 106: 503, 6: 505}
remove lets from formula
final_formula  ( and .def_561 ( or .def_570 ( and ( not .def_564 ) ( or .def_570 ( and .def_563 ( and .def_561 ( and .def_566 ( and .def_148 ( and ( not ( = endp_1 1 ) ) ( and ( <= np_1 ( to_int ( * ( / 1 10 ) ( to_real np_0 ) ) ) ) ( and ( <= ( to_int ( * ( / 1 10 ) ( to_real np_0 ) ) ) np_1 ) ( and ( <= ctp_1 1 ) ( and .def_148 ( = np_1 ( to_int ( * ( / 1 10 ) ( to_real np_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hp_0 1 ) ( or ( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) ( not ( = ctp_0 1 ) ) ) ) ) ) ( and ( not ( = np_0 0 ) ) ( or ( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) ( not ( = ctp_0 1 ) ) ) ) ) ) ( and ( not ( = endp_0 1 ) ) ( and ( = hp_0 1 ) ( and ( not ( = ctp_0 1 ) ) ( and ( not ( = hp_1 1 ) ) ( and ( not ( = endp_1 1 ) ) ( and ( <= np_1 ( to_int ( * ( / 1 10 ) ( to_real np_0 ) ) ) ) ( and ( <= ( to_int ( * ( / 1 10 ) ( to_real np_0 ) ) ) np_1 ) ( and ( <= ctp_1 1 ) ( and ( not ( = hp_1 1 ) ) ( = np_1 ( to_int ( * ( / 1 10 ) ( to_real np_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 32, 9: 34, 7: 36, 63: 77, 57: 79, 46: 81, 44: 83, 104: 116, 93: 118, 91: 120, 147: 160, 141: 162, 130: 164, 128: 166, 232: 256, 217: 258, 202: 260, 187: 262, 176: 264, 174: 266, 303: 318, 417: 426, 428: 444, 413: 446, 404: 448, 397: 450, 391: 452, 484: 493, 495: 511, 480: 513, 471: 515, 517: 523, 466: 525, 460: 527, 541: 555, 569: 581, 563: 583, 608: 617, 619: 635, 604: 637, 595: 639, 585: 641, 557: 643, 535: 645, 529: 647, 454: 649, 385: 651, 379: 653, 364: 655, 349: 657, 334: 659, 320: 661, 297: 663, 283: 665, 268: 667, 168: 669, 122: 671, 85: 673, 38: 675, 1: 677}
aux_vars_first_occ_dict {'.def_605 ': 11, '.def_607 ': 48, '.def_608 ': 95, '.def_610 ': 132, '.def_614 ': 178}
aux_vars_dict {'.def_605 ': '( = hpp_0 1 ) ', '.def_607 ': '( not ( = endpp_0 1 ) ) ', '.def_608 ': '( = npp_0 0 ) ', '.def_610 ': '( not ( = ctpp_0 1 ) ) ', '.def_614 ': '( and .def_607 ( and .def_608 ( and .def_605 ( and .def_608 .def_610 ) ) ) ) '}
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( not ( = endpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endpp_0 1 ) ) 
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( not ( = ctpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctpp_0 1 ) ) 
subs1 ( and .def_607 ( and .def_608 ( and .def_605 ( and .def_608 .def_610 ) ) ) ) 
remove lets from formula
subs2 ( and .def_607 ( and .def_608 ( and .def_605 ( and .def_608 .def_610 ) ) ) ) 
.def_605 
36
aux_vars_subs_dict {'.def_605 ': '( = hpp_0 1 ) ', '.def_607 ': '( not ( = endpp_0 1 ) ) ', '.def_608 ': '( = npp_0 0 ) ', '.def_610 ': '( not ( = ctpp_0 1 ) ) '}
.def_607 
6
aux_vars_subs_dict {'.def_605 ': '( = hpp_0 1 ) ', '.def_607 ': '( not ( = endpp_0 1 ) ) ', '.def_608 ': '( = npp_0 0 ) ', '.def_610 ': '( not ( = ctpp_0 1 ) ) ', '.def_614 ': '( and .def_607 ( and .def_608 ( and ( = hpp_0 1 ) ( and .def_608 .def_610 ) ) ) ) '}
.def_608 
71
aux_vars_subs_dict {'.def_605 ': '( = hpp_0 1 ) ', '.def_607 ': '( not ( = endpp_0 1 ) ) ', '.def_608 ': '( = npp_0 0 ) ', '.def_610 ': '( not ( = ctpp_0 1 ) ) ', '.def_614 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_608 ( and ( = hpp_0 1 ) ( and .def_608 .def_610 ) ) ) ) '}
36
aux_vars_subs_dict {'.def_605 ': '( = hpp_0 1 ) ', '.def_607 ': '( not ( = endpp_0 1 ) ) ', '.def_608 ': '( = npp_0 0 ) ', '.def_610 ': '( not ( = ctpp_0 1 ) ) ', '.def_614 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_608 ( and ( = hpp_0 1 ) ( and .def_608 .def_610 ) ) ) ) '}
.def_610 
90
aux_vars_subs_dict {'.def_605 ': '( = hpp_0 1 ) ', '.def_607 ': '( not ( = endpp_0 1 ) ) ', '.def_608 ': '( = npp_0 0 ) ', '.def_610 ': '( not ( = ctpp_0 1 ) ) ', '.def_614 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) .def_610 ) ) ) ) '}
subs1 ( not ( = endpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endpp_0 1 ) ) 
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( not ( = ctpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctpp_0 1 ) ) 
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( and .def_607 ( and .def_608 ( and .def_605 ( and .def_608 .def_610 ) ) ) ) 
remove lets from formula
subs2 ( and .def_607 ( and .def_608 ( and .def_605 ( and .def_608 .def_610 ) ) ) ) 
.def_605 
36
aux_vars_subs_dict {'.def_605 ': '( = hpp_0 1 ) ', '.def_607 ': '( not ( = endpp_0 1 ) ) ', '.def_608 ': '( = npp_0 0 ) ', '.def_610 ': '( not ( = ctpp_0 1 ) ) ', '.def_614 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) '}
.def_607 
6
aux_vars_subs_dict {'.def_605 ': '( = hpp_0 1 ) ', '.def_607 ': '( not ( = endpp_0 1 ) ) ', '.def_608 ': '( = npp_0 0 ) ', '.def_610 ': '( not ( = ctpp_0 1 ) ) ', '.def_614 ': '( and .def_607 ( and .def_608 ( and ( = hpp_0 1 ) ( and .def_608 .def_610 ) ) ) ) '}
.def_608 
71
aux_vars_subs_dict {'.def_605 ': '( = hpp_0 1 ) ', '.def_607 ': '( not ( = endpp_0 1 ) ) ', '.def_608 ': '( = npp_0 0 ) ', '.def_610 ': '( not ( = ctpp_0 1 ) ) ', '.def_614 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_608 ( and ( = hpp_0 1 ) ( and .def_608 .def_610 ) ) ) ) '}
36
aux_vars_subs_dict {'.def_605 ': '( = hpp_0 1 ) ', '.def_607 ': '( not ( = endpp_0 1 ) ) ', '.def_608 ': '( = npp_0 0 ) ', '.def_610 ': '( not ( = ctpp_0 1 ) ) ', '.def_614 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_608 ( and ( = hpp_0 1 ) ( and .def_608 .def_610 ) ) ) ) '}
.def_610 
90
aux_vars_subs_dict {'.def_605 ': '( = hpp_0 1 ) ', '.def_607 ': '( not ( = endpp_0 1 ) ) ', '.def_608 ': '( = npp_0 0 ) ', '.def_610 ': '( not ( = ctpp_0 1 ) ) ', '.def_614 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) .def_610 ) ) ) ) '}
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( and .def_607 ( and .def_608 ( and .def_605 ( and .def_608 .def_610 ) ) ) ) 
remove lets from formula
subs2 ( and .def_607 ( and .def_608 ( and .def_605 ( and .def_608 .def_610 ) ) ) ) 
.def_605 
36
aux_vars_subs_dict {'.def_605 ': '( = hpp_0 1 ) ', '.def_607 ': '( not ( = endpp_0 1 ) ) ', '.def_608 ': '( = npp_0 0 ) ', '.def_610 ': '( not ( = ctpp_0 1 ) ) ', '.def_614 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) '}
.def_607 
6
aux_vars_subs_dict {'.def_605 ': '( = hpp_0 1 ) ', '.def_607 ': '( not ( = endpp_0 1 ) ) ', '.def_608 ': '( = npp_0 0 ) ', '.def_610 ': '( not ( = ctpp_0 1 ) ) ', '.def_614 ': '( and .def_607 ( and .def_608 ( and ( = hpp_0 1 ) ( and .def_608 .def_610 ) ) ) ) '}
.def_608 
71
aux_vars_subs_dict {'.def_605 ': '( = hpp_0 1 ) ', '.def_607 ': '( not ( = endpp_0 1 ) ) ', '.def_608 ': '( = npp_0 0 ) ', '.def_610 ': '( not ( = ctpp_0 1 ) ) ', '.def_614 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_608 ( and ( = hpp_0 1 ) ( and .def_608 .def_610 ) ) ) ) '}
36
aux_vars_subs_dict {'.def_605 ': '( = hpp_0 1 ) ', '.def_607 ': '( not ( = endpp_0 1 ) ) ', '.def_608 ': '( = npp_0 0 ) ', '.def_610 ': '( not ( = ctpp_0 1 ) ) ', '.def_614 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_608 ( and ( = hpp_0 1 ) ( and .def_608 .def_610 ) ) ) ) '}
.def_610 
90
aux_vars_subs_dict {'.def_605 ': '( = hpp_0 1 ) ', '.def_607 ': '( not ( = endpp_0 1 ) ) ', '.def_608 ': '( = npp_0 0 ) ', '.def_610 ': '( not ( = ctpp_0 1 ) ) ', '.def_614 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) .def_610 ) ) ) ) '}
subs1 ( not ( = endpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endpp_0 1 ) ) 
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( not ( = ctpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctpp_0 1 ) ) 
aux_vars_subs_dict  {'.def_605 ': '( = hpp_0 1 ) ', '.def_607 ': '( not ( = endpp_0 1 ) ) ', '.def_608 ': '( = npp_0 0 ) ', '.def_610 ': '( not ( = ctpp_0 1 ) ) ', '.def_614 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) '}
{20: 32, 9: 34, 7: 36, 63: 77, 57: 79, 46: 81, 44: 83, 104: 116, 93: 118, 91: 120, 147: 160, 141: 162, 130: 164, 128: 166, 232: 256, 217: 258, 202: 260, 187: 262, 176: 264, 174: 266, 303: 318, 417: 426, 428: 444, 413: 446, 404: 448, 397: 450, 391: 452, 484: 493, 495: 511, 480: 513, 471: 515, 517: 523, 466: 525, 460: 527, 541: 555, 569: 581, 563: 583, 608: 617, 619: 635, 604: 637, 595: 639, 585: 641, 557: 643, 535: 645, 529: 647, 454: 649, 385: 651, 379: 653, 364: 655, 349: 657, 334: 659, 320: 661, 297: 663, 283: 665, 268: 667, 168: 669, 122: 671, 85: 673, 38: 675, 1: 677}
{27: 41, 21: 43, 10: 45, 8: 47, 68: 80, 57: 82, 55: 84, 111: 124, 105: 126, 94: 128, 92: 130, 196: 220, 181: 222, 166: 224, 151: 226, 140: 228, 138: 230, 267: 282, 381: 390, 392: 408, 377: 410, 368: 412, 361: 414, 355: 416, 448: 457, 459: 475, 444: 477, 435: 479, 481: 487, 430: 489, 424: 491, 505: 519, 533: 545, 527: 547, 572: 581, 583: 599, 568: 601, 559: 603, 549: 605, 521: 607, 499: 609, 493: 611, 418: 613, 349: 615, 343: 617, 328: 619, 313: 621, 298: 623, 284: 625, 261: 627, 247: 629, 232: 631, 132: 633, 86: 635, 49: 637, 2: 639}
{22: 34, 11: 36, 9: 38, 65: 78, 59: 80, 48: 82, 46: 84, 150: 174, 135: 176, 120: 178, 105: 180, 94: 182, 92: 184, 221: 236, 335: 344, 346: 362, 331: 364, 322: 366, 315: 368, 309: 370, 402: 411, 413: 429, 398: 431, 389: 433, 435: 441, 384: 443, 378: 445, 459: 473, 487: 499, 481: 501, 526: 535, 537: 553, 522: 555, 513: 557, 503: 559, 475: 561, 453: 563, 447: 565, 372: 567, 303: 569, 297: 571, 282: 573, 267: 575, 252: 577, 238: 579, 215: 581, 201: 583, 186: 585, 86: 587, 40: 589, 3: 591}
{29: 42, 23: 44, 12: 46, 10: 48, 114: 138, 99: 140, 84: 142, 69: 144, 58: 146, 56: 148, 185: 200, 299: 308, 310: 326, 295: 328, 286: 330, 279: 332, 273: 334, 366: 375, 377: 393, 362: 395, 353: 397, 399: 405, 348: 407, 342: 409, 423: 437, 451: 463, 445: 465, 490: 499, 501: 517, 486: 519, 477: 521, 467: 523, 439: 525, 417: 527, 411: 529, 336: 531, 267: 533, 261: 535, 246: 537, 231: 539, 216: 541, 202: 543, 179: 545, 165: 547, 150: 549, 50: 551, 4: 553}
{69: 93, 54: 95, 39: 97, 24: 99, 13: 101, 11: 103, 140: 155, 254: 263, 265: 281, 250: 283, 241: 285, 234: 287, 228: 289, 321: 330, 332: 348, 317: 350, 308: 352, 354: 360, 303: 362, 297: 364, 378: 392, 406: 418, 400: 420, 445: 454, 456: 472, 441: 474, 432: 476, 422: 478, 394: 480, 372: 482, 366: 484, 291: 486, 222: 488, 216: 490, 201: 492, 186: 494, 171: 496, 157: 498, 134: 500, 120: 502, 105: 504, 5: 506}
remove lets from formula
final_formula  ( and .def_605 ( or .def_614 ( and ( not .def_608 ) ( or .def_614 ( and .def_607 ( and .def_605 ( and .def_610 ( not ( and ( not ( <= 1 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ) ( and ( not ( <= ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ( - 1 ) ) ) ( not ( and ( <= ctpp_1 1 ) ( and ( not ( = hpp_1 1 ) ) ( = npp_1 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hpp_0 1 ) ( or ( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) ( and ( not ( = npp_0 0 ) ) ( or ( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) ( and ( not ( = endpp_0 1 ) ) ( and ( = hpp_0 1 ) ( and ( not ( = ctpp_0 1 ) ) ( not ( and ( not ( <= 1 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ) ( and ( not ( <= ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ( - 1 ) ) ) ( not ( and ( <= ctpp_1 1 ) ( and ( not ( = hpp_1 1 ) ) ( = npp_1 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 33, 9: 35, 7: 37, 58: 71, 47: 73, 45: 75, 102: 117, 96: 119, 85: 121, 83: 123, 150: 164, 144: 166, 133: 168, 131: 170, 236: 260, 221: 262, 206: 264, 191: 266, 180: 268, 178: 270, 307: 322, 421: 430, 432: 449, 417: 451, 408: 453, 401: 455, 395: 457, 489: 498, 500: 517, 485: 519, 476: 521, 523: 529, 471: 531, 465: 533, 560: 569, 571: 588, 556: 590, 547: 592, 541: 594, 602: 617, 596: 619, 535: 621, 459: 623, 389: 625, 383: 627, 368: 629, 353: 631, 338: 633, 324: 635, 301: 637, 287: 639, 272: 641, 172: 643, 125: 645, 77: 647, 39: 649, 1: 651}
aux_vars_first_occ_dict {'.def_239 ': 11, '.def_240 ': 49, '.def_660 ': 87, '.def_662 ': 135, '.def_666 ': 182}
aux_vars_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_660 ': '( not ( = endppp_0 1 ) ) ', '.def_662 ': '( not ( = ctppp_0 1 ) ) ', '.def_666 ': '( and .def_660 ( and .def_240 ( and .def_239 ( and .def_240 .def_662 ) ) ) ) '}
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( not ( = endppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endppp_0 1 ) ) 
subs1 ( not ( = ctppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctppp_0 1 ) ) 
subs1 ( and .def_660 ( and .def_240 ( and .def_239 ( and .def_240 .def_662 ) ) ) ) 
remove lets from formula
subs2 ( and .def_660 ( and .def_240 ( and .def_239 ( and .def_240 .def_662 ) ) ) ) 
.def_239 
36
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_660 ': '( not ( = endppp_0 1 ) ) ', '.def_662 ': '( not ( = ctppp_0 1 ) ) '}
.def_240 
57
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_660 ': '( not ( = endppp_0 1 ) ) ', '.def_662 ': '( not ( = ctppp_0 1 ) ) ', '.def_666 ': '( and .def_660 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_662 ) ) ) ) '}
21
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_660 ': '( not ( = endppp_0 1 ) ) ', '.def_662 ': '( not ( = ctppp_0 1 ) ) ', '.def_666 ': '( and .def_660 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_662 ) ) ) ) '}
.def_660 
6
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_660 ': '( not ( = endppp_0 1 ) ) ', '.def_662 ': '( not ( = ctppp_0 1 ) ) ', '.def_666 ': '( and .def_660 ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_662 ) ) ) ) '}
.def_662 
94
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_660 ': '( not ( = endppp_0 1 ) ) ', '.def_662 ': '( not ( = ctppp_0 1 ) ) ', '.def_666 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_662 ) ) ) ) '}
subs1 ( not ( = endppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endppp_0 1 ) ) 
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( not ( = ctppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctppp_0 1 ) ) 
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( and .def_660 ( and .def_240 ( and .def_239 ( and .def_240 .def_662 ) ) ) ) 
remove lets from formula
subs2 ( and .def_660 ( and .def_240 ( and .def_239 ( and .def_240 .def_662 ) ) ) ) 
.def_239 
36
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_660 ': '( not ( = endppp_0 1 ) ) ', '.def_662 ': '( not ( = ctppp_0 1 ) ) ', '.def_666 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) '}
.def_240 
57
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_660 ': '( not ( = endppp_0 1 ) ) ', '.def_662 ': '( not ( = ctppp_0 1 ) ) ', '.def_666 ': '( and .def_660 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_662 ) ) ) ) '}
21
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_660 ': '( not ( = endppp_0 1 ) ) ', '.def_662 ': '( not ( = ctppp_0 1 ) ) ', '.def_666 ': '( and .def_660 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_662 ) ) ) ) '}
.def_660 
6
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_660 ': '( not ( = endppp_0 1 ) ) ', '.def_662 ': '( not ( = ctppp_0 1 ) ) ', '.def_666 ': '( and .def_660 ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_662 ) ) ) ) '}
.def_662 
94
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_660 ': '( not ( = endppp_0 1 ) ) ', '.def_662 ': '( not ( = ctppp_0 1 ) ) ', '.def_666 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_662 ) ) ) ) '}
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( and .def_660 ( and .def_240 ( and .def_239 ( and .def_240 .def_662 ) ) ) ) 
remove lets from formula
subs2 ( and .def_660 ( and .def_240 ( and .def_239 ( and .def_240 .def_662 ) ) ) ) 
.def_239 
36
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_660 ': '( not ( = endppp_0 1 ) ) ', '.def_662 ': '( not ( = ctppp_0 1 ) ) ', '.def_666 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) '}
.def_240 
57
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_660 ': '( not ( = endppp_0 1 ) ) ', '.def_662 ': '( not ( = ctppp_0 1 ) ) ', '.def_666 ': '( and .def_660 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_662 ) ) ) ) '}
21
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_660 ': '( not ( = endppp_0 1 ) ) ', '.def_662 ': '( not ( = ctppp_0 1 ) ) ', '.def_666 ': '( and .def_660 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_662 ) ) ) ) '}
.def_660 
6
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_660 ': '( not ( = endppp_0 1 ) ) ', '.def_662 ': '( not ( = ctppp_0 1 ) ) ', '.def_666 ': '( and .def_660 ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_662 ) ) ) ) '}
.def_662 
94
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_660 ': '( not ( = endppp_0 1 ) ) ', '.def_662 ': '( not ( = ctppp_0 1 ) ) ', '.def_666 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_662 ) ) ) ) '}
subs1 ( not ( = endppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endppp_0 1 ) ) 
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( not ( = ctppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctppp_0 1 ) ) 
aux_vars_subs_dict  {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_660 ': '( not ( = endppp_0 1 ) ) ', '.def_662 ': '( not ( = ctppp_0 1 ) ) ', '.def_666 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) '}
{20: 33, 9: 35, 7: 37, 58: 71, 47: 73, 45: 75, 102: 117, 96: 119, 85: 121, 83: 123, 150: 164, 144: 166, 133: 168, 131: 170, 236: 260, 221: 262, 206: 264, 191: 266, 180: 268, 178: 270, 307: 322, 421: 430, 432: 449, 417: 451, 408: 453, 401: 455, 395: 457, 489: 498, 500: 517, 485: 519, 476: 521, 523: 529, 471: 531, 465: 533, 560: 569, 571: 588, 556: 590, 547: 592, 541: 594, 602: 617, 596: 619, 535: 621, 459: 623, 389: 625, 383: 627, 368: 629, 353: 631, 338: 633, 324: 635, 301: 637, 287: 639, 272: 641, 172: 643, 125: 645, 77: 647, 39: 649, 1: 651}
{21: 34, 10: 36, 8: 38, 65: 80, 59: 82, 48: 84, 46: 86, 113: 127, 107: 129, 96: 131, 94: 133, 199: 223, 184: 225, 169: 227, 154: 229, 143: 231, 141: 233, 270: 285, 384: 393, 395: 412, 380: 414, 371: 416, 364: 418, 358: 420, 452: 461, 463: 480, 448: 482, 439: 484, 486: 492, 434: 494, 428: 496, 523: 532, 534: 551, 519: 553, 510: 555, 504: 557, 565: 580, 559: 582, 498: 584, 422: 586, 352: 588, 346: 590, 331: 592, 316: 594, 301: 596, 287: 598, 264: 600, 250: 602, 235: 604, 135: 606, 88: 608, 40: 610, 2: 612}
{28: 43, 22: 45, 11: 47, 9: 49, 76: 90, 70: 92, 59: 94, 57: 96, 162: 186, 147: 188, 132: 190, 117: 192, 106: 194, 104: 196, 233: 248, 347: 356, 358: 375, 343: 377, 334: 379, 327: 381, 321: 383, 415: 424, 426: 443, 411: 445, 402: 447, 449: 455, 397: 457, 391: 459, 486: 495, 497: 514, 482: 516, 473: 518, 467: 520, 528: 543, 522: 545, 461: 547, 385: 549, 315: 551, 309: 553, 294: 555, 279: 557, 264: 559, 250: 561, 227: 563, 213: 565, 198: 567, 98: 569, 51: 571, 3: 573}
{29: 43, 23: 45, 12: 47, 10: 49, 115: 139, 100: 141, 85: 143, 70: 145, 59: 147, 57: 149, 186: 201, 300: 309, 311: 328, 296: 330, 287: 332, 280: 334, 274: 336, 368: 377, 379: 396, 364: 398, 355: 400, 402: 408, 350: 410, 344: 412, 439: 448, 450: 467, 435: 469, 426: 471, 420: 473, 481: 496, 475: 498, 414: 500, 338: 502, 268: 504, 262: 506, 247: 508, 232: 510, 217: 512, 203: 514, 180: 516, 166: 518, 151: 520, 51: 522, 4: 524}
{69: 93, 54: 95, 39: 97, 24: 99, 13: 101, 11: 103, 140: 155, 254: 263, 265: 282, 250: 284, 241: 286, 234: 288, 228: 290, 322: 331, 333: 350, 318: 352, 309: 354, 356: 362, 304: 364, 298: 366, 393: 402, 404: 421, 389: 423, 380: 425, 374: 427, 435: 450, 429: 452, 368: 454, 292: 456, 222: 458, 216: 460, 201: 462, 186: 464, 171: 466, 157: 468, 134: 470, 120: 472, 105: 474, 5: 476}
remove lets from formula
final_formula  ( and .def_239 ( or .def_666 ( and ( not .def_240 ) ( or .def_666 ( and .def_660 ( and .def_239 ( and .def_662 ( not ( and ( not ( <= 1 ( to_int ( * ( / 1 10 ) ( to_real nppp_0 ) ) ) ) ) ( and ( not ( <= ( to_int ( * ( / 1 10 ) ( to_real nppp_0 ) ) ) ( - 1 ) ) ) ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real nppp_0 ) ) ) ) ( not ( <= ctppp_1 1 ) ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hppp_0 1 ) ( or ( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) ( and ( not ( = nppp_0 0 ) ) ( or ( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) ( and ( not ( = endppp_0 1 ) ) ( and ( = hppp_0 1 ) ( and ( not ( = ctppp_0 1 ) ) ( not ( and ( not ( <= 1 ( to_int ( * ( / 1 10 ) ( to_real nppp_0 ) ) ) ) ) ( and ( not ( <= ( to_int ( * ( / 1 10 ) ( to_real nppp_0 ) ) ) ( - 1 ) ) ) ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real nppp_0 ) ) ) ) ( not ( <= ctppp_1 1 ) ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 34, 9: 36, 7: 38, 59: 73, 48: 75, 46: 77, 98: 113, 87: 115, 85: 117, 154: 169, 139: 171, 124: 173, 216: 232, 246: 261, 240: 263, 290: 296, 277: 298, 271: 300, 323: 339, 317: 341, 302: 343, 265: 345, 234: 347, 211: 349, 196: 351, 190: 353, 175: 355, 119: 357, 79: 359, 40: 361, 1: 363}
aux_vars_first_occ_dict {'.def_306 ': 11, '.def_307 ': 50, '.def_706 ': 89}
aux_vars_dict {'.def_306 ': '( = hpppp_0 1 ) ', '.def_307 ': '( = npppp_0 0 ) ', '.def_706 ': '( = ctpppp_0 1 ) '}
subs1 ( = hpppp_0 1 ) 
remove lets from formula
subs2 ( = hpppp_0 1 ) 
subs1 ( = npppp_0 0 ) 
remove lets from formula
subs2 ( = npppp_0 0 ) 
subs1 ( = ctpppp_0 1 ) 
remove lets from formula
subs2 ( = ctpppp_0 1 ) 
subs1 ( = hpppp_0 1 ) 
remove lets from formula
subs2 ( = hpppp_0 1 ) 
subs1 ( = npppp_0 0 ) 
remove lets from formula
subs2 ( = npppp_0 0 ) 
subs1 ( = ctpppp_0 1 ) 
remove lets from formula
subs2 ( = ctpppp_0 1 ) 
subs1 ( = hpppp_0 1 ) 
remove lets from formula
subs2 ( = hpppp_0 1 ) 
subs1 ( = ctpppp_0 1 ) 
remove lets from formula
subs2 ( = ctpppp_0 1 ) 
subs1 ( = npppp_0 0 ) 
remove lets from formula
subs2 ( = npppp_0 0 ) 
aux_vars_subs_dict  {'.def_306 ': '( = hpppp_0 1 ) ', '.def_307 ': '( = npppp_0 0 ) ', '.def_706 ': '( = ctpppp_0 1 ) '}
{20: 34, 9: 36, 7: 38, 59: 73, 48: 75, 46: 77, 98: 113, 87: 115, 85: 117, 154: 169, 139: 171, 124: 173, 216: 232, 246: 261, 240: 263, 290: 296, 277: 298, 271: 300, 323: 339, 317: 341, 302: 343, 265: 345, 234: 347, 211: 349, 196: 351, 190: 353, 175: 355, 119: 357, 79: 359, 40: 361, 1: 363}
{21: 35, 10: 37, 8: 39, 60: 75, 49: 77, 47: 79, 116: 131, 101: 133, 86: 135, 178: 194, 208: 223, 202: 225, 252: 258, 239: 260, 233: 262, 285: 301, 279: 303, 264: 305, 227: 307, 196: 309, 173: 311, 158: 313, 152: 315, 137: 317, 81: 319, 41: 321, 2: 323}
{22: 37, 11: 39, 9: 41, 78: 93, 63: 95, 48: 97, 140: 156, 170: 185, 164: 187, 214: 220, 201: 222, 195: 224, 247: 263, 241: 265, 226: 267, 189: 269, 158: 271, 135: 273, 120: 275, 114: 277, 99: 279, 43: 281, 3: 283}
remove lets from formula
final_formula  ( or ( and .def_306 ( and .def_307 ( not .def_706 ) ) ) ( and .def_306 ( not ( and .def_706 ( or ( = endpppp_0 1 ) ( and ( not ( <= 1 npppp_0 ) ) ( and ( not ( <= npppp_0 ( - 1 ) ) ) ( and .def_307 ( not ( <= ctpppp_1 1 ) ) ) ) ) ) ) ) ) ) 
[' ( or ( and ( = hpppp_0 1 ) ( and ( = npppp_0 0 ) ( not ( = ctpppp_0 1 ) ) ) ) ( and ( = hpppp_0 1 ) ( not ( and ( = ctpppp_0 1 ) ( or ( = endpppp_0 1 ) ( and ( not ( <= 1 npppp_0 ) ) ( and ( not ( <= npppp_0 ( - 1 ) ) ) ( and ( = npppp_0 0 ) ( not ( <= ctpppp_1 1 ) ) ) ) ) ) ) ) ) ) ']
new_pred_smt_format ['(declare-rel pred_0_synth_msat_3 (Int Int Int Int))\n (rule (=>  ( <= (rel n 0)  ( - 1  )  ) (pred_0_synth_msat_3 end n h ct)))']
['(declare-rel pred_0_synth_msat_3 (Int Int Int Int))\n (rule (=>  ( <= (rel n 0)  ( - 1  )  ) (pred_0_synth_msat_3 end n h ct)))']
Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied.
Pre-processing time:	0.071876 
Solver time:	7.934289
Total time:	8.006165
Iteration count:	25
Predicate count:	12
Successfully added new predicate to input file. !
Start next refinement loop: True



PDSC: Verifying ./Benchmarks_msat/puzzle_2.smt2
Namespace(file='./Benchmarks_msat/puzzle_2.smt2', log=False, msat=True, property=None, qe=False, sygus=False)
In if ladder True
Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_1_1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[0]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
ct_1_1, ]
--->[2]

[abs_h_0, 
ct_0_0, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, ]
--->[1]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[0]


30 SMT queries performed.
before complete_trace: [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[0]


after complete_trace [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[-1]


-----------------------------------check_spur-------------------------------
final init cond And(And(0 == ct_0, end_0 == 0),
    And(0 == ct_1, end_1 == 0),
    And(n_0 == n_1, h_0 == 1, h_1 == 0))
Initial concrete state  {'n_1': 1, 'ct_1_1': False, 'ct_0_1': True, 'abs_end_1': False, 'abs_h_1': False, 'ct_1_0': False, 'ct_0_0': True, 'abs_end_0': False, 'abs_h_0': True, 'pred_0_synth_msat_3': False, 'pred_0_synth_msat_2': True, 'pred_0_synth_msat_1': False, 'ct0_eq_ct1': True, 'n0_eq_n1': True, 'h_1': 0, 'h_0': 1, 'n_0': 1, 'end_1': 0, 'ct_1': 0, 'end_0': 0, 'ct_0': 0}
Next concrete state {'end_1': 0, 'n_1': 0, 'ct_1': 1, 'ct_0': 0, 'h_0': 1, 'n_0': 1, 'end_0': 0, 'h_1': 0}
Next concrete state {'end_1': 1, 'n_1': 0, 'ct_1': 1, 'ct_0': 0, 'h_0': 1, 'n_0': 1, 'end_0': 0, 'h_1': 0}
Writing an smt file to be run using mathsat
Checking output from mathsat 5
hi
paren_dict {19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 95: 105, 89: 107, 79: 109, 77: 111, 138: 150, 132: 152, 121: 154, 119: 156, 183: 194, 177: 196, 166: 198, 164: 200, 264: 287, 250: 289, 236: 291, 221: 293, 210: 295, 208: 297, 398: 410, 392: 412, 477: 489, 491: 513, 471: 515, 457: 517, 443: 519, 428: 521, 414: 523, 386: 525, 371: 527, 356: 529, 342: 531, 328: 533, 313: 535, 299: 537, 202: 539, 158: 541, 113: 543, 71: 545, 37: 547, 1: 549}
aux_vars_first_occ_dict {'.def_21 ': 11, '.def_24 ': 47, '.def_81 ': 81, '.def_530 ': 123, '.def_532 ': 168, '.def_536 ': 212}
aux_vars_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_530 ': '( not ( = end_0 1 ) ) ', '.def_532 ': '( not ( = ct_0 1 ) ) ', '.def_536 ': '( and .def_530 ( and .def_21 ( and .def_24 ( and .def_21 .def_532 ) ) ) ) '}
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
subs1 ( not ( = end_0 1 ) ) 
remove lets from formula
subs2 ( not ( = end_0 1 ) ) 
subs1 ( not ( = ct_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ct_0 1 ) ) 
subs1 ( and .def_530 ( and .def_21 ( and .def_24 ( and .def_21 .def_532 ) ) ) ) 
remove lets from formula
subs2 ( and .def_530 ( and .def_21 ( and .def_24 ( and .def_21 .def_532 ) ) ) ) 
.def_21 
49
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_530 ': '( not ( = end_0 1 ) ) ', '.def_532 ': '( not ( = ct_0 1 ) ) '}
21
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_530 ': '( not ( = end_0 1 ) ) ', '.def_532 ': '( not ( = ct_0 1 ) ) '}
.def_24 
41
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_530 ': '( not ( = end_0 1 ) ) ', '.def_532 ': '( not ( = ct_0 1 ) ) ', '.def_536 ': '( and .def_530 ( and ( = n_0 n_1 ) ( and .def_24 ( and ( = n_0 n_1 ) .def_532 ) ) ) ) '}
.def_530 
6
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_530 ': '( not ( = end_0 1 ) ) ', '.def_532 ': '( not ( = ct_0 1 ) ) ', '.def_536 ': '( and .def_530 ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_532 ) ) ) ) '}
.def_532 
86
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_530 ': '( not ( = end_0 1 ) ) ', '.def_532 ': '( not ( = ct_0 1 ) ) ', '.def_536 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_532 ) ) ) ) '}
subs1 ( not ( = end_0 1 ) ) 
remove lets from formula
subs2 ( not ( = end_0 1 ) ) 
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( not ( = ct_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ct_0 1 ) ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( and .def_530 ( and .def_21 ( and .def_24 ( and .def_21 .def_532 ) ) ) ) 
remove lets from formula
subs2 ( and .def_530 ( and .def_21 ( and .def_24 ( and .def_21 .def_532 ) ) ) ) 
.def_21 
49
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_530 ': '( not ( = end_0 1 ) ) ', '.def_532 ': '( not ( = ct_0 1 ) ) ', '.def_536 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
21
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_530 ': '( not ( = end_0 1 ) ) ', '.def_532 ': '( not ( = ct_0 1 ) ) ', '.def_536 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
.def_24 
41
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_530 ': '( not ( = end_0 1 ) ) ', '.def_532 ': '( not ( = ct_0 1 ) ) ', '.def_536 ': '( and .def_530 ( and ( = n_0 n_1 ) ( and .def_24 ( and ( = n_0 n_1 ) .def_532 ) ) ) ) '}
.def_530 
6
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_530 ': '( not ( = end_0 1 ) ) ', '.def_532 ': '( not ( = ct_0 1 ) ) ', '.def_536 ': '( and .def_530 ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_532 ) ) ) ) '}
.def_532 
86
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_530 ': '( not ( = end_0 1 ) ) ', '.def_532 ': '( not ( = ct_0 1 ) ) ', '.def_536 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_532 ) ) ) ) '}
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
subs1 ( and .def_530 ( and .def_21 ( and .def_24 ( and .def_21 .def_532 ) ) ) ) 
remove lets from formula
subs2 ( and .def_530 ( and .def_21 ( and .def_24 ( and .def_21 .def_532 ) ) ) ) 
.def_21 
49
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_530 ': '( not ( = end_0 1 ) ) ', '.def_532 ': '( not ( = ct_0 1 ) ) ', '.def_536 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
21
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_530 ': '( not ( = end_0 1 ) ) ', '.def_532 ': '( not ( = ct_0 1 ) ) ', '.def_536 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
.def_24 
41
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_530 ': '( not ( = end_0 1 ) ) ', '.def_532 ': '( not ( = ct_0 1 ) ) ', '.def_536 ': '( and .def_530 ( and ( = n_0 n_1 ) ( and .def_24 ( and ( = n_0 n_1 ) .def_532 ) ) ) ) '}
.def_530 
6
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_530 ': '( not ( = end_0 1 ) ) ', '.def_532 ': '( not ( = ct_0 1 ) ) ', '.def_536 ': '( and .def_530 ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_532 ) ) ) ) '}
.def_532 
86
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_530 ': '( not ( = end_0 1 ) ) ', '.def_532 ': '( not ( = ct_0 1 ) ) ', '.def_536 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_532 ) ) ) ) '}
subs1 ( not ( = end_0 1 ) ) 
remove lets from formula
subs2 ( not ( = end_0 1 ) ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( not ( = ct_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ct_0 1 ) ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
aux_vars_subs_dict  {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_530 ': '( not ( = end_0 1 ) ) ', '.def_532 ': '( not ( = ct_0 1 ) ) ', '.def_536 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
{19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 95: 105, 89: 107, 79: 109, 77: 111, 138: 150, 132: 152, 121: 154, 119: 156, 183: 194, 177: 196, 166: 198, 164: 200, 264: 287, 250: 289, 236: 291, 221: 293, 210: 295, 208: 297, 398: 410, 392: 412, 477: 489, 491: 513, 471: 515, 457: 517, 443: 519, 428: 521, 414: 523, 386: 525, 371: 527, 356: 529, 342: 531, 328: 533, 313: 535, 299: 537, 202: 539, 158: 541, 113: 543, 71: 545, 37: 547, 1: 549}
{20: 30, 10: 32, 8: 34, 60: 70, 54: 72, 44: 74, 42: 76, 103: 115, 97: 117, 86: 119, 84: 121, 148: 159, 142: 161, 131: 163, 129: 165, 229: 252, 215: 254, 201: 256, 186: 258, 175: 260, 173: 262, 363: 375, 357: 377, 442: 454, 456: 478, 436: 480, 422: 482, 408: 484, 393: 486, 379: 488, 351: 490, 336: 492, 321: 494, 307: 496, 293: 498, 278: 500, 264: 502, 167: 504, 123: 506, 78: 508, 36: 510, 2: 512}
{27: 37, 21: 39, 11: 41, 9: 43, 70: 82, 64: 84, 53: 86, 51: 88, 115: 126, 109: 128, 98: 130, 96: 132, 196: 219, 182: 221, 168: 223, 153: 225, 142: 227, 140: 229, 330: 342, 324: 344, 409: 421, 423: 445, 403: 447, 389: 449, 375: 451, 360: 453, 346: 455, 318: 457, 303: 459, 288: 461, 274: 463, 260: 465, 245: 467, 231: 469, 134: 471, 90: 473, 45: 475, 3: 477}
{29: 41, 23: 43, 12: 45, 10: 47, 74: 85, 68: 87, 57: 89, 55: 91, 155: 178, 141: 180, 127: 182, 112: 184, 101: 186, 99: 188, 289: 301, 283: 303, 368: 380, 382: 404, 362: 406, 348: 408, 334: 410, 319: 412, 305: 414, 277: 416, 262: 418, 247: 420, 233: 422, 219: 424, 204: 426, 190: 428, 93: 430, 49: 432, 4: 434}
{30: 41, 24: 43, 13: 45, 11: 47, 111: 134, 97: 136, 83: 138, 68: 140, 57: 142, 55: 144, 245: 257, 239: 259, 324: 336, 338: 360, 318: 362, 304: 364, 290: 366, 275: 368, 261: 370, 233: 372, 218: 374, 203: 376, 189: 378, 175: 380, 160: 382, 146: 384, 49: 386, 5: 388}
{68: 91, 54: 93, 40: 95, 25: 97, 14: 99, 12: 101, 202: 214, 196: 216, 281: 293, 295: 317, 275: 319, 261: 321, 247: 323, 232: 325, 218: 327, 190: 329, 175: 331, 160: 333, 146: 335, 132: 337, 117: 339, 103: 341, 6: 343}
remove lets from formula
final_formula  ( and .def_24 ( and .def_536 ( and .def_21 ( and .def_81 ( and .def_536 ( and .def_530 ( and ( not ( = end_1 1 ) ) ( and .def_24 ( and .def_532 ( and .def_81 ( and .def_21 ( and ( <= ct_1 0 ) ( and .def_21 .def_81 ) ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = h_0 1 ) ( and ( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) ( and ( = n_0 n_1 ) ( and ( not ( = h_1 1 ) ) ( and ( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) ( and ( not ( = end_0 1 ) ) ( and ( not ( = end_1 1 ) ) ( and ( = h_0 1 ) ( and ( not ( = ct_0 1 ) ) ( and ( not ( = h_1 1 ) ) ( and ( = n_0 n_1 ) ( and ( <= ct_1 0 ) ( and ( = n_0 n_1 ) ( not ( = h_1 1 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {26: 37, 20: 39, 9: 41, 7: 43, 64: 75, 53: 77, 51: 79, 106: 119, 100: 121, 89: 123, 87: 125, 146: 157, 135: 159, 133: 161, 188: 200, 182: 202, 171: 204, 169: 206, 272: 296, 257: 298, 242: 300, 227: 302, 216: 304, 214: 306, 343: 358, 446: 459, 440: 461, 492: 501, 503: 518, 488: 520, 479: 522, 469: 524, 550: 559, 561: 576, 546: 578, 537: 580, 532: 587, 595: 608, 647: 656, 658: 673, 643: 675, 634: 677, 625: 679, 610: 681, 589: 683, 526: 685, 463: 687, 434: 689, 419: 691, 404: 693, 389: 695, 374: 697, 360: 699, 337: 701, 323: 703, 308: 705, 208: 707, 163: 709, 127: 711, 81: 713, 45: 715, 1: 717}
aux_vars_first_occ_dict {'.def_148 ': 11, '.def_564 ': 55, '.def_566 ': 91, '.def_567 ': 137, '.def_569 ': 173, '.def_573 ': 218}
aux_vars_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_564 ': '( = hp_0 1 ) ', '.def_566 ': '( not ( = endp_0 1 ) ) ', '.def_567 ': '( = np_0 0 ) ', '.def_569 ': '( not ( = ctp_0 1 ) ) ', '.def_573 ': '( and .def_566 ( and .def_567 ( and .def_564 ( and .def_567 .def_569 ) ) ) ) '}
subs1 ( not ( = hp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = hp_1 1 ) ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( not ( = endp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endp_0 1 ) ) 
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( not ( = ctp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctp_0 1 ) ) 
subs1 ( and .def_566 ( and .def_567 ( and .def_564 ( and .def_567 .def_569 ) ) ) ) 
remove lets from formula
subs2 ( and .def_566 ( and .def_567 ( and .def_564 ( and .def_567 .def_569 ) ) ) ) 
.def_564 
36
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_564 ': '( = hp_0 1 ) ', '.def_566 ': '( not ( = endp_0 1 ) ) ', '.def_567 ': '( = np_0 0 ) ', '.def_569 ': '( not ( = ctp_0 1 ) ) ', '.def_573 ': '( and .def_566 ( and .def_567 ( and .def_564 ( and .def_567 .def_569 ) ) ) ) '}
.def_566 
6
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_564 ': '( = hp_0 1 ) ', '.def_566 ': '( not ( = endp_0 1 ) ) ', '.def_567 ': '( = np_0 0 ) ', '.def_569 ': '( not ( = ctp_0 1 ) ) ', '.def_573 ': '( and .def_566 ( and .def_567 ( and ( = hp_0 1 ) ( and .def_567 .def_569 ) ) ) ) '}
.def_567 
69
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_564 ': '( = hp_0 1 ) ', '.def_566 ': '( not ( = endp_0 1 ) ) ', '.def_567 ': '( = np_0 0 ) ', '.def_569 ': '( not ( = ctp_0 1 ) ) ', '.def_573 ': '( and ( not ( = endp_0 1 ) ) ( and .def_567 ( and ( = hp_0 1 ) ( and .def_567 .def_569 ) ) ) ) '}
35
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_564 ': '( = hp_0 1 ) ', '.def_566 ': '( not ( = endp_0 1 ) ) ', '.def_567 ': '( = np_0 0 ) ', '.def_569 ': '( not ( = ctp_0 1 ) ) ', '.def_573 ': '( and ( not ( = endp_0 1 ) ) ( and .def_567 ( and ( = hp_0 1 ) ( and .def_567 .def_569 ) ) ) ) '}
.def_569 
86
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_564 ': '( = hp_0 1 ) ', '.def_566 ': '( not ( = endp_0 1 ) ) ', '.def_567 ': '( = np_0 0 ) ', '.def_569 ': '( not ( = ctp_0 1 ) ) ', '.def_573 ': '( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) .def_569 ) ) ) ) '}
subs1 ( not ( = endp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endp_0 1 ) ) 
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( not ( = ctp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctp_0 1 ) ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( and .def_566 ( and .def_567 ( and .def_564 ( and .def_567 .def_569 ) ) ) ) 
remove lets from formula
subs2 ( and .def_566 ( and .def_567 ( and .def_564 ( and .def_567 .def_569 ) ) ) ) 
.def_564 
36
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_564 ': '( = hp_0 1 ) ', '.def_566 ': '( not ( = endp_0 1 ) ) ', '.def_567 ': '( = np_0 0 ) ', '.def_569 ': '( not ( = ctp_0 1 ) ) ', '.def_573 ': '( and .def_566 ( and .def_567 ( and .def_564 ( and .def_567 .def_569 ) ) ) ) '}
.def_566 
6
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_564 ': '( = hp_0 1 ) ', '.def_566 ': '( not ( = endp_0 1 ) ) ', '.def_567 ': '( = np_0 0 ) ', '.def_569 ': '( not ( = ctp_0 1 ) ) ', '.def_573 ': '( and .def_566 ( and .def_567 ( and ( = hp_0 1 ) ( and .def_567 .def_569 ) ) ) ) '}
.def_567 
69
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_564 ': '( = hp_0 1 ) ', '.def_566 ': '( not ( = endp_0 1 ) ) ', '.def_567 ': '( = np_0 0 ) ', '.def_569 ': '( not ( = ctp_0 1 ) ) ', '.def_573 ': '( and ( not ( = endp_0 1 ) ) ( and .def_567 ( and ( = hp_0 1 ) ( and .def_567 .def_569 ) ) ) ) '}
35
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_564 ': '( = hp_0 1 ) ', '.def_566 ': '( not ( = endp_0 1 ) ) ', '.def_567 ': '( = np_0 0 ) ', '.def_569 ': '( not ( = ctp_0 1 ) ) ', '.def_573 ': '( and ( not ( = endp_0 1 ) ) ( and .def_567 ( and ( = hp_0 1 ) ( and .def_567 .def_569 ) ) ) ) '}
.def_569 
86
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_564 ': '( = hp_0 1 ) ', '.def_566 ': '( not ( = endp_0 1 ) ) ', '.def_567 ': '( = np_0 0 ) ', '.def_569 ': '( not ( = ctp_0 1 ) ) ', '.def_573 ': '( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) .def_569 ) ) ) ) '}
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( and .def_566 ( and .def_567 ( and .def_564 ( and .def_567 .def_569 ) ) ) ) 
remove lets from formula
subs2 ( and .def_566 ( and .def_567 ( and .def_564 ( and .def_567 .def_569 ) ) ) ) 
.def_564 
36
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_564 ': '( = hp_0 1 ) ', '.def_566 ': '( not ( = endp_0 1 ) ) ', '.def_567 ': '( = np_0 0 ) ', '.def_569 ': '( not ( = ctp_0 1 ) ) ', '.def_573 ': '( and .def_566 ( and .def_567 ( and .def_564 ( and .def_567 .def_569 ) ) ) ) '}
.def_566 
6
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_564 ': '( = hp_0 1 ) ', '.def_566 ': '( not ( = endp_0 1 ) ) ', '.def_567 ': '( = np_0 0 ) ', '.def_569 ': '( not ( = ctp_0 1 ) ) ', '.def_573 ': '( and .def_566 ( and .def_567 ( and ( = hp_0 1 ) ( and .def_567 .def_569 ) ) ) ) '}
.def_567 
69
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_564 ': '( = hp_0 1 ) ', '.def_566 ': '( not ( = endp_0 1 ) ) ', '.def_567 ': '( = np_0 0 ) ', '.def_569 ': '( not ( = ctp_0 1 ) ) ', '.def_573 ': '( and ( not ( = endp_0 1 ) ) ( and .def_567 ( and ( = hp_0 1 ) ( and .def_567 .def_569 ) ) ) ) '}
35
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_564 ': '( = hp_0 1 ) ', '.def_566 ': '( not ( = endp_0 1 ) ) ', '.def_567 ': '( = np_0 0 ) ', '.def_569 ': '( not ( = ctp_0 1 ) ) ', '.def_573 ': '( and ( not ( = endp_0 1 ) ) ( and .def_567 ( and ( = hp_0 1 ) ( and .def_567 .def_569 ) ) ) ) '}
.def_569 
86
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_564 ': '( = hp_0 1 ) ', '.def_566 ': '( not ( = endp_0 1 ) ) ', '.def_567 ': '( = np_0 0 ) ', '.def_569 ': '( not ( = ctp_0 1 ) ) ', '.def_573 ': '( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) .def_569 ) ) ) ) '}
subs1 ( not ( = endp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endp_0 1 ) ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( not ( = ctp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctp_0 1 ) ) 
subs1 ( not ( = hp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = hp_1 1 ) ) 
subs1 ( not ( = hp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = hp_1 1 ) ) 
aux_vars_subs_dict  {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_564 ': '( = hp_0 1 ) ', '.def_566 ': '( not ( = endp_0 1 ) ) ', '.def_567 ': '( = np_0 0 ) ', '.def_569 ': '( not ( = ctp_0 1 ) ) ', '.def_573 ': '( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) ( not ( = ctp_0 1 ) ) ) ) ) ) '}
{26: 37, 20: 39, 9: 41, 7: 43, 64: 75, 53: 77, 51: 79, 106: 119, 100: 121, 89: 123, 87: 125, 146: 157, 135: 159, 133: 161, 188: 200, 182: 202, 171: 204, 169: 206, 272: 296, 257: 298, 242: 300, 227: 302, 216: 304, 214: 306, 343: 358, 446: 459, 440: 461, 492: 501, 503: 518, 488: 520, 479: 522, 469: 524, 550: 559, 561: 576, 546: 578, 537: 580, 532: 587, 595: 608, 647: 656, 658: 673, 643: 675, 634: 677, 625: 679, 610: 681, 589: 683, 526: 685, 463: 687, 434: 689, 419: 691, 404: 693, 389: 695, 374: 697, 360: 699, 337: 701, 323: 703, 308: 705, 208: 707, 163: 709, 127: 711, 81: 713, 45: 715, 1: 717}
{21: 32, 10: 34, 8: 36, 63: 76, 57: 78, 46: 80, 44: 82, 103: 114, 92: 116, 90: 118, 145: 157, 139: 159, 128: 161, 126: 163, 229: 253, 214: 255, 199: 257, 184: 259, 173: 261, 171: 263, 300: 315, 403: 416, 397: 418, 449: 458, 460: 475, 445: 477, 436: 479, 426: 481, 507: 516, 518: 533, 503: 535, 494: 537, 489: 544, 552: 565, 604: 613, 615: 630, 600: 632, 591: 634, 582: 636, 567: 638, 546: 640, 483: 642, 420: 644, 391: 646, 376: 648, 361: 650, 346: 652, 331: 654, 317: 656, 294: 658, 280: 660, 265: 662, 165: 664, 120: 666, 84: 668, 38: 670, 2: 672}
{28: 41, 22: 43, 11: 45, 9: 47, 68: 79, 57: 81, 55: 83, 110: 122, 104: 124, 93: 126, 91: 128, 194: 218, 179: 220, 164: 222, 149: 224, 138: 226, 136: 228, 265: 280, 368: 381, 362: 383, 414: 423, 425: 440, 410: 442, 401: 444, 391: 446, 472: 481, 483: 498, 468: 500, 459: 502, 454: 509, 517: 530, 569: 578, 580: 595, 565: 597, 556: 599, 547: 601, 532: 603, 511: 605, 448: 607, 385: 609, 356: 611, 341: 613, 326: 615, 311: 617, 296: 619, 282: 621, 259: 623, 245: 625, 230: 627, 130: 629, 85: 631, 49: 633, 3: 635}
{23: 34, 12: 36, 10: 38, 65: 77, 59: 79, 48: 81, 46: 83, 149: 173, 134: 175, 119: 177, 104: 179, 93: 181, 91: 183, 220: 235, 323: 336, 317: 338, 369: 378, 380: 395, 365: 397, 356: 399, 346: 401, 427: 436, 438: 453, 423: 455, 414: 457, 409: 464, 472: 485, 524: 533, 535: 550, 520: 552, 511: 554, 502: 556, 487: 558, 466: 560, 403: 562, 340: 564, 311: 566, 296: 568, 281: 570, 266: 572, 251: 574, 237: 576, 214: 578, 200: 580, 185: 582, 85: 584, 40: 586, 4: 588}
{30: 42, 24: 44, 13: 46, 11: 48, 114: 138, 99: 140, 84: 142, 69: 144, 58: 146, 56: 148, 185: 200, 288: 301, 282: 303, 334: 343, 345: 360, 330: 362, 321: 364, 311: 366, 392: 401, 403: 418, 388: 420, 379: 422, 374: 429, 437: 450, 489: 498, 500: 515, 485: 517, 476: 519, 467: 521, 452: 523, 431: 525, 368: 527, 305: 529, 276: 531, 261: 533, 246: 535, 231: 537, 216: 539, 202: 541, 179: 543, 165: 545, 150: 547, 50: 549, 5: 551}
{70: 94, 55: 96, 40: 98, 25: 100, 14: 102, 12: 104, 141: 156, 244: 257, 238: 259, 290: 299, 301: 316, 286: 318, 277: 320, 267: 322, 348: 357, 359: 374, 344: 376, 335: 378, 330: 385, 393: 406, 445: 454, 456: 471, 441: 473, 432: 475, 423: 477, 408: 479, 387: 481, 324: 483, 261: 485, 232: 487, 217: 489, 202: 491, 187: 493, 172: 495, 158: 497, 135: 499, 121: 501, 106: 503, 6: 505}
remove lets from formula
final_formula  ( and .def_564 ( or .def_573 ( and ( not .def_567 ) ( or .def_573 ( and .def_566 ( and .def_564 ( and .def_569 ( and .def_148 ( and ( not ( = endp_1 1 ) ) ( and ( <= np_1 ( to_int ( * ( / 1 10 ) ( to_real np_0 ) ) ) ) ( and ( <= ( to_int ( * ( / 1 10 ) ( to_real np_0 ) ) ) np_1 ) ( and ( <= ctp_1 1 ) ( and .def_148 ( = np_1 ( to_int ( * ( / 1 10 ) ( to_real np_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hp_0 1 ) ( or ( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) ( not ( = ctp_0 1 ) ) ) ) ) ) ( and ( not ( = np_0 0 ) ) ( or ( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) ( not ( = ctp_0 1 ) ) ) ) ) ) ( and ( not ( = endp_0 1 ) ) ( and ( = hp_0 1 ) ( and ( not ( = ctp_0 1 ) ) ( and ( not ( = hp_1 1 ) ) ( and ( not ( = endp_1 1 ) ) ( and ( <= np_1 ( to_int ( * ( / 1 10 ) ( to_real np_0 ) ) ) ) ( and ( <= ( to_int ( * ( / 1 10 ) ( to_real np_0 ) ) ) np_1 ) ( and ( <= ctp_1 1 ) ( and ( not ( = hp_1 1 ) ) ( = np_1 ( to_int ( * ( / 1 10 ) ( to_real np_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 32, 9: 34, 7: 36, 63: 77, 57: 79, 46: 81, 44: 83, 104: 116, 93: 118, 91: 120, 147: 160, 141: 162, 130: 164, 128: 166, 232: 256, 217: 258, 202: 260, 187: 262, 176: 264, 174: 266, 303: 318, 417: 426, 428: 444, 413: 446, 404: 448, 397: 450, 391: 452, 484: 493, 495: 511, 480: 513, 471: 515, 517: 523, 466: 525, 460: 527, 541: 555, 569: 581, 563: 583, 608: 617, 619: 635, 604: 637, 595: 639, 585: 641, 557: 643, 535: 645, 529: 647, 454: 649, 385: 651, 379: 653, 364: 655, 349: 657, 334: 659, 320: 661, 297: 663, 283: 665, 268: 667, 168: 669, 122: 671, 85: 673, 38: 675, 1: 677}
aux_vars_first_occ_dict {'.def_608 ': 11, '.def_610 ': 48, '.def_611 ': 95, '.def_613 ': 132, '.def_617 ': 178}
aux_vars_dict {'.def_608 ': '( = hpp_0 1 ) ', '.def_610 ': '( not ( = endpp_0 1 ) ) ', '.def_611 ': '( = npp_0 0 ) ', '.def_613 ': '( not ( = ctpp_0 1 ) ) ', '.def_617 ': '( and .def_610 ( and .def_611 ( and .def_608 ( and .def_611 .def_613 ) ) ) ) '}
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( not ( = endpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endpp_0 1 ) ) 
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( not ( = ctpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctpp_0 1 ) ) 
subs1 ( and .def_610 ( and .def_611 ( and .def_608 ( and .def_611 .def_613 ) ) ) ) 
remove lets from formula
subs2 ( and .def_610 ( and .def_611 ( and .def_608 ( and .def_611 .def_613 ) ) ) ) 
.def_608 
36
aux_vars_subs_dict {'.def_608 ': '( = hpp_0 1 ) ', '.def_610 ': '( not ( = endpp_0 1 ) ) ', '.def_611 ': '( = npp_0 0 ) ', '.def_613 ': '( not ( = ctpp_0 1 ) ) '}
.def_610 
6
aux_vars_subs_dict {'.def_608 ': '( = hpp_0 1 ) ', '.def_610 ': '( not ( = endpp_0 1 ) ) ', '.def_611 ': '( = npp_0 0 ) ', '.def_613 ': '( not ( = ctpp_0 1 ) ) ', '.def_617 ': '( and .def_610 ( and .def_611 ( and ( = hpp_0 1 ) ( and .def_611 .def_613 ) ) ) ) '}
.def_611 
71
aux_vars_subs_dict {'.def_608 ': '( = hpp_0 1 ) ', '.def_610 ': '( not ( = endpp_0 1 ) ) ', '.def_611 ': '( = npp_0 0 ) ', '.def_613 ': '( not ( = ctpp_0 1 ) ) ', '.def_617 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_611 ( and ( = hpp_0 1 ) ( and .def_611 .def_613 ) ) ) ) '}
36
aux_vars_subs_dict {'.def_608 ': '( = hpp_0 1 ) ', '.def_610 ': '( not ( = endpp_0 1 ) ) ', '.def_611 ': '( = npp_0 0 ) ', '.def_613 ': '( not ( = ctpp_0 1 ) ) ', '.def_617 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_611 ( and ( = hpp_0 1 ) ( and .def_611 .def_613 ) ) ) ) '}
.def_613 
90
aux_vars_subs_dict {'.def_608 ': '( = hpp_0 1 ) ', '.def_610 ': '( not ( = endpp_0 1 ) ) ', '.def_611 ': '( = npp_0 0 ) ', '.def_613 ': '( not ( = ctpp_0 1 ) ) ', '.def_617 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) .def_613 ) ) ) ) '}
subs1 ( not ( = endpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endpp_0 1 ) ) 
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( not ( = ctpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctpp_0 1 ) ) 
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( and .def_610 ( and .def_611 ( and .def_608 ( and .def_611 .def_613 ) ) ) ) 
remove lets from formula
subs2 ( and .def_610 ( and .def_611 ( and .def_608 ( and .def_611 .def_613 ) ) ) ) 
.def_608 
36
aux_vars_subs_dict {'.def_608 ': '( = hpp_0 1 ) ', '.def_610 ': '( not ( = endpp_0 1 ) ) ', '.def_611 ': '( = npp_0 0 ) ', '.def_613 ': '( not ( = ctpp_0 1 ) ) ', '.def_617 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) '}
.def_610 
6
aux_vars_subs_dict {'.def_608 ': '( = hpp_0 1 ) ', '.def_610 ': '( not ( = endpp_0 1 ) ) ', '.def_611 ': '( = npp_0 0 ) ', '.def_613 ': '( not ( = ctpp_0 1 ) ) ', '.def_617 ': '( and .def_610 ( and .def_611 ( and ( = hpp_0 1 ) ( and .def_611 .def_613 ) ) ) ) '}
.def_611 
71
aux_vars_subs_dict {'.def_608 ': '( = hpp_0 1 ) ', '.def_610 ': '( not ( = endpp_0 1 ) ) ', '.def_611 ': '( = npp_0 0 ) ', '.def_613 ': '( not ( = ctpp_0 1 ) ) ', '.def_617 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_611 ( and ( = hpp_0 1 ) ( and .def_611 .def_613 ) ) ) ) '}
36
aux_vars_subs_dict {'.def_608 ': '( = hpp_0 1 ) ', '.def_610 ': '( not ( = endpp_0 1 ) ) ', '.def_611 ': '( = npp_0 0 ) ', '.def_613 ': '( not ( = ctpp_0 1 ) ) ', '.def_617 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_611 ( and ( = hpp_0 1 ) ( and .def_611 .def_613 ) ) ) ) '}
.def_613 
90
aux_vars_subs_dict {'.def_608 ': '( = hpp_0 1 ) ', '.def_610 ': '( not ( = endpp_0 1 ) ) ', '.def_611 ': '( = npp_0 0 ) ', '.def_613 ': '( not ( = ctpp_0 1 ) ) ', '.def_617 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) .def_613 ) ) ) ) '}
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( and .def_610 ( and .def_611 ( and .def_608 ( and .def_611 .def_613 ) ) ) ) 
remove lets from formula
subs2 ( and .def_610 ( and .def_611 ( and .def_608 ( and .def_611 .def_613 ) ) ) ) 
.def_608 
36
aux_vars_subs_dict {'.def_608 ': '( = hpp_0 1 ) ', '.def_610 ': '( not ( = endpp_0 1 ) ) ', '.def_611 ': '( = npp_0 0 ) ', '.def_613 ': '( not ( = ctpp_0 1 ) ) ', '.def_617 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) '}
.def_610 
6
aux_vars_subs_dict {'.def_608 ': '( = hpp_0 1 ) ', '.def_610 ': '( not ( = endpp_0 1 ) ) ', '.def_611 ': '( = npp_0 0 ) ', '.def_613 ': '( not ( = ctpp_0 1 ) ) ', '.def_617 ': '( and .def_610 ( and .def_611 ( and ( = hpp_0 1 ) ( and .def_611 .def_613 ) ) ) ) '}
.def_611 
71
aux_vars_subs_dict {'.def_608 ': '( = hpp_0 1 ) ', '.def_610 ': '( not ( = endpp_0 1 ) ) ', '.def_611 ': '( = npp_0 0 ) ', '.def_613 ': '( not ( = ctpp_0 1 ) ) ', '.def_617 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_611 ( and ( = hpp_0 1 ) ( and .def_611 .def_613 ) ) ) ) '}
36
aux_vars_subs_dict {'.def_608 ': '( = hpp_0 1 ) ', '.def_610 ': '( not ( = endpp_0 1 ) ) ', '.def_611 ': '( = npp_0 0 ) ', '.def_613 ': '( not ( = ctpp_0 1 ) ) ', '.def_617 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_611 ( and ( = hpp_0 1 ) ( and .def_611 .def_613 ) ) ) ) '}
.def_613 
90
aux_vars_subs_dict {'.def_608 ': '( = hpp_0 1 ) ', '.def_610 ': '( not ( = endpp_0 1 ) ) ', '.def_611 ': '( = npp_0 0 ) ', '.def_613 ': '( not ( = ctpp_0 1 ) ) ', '.def_617 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) .def_613 ) ) ) ) '}
subs1 ( not ( = endpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endpp_0 1 ) ) 
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( not ( = ctpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctpp_0 1 ) ) 
aux_vars_subs_dict  {'.def_608 ': '( = hpp_0 1 ) ', '.def_610 ': '( not ( = endpp_0 1 ) ) ', '.def_611 ': '( = npp_0 0 ) ', '.def_613 ': '( not ( = ctpp_0 1 ) ) ', '.def_617 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) '}
{20: 32, 9: 34, 7: 36, 63: 77, 57: 79, 46: 81, 44: 83, 104: 116, 93: 118, 91: 120, 147: 160, 141: 162, 130: 164, 128: 166, 232: 256, 217: 258, 202: 260, 187: 262, 176: 264, 174: 266, 303: 318, 417: 426, 428: 444, 413: 446, 404: 448, 397: 450, 391: 452, 484: 493, 495: 511, 480: 513, 471: 515, 517: 523, 466: 525, 460: 527, 541: 555, 569: 581, 563: 583, 608: 617, 619: 635, 604: 637, 595: 639, 585: 641, 557: 643, 535: 645, 529: 647, 454: 649, 385: 651, 379: 653, 364: 655, 349: 657, 334: 659, 320: 661, 297: 663, 283: 665, 268: 667, 168: 669, 122: 671, 85: 673, 38: 675, 1: 677}
{27: 41, 21: 43, 10: 45, 8: 47, 68: 80, 57: 82, 55: 84, 111: 124, 105: 126, 94: 128, 92: 130, 196: 220, 181: 222, 166: 224, 151: 226, 140: 228, 138: 230, 267: 282, 381: 390, 392: 408, 377: 410, 368: 412, 361: 414, 355: 416, 448: 457, 459: 475, 444: 477, 435: 479, 481: 487, 430: 489, 424: 491, 505: 519, 533: 545, 527: 547, 572: 581, 583: 599, 568: 601, 559: 603, 549: 605, 521: 607, 499: 609, 493: 611, 418: 613, 349: 615, 343: 617, 328: 619, 313: 621, 298: 623, 284: 625, 261: 627, 247: 629, 232: 631, 132: 633, 86: 635, 49: 637, 2: 639}
{22: 34, 11: 36, 9: 38, 65: 78, 59: 80, 48: 82, 46: 84, 150: 174, 135: 176, 120: 178, 105: 180, 94: 182, 92: 184, 221: 236, 335: 344, 346: 362, 331: 364, 322: 366, 315: 368, 309: 370, 402: 411, 413: 429, 398: 431, 389: 433, 435: 441, 384: 443, 378: 445, 459: 473, 487: 499, 481: 501, 526: 535, 537: 553, 522: 555, 513: 557, 503: 559, 475: 561, 453: 563, 447: 565, 372: 567, 303: 569, 297: 571, 282: 573, 267: 575, 252: 577, 238: 579, 215: 581, 201: 583, 186: 585, 86: 587, 40: 589, 3: 591}
{29: 42, 23: 44, 12: 46, 10: 48, 114: 138, 99: 140, 84: 142, 69: 144, 58: 146, 56: 148, 185: 200, 299: 308, 310: 326, 295: 328, 286: 330, 279: 332, 273: 334, 366: 375, 377: 393, 362: 395, 353: 397, 399: 405, 348: 407, 342: 409, 423: 437, 451: 463, 445: 465, 490: 499, 501: 517, 486: 519, 477: 521, 467: 523, 439: 525, 417: 527, 411: 529, 336: 531, 267: 533, 261: 535, 246: 537, 231: 539, 216: 541, 202: 543, 179: 545, 165: 547, 150: 549, 50: 551, 4: 553}
{69: 93, 54: 95, 39: 97, 24: 99, 13: 101, 11: 103, 140: 155, 254: 263, 265: 281, 250: 283, 241: 285, 234: 287, 228: 289, 321: 330, 332: 348, 317: 350, 308: 352, 354: 360, 303: 362, 297: 364, 378: 392, 406: 418, 400: 420, 445: 454, 456: 472, 441: 474, 432: 476, 422: 478, 394: 480, 372: 482, 366: 484, 291: 486, 222: 488, 216: 490, 201: 492, 186: 494, 171: 496, 157: 498, 134: 500, 120: 502, 105: 504, 5: 506}
remove lets from formula
final_formula  ( and .def_608 ( or .def_617 ( and ( not .def_611 ) ( or .def_617 ( and .def_610 ( and .def_608 ( and .def_613 ( not ( and ( not ( <= 1 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ) ( and ( not ( <= ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ( - 1 ) ) ) ( not ( and ( <= ctpp_1 1 ) ( and ( not ( = hpp_1 1 ) ) ( = npp_1 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hpp_0 1 ) ( or ( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) ( and ( not ( = npp_0 0 ) ) ( or ( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) ( and ( not ( = endpp_0 1 ) ) ( and ( = hpp_0 1 ) ( and ( not ( = ctpp_0 1 ) ) ( not ( and ( not ( <= 1 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ) ( and ( not ( <= ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ( - 1 ) ) ) ( not ( and ( <= ctpp_1 1 ) ( and ( not ( = hpp_1 1 ) ) ( = npp_1 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 33, 9: 35, 7: 37, 58: 71, 47: 73, 45: 75, 102: 117, 96: 119, 85: 121, 83: 123, 150: 164, 144: 166, 133: 168, 131: 170, 236: 260, 221: 262, 206: 264, 191: 266, 180: 268, 178: 270, 307: 322, 421: 430, 432: 449, 417: 451, 408: 453, 401: 455, 395: 457, 489: 498, 500: 517, 485: 519, 476: 521, 523: 529, 471: 531, 465: 533, 560: 569, 571: 588, 556: 590, 547: 592, 541: 594, 602: 617, 596: 619, 535: 621, 459: 623, 389: 625, 383: 627, 368: 629, 353: 631, 338: 633, 324: 635, 301: 637, 287: 639, 272: 641, 172: 643, 125: 645, 77: 647, 39: 649, 1: 651}
aux_vars_first_occ_dict {'.def_239 ': 11, '.def_240 ': 49, '.def_663 ': 87, '.def_665 ': 135, '.def_669 ': 182}
aux_vars_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_663 ': '( not ( = endppp_0 1 ) ) ', '.def_665 ': '( not ( = ctppp_0 1 ) ) ', '.def_669 ': '( and .def_663 ( and .def_240 ( and .def_239 ( and .def_240 .def_665 ) ) ) ) '}
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( not ( = endppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endppp_0 1 ) ) 
subs1 ( not ( = ctppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctppp_0 1 ) ) 
subs1 ( and .def_663 ( and .def_240 ( and .def_239 ( and .def_240 .def_665 ) ) ) ) 
remove lets from formula
subs2 ( and .def_663 ( and .def_240 ( and .def_239 ( and .def_240 .def_665 ) ) ) ) 
.def_239 
36
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_663 ': '( not ( = endppp_0 1 ) ) ', '.def_665 ': '( not ( = ctppp_0 1 ) ) '}
.def_240 
57
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_663 ': '( not ( = endppp_0 1 ) ) ', '.def_665 ': '( not ( = ctppp_0 1 ) ) ', '.def_669 ': '( and .def_663 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_665 ) ) ) ) '}
21
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_663 ': '( not ( = endppp_0 1 ) ) ', '.def_665 ': '( not ( = ctppp_0 1 ) ) ', '.def_669 ': '( and .def_663 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_665 ) ) ) ) '}
.def_663 
6
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_663 ': '( not ( = endppp_0 1 ) ) ', '.def_665 ': '( not ( = ctppp_0 1 ) ) ', '.def_669 ': '( and .def_663 ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_665 ) ) ) ) '}
.def_665 
94
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_663 ': '( not ( = endppp_0 1 ) ) ', '.def_665 ': '( not ( = ctppp_0 1 ) ) ', '.def_669 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_665 ) ) ) ) '}
subs1 ( not ( = endppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endppp_0 1 ) ) 
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( not ( = ctppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctppp_0 1 ) ) 
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( and .def_663 ( and .def_240 ( and .def_239 ( and .def_240 .def_665 ) ) ) ) 
remove lets from formula
subs2 ( and .def_663 ( and .def_240 ( and .def_239 ( and .def_240 .def_665 ) ) ) ) 
.def_239 
36
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_663 ': '( not ( = endppp_0 1 ) ) ', '.def_665 ': '( not ( = ctppp_0 1 ) ) ', '.def_669 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) '}
.def_240 
57
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_663 ': '( not ( = endppp_0 1 ) ) ', '.def_665 ': '( not ( = ctppp_0 1 ) ) ', '.def_669 ': '( and .def_663 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_665 ) ) ) ) '}
21
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_663 ': '( not ( = endppp_0 1 ) ) ', '.def_665 ': '( not ( = ctppp_0 1 ) ) ', '.def_669 ': '( and .def_663 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_665 ) ) ) ) '}
.def_663 
6
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_663 ': '( not ( = endppp_0 1 ) ) ', '.def_665 ': '( not ( = ctppp_0 1 ) ) ', '.def_669 ': '( and .def_663 ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_665 ) ) ) ) '}
.def_665 
94
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_663 ': '( not ( = endppp_0 1 ) ) ', '.def_665 ': '( not ( = ctppp_0 1 ) ) ', '.def_669 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_665 ) ) ) ) '}
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( and .def_663 ( and .def_240 ( and .def_239 ( and .def_240 .def_665 ) ) ) ) 
remove lets from formula
subs2 ( and .def_663 ( and .def_240 ( and .def_239 ( and .def_240 .def_665 ) ) ) ) 
.def_239 
36
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_663 ': '( not ( = endppp_0 1 ) ) ', '.def_665 ': '( not ( = ctppp_0 1 ) ) ', '.def_669 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) '}
.def_240 
57
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_663 ': '( not ( = endppp_0 1 ) ) ', '.def_665 ': '( not ( = ctppp_0 1 ) ) ', '.def_669 ': '( and .def_663 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_665 ) ) ) ) '}
21
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_663 ': '( not ( = endppp_0 1 ) ) ', '.def_665 ': '( not ( = ctppp_0 1 ) ) ', '.def_669 ': '( and .def_663 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_665 ) ) ) ) '}
.def_663 
6
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_663 ': '( not ( = endppp_0 1 ) ) ', '.def_665 ': '( not ( = ctppp_0 1 ) ) ', '.def_669 ': '( and .def_663 ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_665 ) ) ) ) '}
.def_665 
94
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_663 ': '( not ( = endppp_0 1 ) ) ', '.def_665 ': '( not ( = ctppp_0 1 ) ) ', '.def_669 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_665 ) ) ) ) '}
subs1 ( not ( = endppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endppp_0 1 ) ) 
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( not ( = ctppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctppp_0 1 ) ) 
aux_vars_subs_dict  {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_663 ': '( not ( = endppp_0 1 ) ) ', '.def_665 ': '( not ( = ctppp_0 1 ) ) ', '.def_669 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) '}
{20: 33, 9: 35, 7: 37, 58: 71, 47: 73, 45: 75, 102: 117, 96: 119, 85: 121, 83: 123, 150: 164, 144: 166, 133: 168, 131: 170, 236: 260, 221: 262, 206: 264, 191: 266, 180: 268, 178: 270, 307: 322, 421: 430, 432: 449, 417: 451, 408: 453, 401: 455, 395: 457, 489: 498, 500: 517, 485: 519, 476: 521, 523: 529, 471: 531, 465: 533, 560: 569, 571: 588, 556: 590, 547: 592, 541: 594, 602: 617, 596: 619, 535: 621, 459: 623, 389: 625, 383: 627, 368: 629, 353: 631, 338: 633, 324: 635, 301: 637, 287: 639, 272: 641, 172: 643, 125: 645, 77: 647, 39: 649, 1: 651}
{21: 34, 10: 36, 8: 38, 65: 80, 59: 82, 48: 84, 46: 86, 113: 127, 107: 129, 96: 131, 94: 133, 199: 223, 184: 225, 169: 227, 154: 229, 143: 231, 141: 233, 270: 285, 384: 393, 395: 412, 380: 414, 371: 416, 364: 418, 358: 420, 452: 461, 463: 480, 448: 482, 439: 484, 486: 492, 434: 494, 428: 496, 523: 532, 534: 551, 519: 553, 510: 555, 504: 557, 565: 580, 559: 582, 498: 584, 422: 586, 352: 588, 346: 590, 331: 592, 316: 594, 301: 596, 287: 598, 264: 600, 250: 602, 235: 604, 135: 606, 88: 608, 40: 610, 2: 612}
{28: 43, 22: 45, 11: 47, 9: 49, 76: 90, 70: 92, 59: 94, 57: 96, 162: 186, 147: 188, 132: 190, 117: 192, 106: 194, 104: 196, 233: 248, 347: 356, 358: 375, 343: 377, 334: 379, 327: 381, 321: 383, 415: 424, 426: 443, 411: 445, 402: 447, 449: 455, 397: 457, 391: 459, 486: 495, 497: 514, 482: 516, 473: 518, 467: 520, 528: 543, 522: 545, 461: 547, 385: 549, 315: 551, 309: 553, 294: 555, 279: 557, 264: 559, 250: 561, 227: 563, 213: 565, 198: 567, 98: 569, 51: 571, 3: 573}
{29: 43, 23: 45, 12: 47, 10: 49, 115: 139, 100: 141, 85: 143, 70: 145, 59: 147, 57: 149, 186: 201, 300: 309, 311: 328, 296: 330, 287: 332, 280: 334, 274: 336, 368: 377, 379: 396, 364: 398, 355: 400, 402: 408, 350: 410, 344: 412, 439: 448, 450: 467, 435: 469, 426: 471, 420: 473, 481: 496, 475: 498, 414: 500, 338: 502, 268: 504, 262: 506, 247: 508, 232: 510, 217: 512, 203: 514, 180: 516, 166: 518, 151: 520, 51: 522, 4: 524}
{69: 93, 54: 95, 39: 97, 24: 99, 13: 101, 11: 103, 140: 155, 254: 263, 265: 282, 250: 284, 241: 286, 234: 288, 228: 290, 322: 331, 333: 350, 318: 352, 309: 354, 356: 362, 304: 364, 298: 366, 393: 402, 404: 421, 389: 423, 380: 425, 374: 427, 435: 450, 429: 452, 368: 454, 292: 456, 222: 458, 216: 460, 201: 462, 186: 464, 171: 466, 157: 468, 134: 470, 120: 472, 105: 474, 5: 476}
remove lets from formula
final_formula  ( and .def_239 ( or .def_669 ( and ( not .def_240 ) ( or .def_669 ( and .def_663 ( and .def_239 ( and .def_665 ( not ( and ( not ( <= 1 ( to_int ( * ( / 1 10 ) ( to_real nppp_0 ) ) ) ) ) ( and ( not ( <= ( to_int ( * ( / 1 10 ) ( to_real nppp_0 ) ) ) ( - 1 ) ) ) ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real nppp_0 ) ) ) ) ( not ( <= ctppp_1 1 ) ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hppp_0 1 ) ( or ( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) ( and ( not ( = nppp_0 0 ) ) ( or ( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) ( and ( not ( = endppp_0 1 ) ) ( and ( = hppp_0 1 ) ( and ( not ( = ctppp_0 1 ) ) ( not ( and ( not ( <= 1 ( to_int ( * ( / 1 10 ) ( to_real nppp_0 ) ) ) ) ) ( and ( not ( <= ( to_int ( * ( / 1 10 ) ( to_real nppp_0 ) ) ) ( - 1 ) ) ) ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real nppp_0 ) ) ) ) ( not ( <= ctppp_1 1 ) ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 34, 9: 36, 7: 38, 59: 73, 48: 75, 46: 77, 98: 113, 87: 115, 85: 117, 154: 169, 139: 171, 124: 173, 216: 232, 246: 261, 240: 263, 290: 296, 277: 298, 271: 300, 323: 339, 317: 341, 302: 343, 265: 345, 234: 347, 211: 349, 196: 351, 190: 353, 175: 355, 119: 357, 79: 359, 40: 361, 1: 363}
aux_vars_first_occ_dict {'.def_306 ': 11, '.def_307 ': 50, '.def_709 ': 89}
aux_vars_dict {'.def_306 ': '( = hpppp_0 1 ) ', '.def_307 ': '( = npppp_0 0 ) ', '.def_709 ': '( = ctpppp_0 1 ) '}
subs1 ( = hpppp_0 1 ) 
remove lets from formula
subs2 ( = hpppp_0 1 ) 
subs1 ( = npppp_0 0 ) 
remove lets from formula
subs2 ( = npppp_0 0 ) 
subs1 ( = ctpppp_0 1 ) 
remove lets from formula
subs2 ( = ctpppp_0 1 ) 
subs1 ( = hpppp_0 1 ) 
remove lets from formula
subs2 ( = hpppp_0 1 ) 
subs1 ( = npppp_0 0 ) 
remove lets from formula
subs2 ( = npppp_0 0 ) 
subs1 ( = ctpppp_0 1 ) 
remove lets from formula
subs2 ( = ctpppp_0 1 ) 
subs1 ( = hpppp_0 1 ) 
remove lets from formula
subs2 ( = hpppp_0 1 ) 
subs1 ( = ctpppp_0 1 ) 
remove lets from formula
subs2 ( = ctpppp_0 1 ) 
subs1 ( = npppp_0 0 ) 
remove lets from formula
subs2 ( = npppp_0 0 ) 
aux_vars_subs_dict  {'.def_306 ': '( = hpppp_0 1 ) ', '.def_307 ': '( = npppp_0 0 ) ', '.def_709 ': '( = ctpppp_0 1 ) '}
{20: 34, 9: 36, 7: 38, 59: 73, 48: 75, 46: 77, 98: 113, 87: 115, 85: 117, 154: 169, 139: 171, 124: 173, 216: 232, 246: 261, 240: 263, 290: 296, 277: 298, 271: 300, 323: 339, 317: 341, 302: 343, 265: 345, 234: 347, 211: 349, 196: 351, 190: 353, 175: 355, 119: 357, 79: 359, 40: 361, 1: 363}
{21: 35, 10: 37, 8: 39, 60: 75, 49: 77, 47: 79, 116: 131, 101: 133, 86: 135, 178: 194, 208: 223, 202: 225, 252: 258, 239: 260, 233: 262, 285: 301, 279: 303, 264: 305, 227: 307, 196: 309, 173: 311, 158: 313, 152: 315, 137: 317, 81: 319, 41: 321, 2: 323}
{22: 37, 11: 39, 9: 41, 78: 93, 63: 95, 48: 97, 140: 156, 170: 185, 164: 187, 214: 220, 201: 222, 195: 224, 247: 263, 241: 265, 226: 267, 189: 269, 158: 271, 135: 273, 120: 275, 114: 277, 99: 279, 43: 281, 3: 283}
remove lets from formula
final_formula  ( or ( and .def_306 ( and .def_307 ( not .def_709 ) ) ) ( and .def_306 ( not ( and .def_709 ( or ( = endpppp_0 1 ) ( and ( not ( <= 1 npppp_0 ) ) ( and ( not ( <= npppp_0 ( - 1 ) ) ) ( and .def_307 ( not ( <= ctpppp_1 1 ) ) ) ) ) ) ) ) ) ) 
[' ( or ( and ( = hpppp_0 1 ) ( and ( = npppp_0 0 ) ( not ( = ctpppp_0 1 ) ) ) ) ( and ( = hpppp_0 1 ) ( not ( and ( = ctpppp_0 1 ) ( or ( = endpppp_0 1 ) ( and ( not ( <= 1 npppp_0 ) ) ( and ( not ( <= npppp_0 ( - 1 ) ) ) ( and ( = npppp_0 0 ) ( not ( <= ctpppp_1 1 ) ) ) ) ) ) ) ) ) ) ']
new_pred_smt_format ['(declare-rel pred_0_synth_msat_4 (Int Int Int Int))\n (rule (=>  ( <= (rel ct 1) 1  ) (pred_0_synth_msat_4 end n h ct)))']
['(declare-rel pred_0_synth_msat_4 (Int Int Int Int))\n (rule (=>  ( <= (rel ct 1) 1  ) (pred_0_synth_msat_4 end n h ct)))']
Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied.
Pre-processing time:	0.074884 
Solver time:	10.44711
Total time:	10.521994000000001
Iteration count:	30
Predicate count:	13
Successfully added new predicate to input file. !
Start next refinement loop: True



PDSC: Verifying ./Benchmarks_msat/puzzle_2.smt2
Namespace(file='./Benchmarks_msat/puzzle_2.smt2', log=False, msat=True, property=None, qe=False, sygus=False)
In if ladder True
Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[0]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[0]


24 SMT queries performed.
before complete_trace: [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[0]


after complete_trace [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[-1]


-----------------------------------check_spur-------------------------------
final init cond And(And(0 == ct_0, end_0 == 0),
    And(0 == ct_1, end_1 == 0),
    And(n_0 == n_1, h_0 == 1, h_1 == 0))
Initial concrete state  {'n_1': 1, 'ct_1_1': False, 'ct_0_1': True, 'abs_end_1': False, 'abs_h_1': False, 'ct_1_0': False, 'ct_0_0': True, 'abs_end_0': False, 'abs_h_0': True, 'pred_0_synth_msat_4': True, 'pred_0_synth_msat_3': False, 'pred_0_synth_msat_2': True, 'pred_0_synth_msat_1': False, 'ct0_eq_ct1': True, 'n0_eq_n1': True, 'h_1': 0, 'h_0': 1, 'n_0': 1, 'end_1': 0, 'ct_1': 0, 'end_0': 0, 'ct_0': 0}
Next concrete state {'end_1': 0, 'n_1': 0, 'ct_1': 1, 'ct_0': 0, 'h_0': 1, 'n_0': 1, 'end_0': 0, 'h_1': 0}
Next concrete state {'end_1': 1, 'n_1': 0, 'ct_1': 1, 'ct_0': 0, 'h_0': 1, 'n_0': 1, 'end_0': 0, 'h_1': 0}
Writing an smt file to be run using mathsat
Checking output from mathsat 5
hi
paren_dict {19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 95: 105, 89: 107, 79: 109, 77: 111, 138: 150, 132: 152, 121: 154, 119: 156, 183: 194, 177: 196, 166: 198, 164: 200, 264: 287, 250: 289, 236: 291, 221: 293, 210: 295, 208: 297, 398: 410, 392: 412, 471: 483, 457: 485, 442: 487, 428: 489, 414: 491, 386: 493, 371: 495, 356: 497, 342: 499, 328: 501, 313: 503, 299: 505, 202: 507, 158: 509, 113: 511, 71: 513, 37: 515, 1: 517}
aux_vars_first_occ_dict {'.def_21 ': 11, '.def_24 ': 47, '.def_81 ': 81, '.def_532 ': 123, '.def_534 ': 168, '.def_538 ': 212}
aux_vars_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_532 ': '( not ( = end_0 1 ) ) ', '.def_534 ': '( not ( = ct_0 1 ) ) ', '.def_538 ': '( and .def_532 ( and .def_21 ( and .def_24 ( and .def_21 .def_534 ) ) ) ) '}
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
subs1 ( not ( = end_0 1 ) ) 
remove lets from formula
subs2 ( not ( = end_0 1 ) ) 
subs1 ( not ( = ct_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ct_0 1 ) ) 
subs1 ( and .def_532 ( and .def_21 ( and .def_24 ( and .def_21 .def_534 ) ) ) ) 
remove lets from formula
subs2 ( and .def_532 ( and .def_21 ( and .def_24 ( and .def_21 .def_534 ) ) ) ) 
.def_21 
49
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_532 ': '( not ( = end_0 1 ) ) ', '.def_534 ': '( not ( = ct_0 1 ) ) '}
21
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_532 ': '( not ( = end_0 1 ) ) ', '.def_534 ': '( not ( = ct_0 1 ) ) '}
.def_24 
41
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_532 ': '( not ( = end_0 1 ) ) ', '.def_534 ': '( not ( = ct_0 1 ) ) ', '.def_538 ': '( and .def_532 ( and ( = n_0 n_1 ) ( and .def_24 ( and ( = n_0 n_1 ) .def_534 ) ) ) ) '}
.def_532 
6
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_532 ': '( not ( = end_0 1 ) ) ', '.def_534 ': '( not ( = ct_0 1 ) ) ', '.def_538 ': '( and .def_532 ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_534 ) ) ) ) '}
.def_534 
86
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_532 ': '( not ( = end_0 1 ) ) ', '.def_534 ': '( not ( = ct_0 1 ) ) ', '.def_538 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_534 ) ) ) ) '}
subs1 ( not ( = end_0 1 ) ) 
remove lets from formula
subs2 ( not ( = end_0 1 ) ) 
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( not ( = ct_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ct_0 1 ) ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( and .def_532 ( and .def_21 ( and .def_24 ( and .def_21 .def_534 ) ) ) ) 
remove lets from formula
subs2 ( and .def_532 ( and .def_21 ( and .def_24 ( and .def_21 .def_534 ) ) ) ) 
.def_21 
49
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_532 ': '( not ( = end_0 1 ) ) ', '.def_534 ': '( not ( = ct_0 1 ) ) ', '.def_538 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
21
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_532 ': '( not ( = end_0 1 ) ) ', '.def_534 ': '( not ( = ct_0 1 ) ) ', '.def_538 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
.def_24 
41
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_532 ': '( not ( = end_0 1 ) ) ', '.def_534 ': '( not ( = ct_0 1 ) ) ', '.def_538 ': '( and .def_532 ( and ( = n_0 n_1 ) ( and .def_24 ( and ( = n_0 n_1 ) .def_534 ) ) ) ) '}
.def_532 
6
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_532 ': '( not ( = end_0 1 ) ) ', '.def_534 ': '( not ( = ct_0 1 ) ) ', '.def_538 ': '( and .def_532 ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_534 ) ) ) ) '}
.def_534 
86
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_532 ': '( not ( = end_0 1 ) ) ', '.def_534 ': '( not ( = ct_0 1 ) ) ', '.def_538 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_534 ) ) ) ) '}
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
subs1 ( and .def_532 ( and .def_21 ( and .def_24 ( and .def_21 .def_534 ) ) ) ) 
remove lets from formula
subs2 ( and .def_532 ( and .def_21 ( and .def_24 ( and .def_21 .def_534 ) ) ) ) 
.def_21 
49
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_532 ': '( not ( = end_0 1 ) ) ', '.def_534 ': '( not ( = ct_0 1 ) ) ', '.def_538 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
21
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_532 ': '( not ( = end_0 1 ) ) ', '.def_534 ': '( not ( = ct_0 1 ) ) ', '.def_538 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
.def_24 
41
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_532 ': '( not ( = end_0 1 ) ) ', '.def_534 ': '( not ( = ct_0 1 ) ) ', '.def_538 ': '( and .def_532 ( and ( = n_0 n_1 ) ( and .def_24 ( and ( = n_0 n_1 ) .def_534 ) ) ) ) '}
.def_532 
6
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_532 ': '( not ( = end_0 1 ) ) ', '.def_534 ': '( not ( = ct_0 1 ) ) ', '.def_538 ': '( and .def_532 ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_534 ) ) ) ) '}
.def_534 
86
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_532 ': '( not ( = end_0 1 ) ) ', '.def_534 ': '( not ( = ct_0 1 ) ) ', '.def_538 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_534 ) ) ) ) '}
subs1 ( not ( = end_0 1 ) ) 
remove lets from formula
subs2 ( not ( = end_0 1 ) ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
subs1 ( not ( = ct_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ct_0 1 ) ) 
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
aux_vars_subs_dict  {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_532 ': '( not ( = end_0 1 ) ) ', '.def_534 ': '( not ( = ct_0 1 ) ) ', '.def_538 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
{19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 95: 105, 89: 107, 79: 109, 77: 111, 138: 150, 132: 152, 121: 154, 119: 156, 183: 194, 177: 196, 166: 198, 164: 200, 264: 287, 250: 289, 236: 291, 221: 293, 210: 295, 208: 297, 398: 410, 392: 412, 471: 483, 457: 485, 442: 487, 428: 489, 414: 491, 386: 493, 371: 495, 356: 497, 342: 499, 328: 501, 313: 503, 299: 505, 202: 507, 158: 509, 113: 511, 71: 513, 37: 515, 1: 517}
{20: 30, 10: 32, 8: 34, 60: 70, 54: 72, 44: 74, 42: 76, 103: 115, 97: 117, 86: 119, 84: 121, 148: 159, 142: 161, 131: 163, 129: 165, 229: 252, 215: 254, 201: 256, 186: 258, 175: 260, 173: 262, 363: 375, 357: 377, 436: 448, 422: 450, 407: 452, 393: 454, 379: 456, 351: 458, 336: 460, 321: 462, 307: 464, 293: 466, 278: 468, 264: 470, 167: 472, 123: 474, 78: 476, 36: 478, 2: 480}
{27: 37, 21: 39, 11: 41, 9: 43, 70: 82, 64: 84, 53: 86, 51: 88, 115: 126, 109: 128, 98: 130, 96: 132, 196: 219, 182: 221, 168: 223, 153: 225, 142: 227, 140: 229, 330: 342, 324: 344, 403: 415, 389: 417, 374: 419, 360: 421, 346: 423, 318: 425, 303: 427, 288: 429, 274: 431, 260: 433, 245: 435, 231: 437, 134: 439, 90: 441, 45: 443, 3: 445}
{29: 41, 23: 43, 12: 45, 10: 47, 74: 85, 68: 87, 57: 89, 55: 91, 155: 178, 141: 180, 127: 182, 112: 184, 101: 186, 99: 188, 289: 301, 283: 303, 362: 374, 348: 376, 333: 378, 319: 380, 305: 382, 277: 384, 262: 386, 247: 388, 233: 390, 219: 392, 204: 394, 190: 396, 93: 398, 49: 400, 4: 402}
{30: 41, 24: 43, 13: 45, 11: 47, 111: 134, 97: 136, 83: 138, 68: 140, 57: 142, 55: 144, 245: 257, 239: 259, 318: 330, 304: 332, 289: 334, 275: 336, 261: 338, 233: 340, 218: 342, 203: 344, 189: 346, 175: 348, 160: 350, 146: 352, 49: 354, 5: 356}
{68: 91, 54: 93, 40: 95, 25: 97, 14: 99, 12: 101, 202: 214, 196: 216, 275: 287, 261: 289, 246: 291, 232: 293, 218: 295, 190: 297, 175: 299, 160: 301, 146: 303, 132: 305, 117: 307, 103: 309, 6: 311}
remove lets from formula
final_formula  ( and .def_24 ( and .def_538 ( and .def_21 ( and .def_81 ( and .def_538 ( and .def_532 ( and ( not ( = end_1 1 ) ) ( and .def_24 ( and .def_81 ( and .def_534 ( and .def_21 ( <= ct_1 0 ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = h_0 1 ) ( and ( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) ( and ( = n_0 n_1 ) ( and ( not ( = h_1 1 ) ) ( and ( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) ( and ( not ( = end_0 1 ) ) ( and ( not ( = end_1 1 ) ) ( and ( = h_0 1 ) ( and ( not ( = h_1 1 ) ) ( and ( not ( = ct_0 1 ) ) ( and ( = n_0 n_1 ) ( <= ct_1 0 ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {26: 37, 20: 39, 9: 41, 7: 43, 64: 75, 53: 77, 51: 79, 106: 119, 100: 121, 89: 123, 87: 125, 146: 157, 135: 159, 133: 161, 188: 200, 182: 202, 171: 204, 169: 206, 272: 296, 257: 298, 242: 300, 227: 302, 216: 304, 214: 306, 343: 358, 431: 444, 425: 446, 506: 515, 517: 532, 502: 534, 493: 536, 484: 538, 540: 553, 478: 555, 463: 557, 448: 559, 419: 561, 404: 563, 389: 565, 374: 567, 360: 569, 337: 571, 323: 573, 308: 575, 208: 577, 163: 579, 127: 581, 81: 583, 45: 585, 1: 587}
aux_vars_first_occ_dict {'.def_148 ': 11, '.def_565 ': 55, '.def_567 ': 91, '.def_568 ': 137, '.def_570 ': 173, '.def_574 ': 218}
aux_vars_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_565 ': '( = hp_0 1 ) ', '.def_567 ': '( not ( = endp_0 1 ) ) ', '.def_568 ': '( = np_0 0 ) ', '.def_570 ': '( not ( = ctp_0 1 ) ) ', '.def_574 ': '( and .def_567 ( and .def_568 ( and .def_565 ( and .def_568 .def_570 ) ) ) ) '}
subs1 ( not ( = hp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = hp_1 1 ) ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( not ( = endp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endp_0 1 ) ) 
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( not ( = ctp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctp_0 1 ) ) 
subs1 ( and .def_567 ( and .def_568 ( and .def_565 ( and .def_568 .def_570 ) ) ) ) 
remove lets from formula
subs2 ( and .def_567 ( and .def_568 ( and .def_565 ( and .def_568 .def_570 ) ) ) ) 
.def_565 
36
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_565 ': '( = hp_0 1 ) ', '.def_567 ': '( not ( = endp_0 1 ) ) ', '.def_568 ': '( = np_0 0 ) ', '.def_570 ': '( not ( = ctp_0 1 ) ) ', '.def_574 ': '( and .def_567 ( and .def_568 ( and .def_565 ( and .def_568 .def_570 ) ) ) ) '}
.def_567 
6
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_565 ': '( = hp_0 1 ) ', '.def_567 ': '( not ( = endp_0 1 ) ) ', '.def_568 ': '( = np_0 0 ) ', '.def_570 ': '( not ( = ctp_0 1 ) ) ', '.def_574 ': '( and .def_567 ( and .def_568 ( and ( = hp_0 1 ) ( and .def_568 .def_570 ) ) ) ) '}
.def_568 
69
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_565 ': '( = hp_0 1 ) ', '.def_567 ': '( not ( = endp_0 1 ) ) ', '.def_568 ': '( = np_0 0 ) ', '.def_570 ': '( not ( = ctp_0 1 ) ) ', '.def_574 ': '( and ( not ( = endp_0 1 ) ) ( and .def_568 ( and ( = hp_0 1 ) ( and .def_568 .def_570 ) ) ) ) '}
35
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_565 ': '( = hp_0 1 ) ', '.def_567 ': '( not ( = endp_0 1 ) ) ', '.def_568 ': '( = np_0 0 ) ', '.def_570 ': '( not ( = ctp_0 1 ) ) ', '.def_574 ': '( and ( not ( = endp_0 1 ) ) ( and .def_568 ( and ( = hp_0 1 ) ( and .def_568 .def_570 ) ) ) ) '}
.def_570 
86
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_565 ': '( = hp_0 1 ) ', '.def_567 ': '( not ( = endp_0 1 ) ) ', '.def_568 ': '( = np_0 0 ) ', '.def_570 ': '( not ( = ctp_0 1 ) ) ', '.def_574 ': '( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) .def_570 ) ) ) ) '}
subs1 ( not ( = endp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endp_0 1 ) ) 
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( not ( = ctp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctp_0 1 ) ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( and .def_567 ( and .def_568 ( and .def_565 ( and .def_568 .def_570 ) ) ) ) 
remove lets from formula
subs2 ( and .def_567 ( and .def_568 ( and .def_565 ( and .def_568 .def_570 ) ) ) ) 
.def_565 
36
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_565 ': '( = hp_0 1 ) ', '.def_567 ': '( not ( = endp_0 1 ) ) ', '.def_568 ': '( = np_0 0 ) ', '.def_570 ': '( not ( = ctp_0 1 ) ) ', '.def_574 ': '( and .def_567 ( and .def_568 ( and .def_565 ( and .def_568 .def_570 ) ) ) ) '}
.def_567 
6
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_565 ': '( = hp_0 1 ) ', '.def_567 ': '( not ( = endp_0 1 ) ) ', '.def_568 ': '( = np_0 0 ) ', '.def_570 ': '( not ( = ctp_0 1 ) ) ', '.def_574 ': '( and .def_567 ( and .def_568 ( and ( = hp_0 1 ) ( and .def_568 .def_570 ) ) ) ) '}
.def_568 
69
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_565 ': '( = hp_0 1 ) ', '.def_567 ': '( not ( = endp_0 1 ) ) ', '.def_568 ': '( = np_0 0 ) ', '.def_570 ': '( not ( = ctp_0 1 ) ) ', '.def_574 ': '( and ( not ( = endp_0 1 ) ) ( and .def_568 ( and ( = hp_0 1 ) ( and .def_568 .def_570 ) ) ) ) '}
35
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_565 ': '( = hp_0 1 ) ', '.def_567 ': '( not ( = endp_0 1 ) ) ', '.def_568 ': '( = np_0 0 ) ', '.def_570 ': '( not ( = ctp_0 1 ) ) ', '.def_574 ': '( and ( not ( = endp_0 1 ) ) ( and .def_568 ( and ( = hp_0 1 ) ( and .def_568 .def_570 ) ) ) ) '}
.def_570 
86
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_565 ': '( = hp_0 1 ) ', '.def_567 ': '( not ( = endp_0 1 ) ) ', '.def_568 ': '( = np_0 0 ) ', '.def_570 ': '( not ( = ctp_0 1 ) ) ', '.def_574 ': '( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) .def_570 ) ) ) ) '}
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( and .def_567 ( and .def_568 ( and .def_565 ( and .def_568 .def_570 ) ) ) ) 
remove lets from formula
subs2 ( and .def_567 ( and .def_568 ( and .def_565 ( and .def_568 .def_570 ) ) ) ) 
.def_565 
36
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_565 ': '( = hp_0 1 ) ', '.def_567 ': '( not ( = endp_0 1 ) ) ', '.def_568 ': '( = np_0 0 ) ', '.def_570 ': '( not ( = ctp_0 1 ) ) ', '.def_574 ': '( and .def_567 ( and .def_568 ( and .def_565 ( and .def_568 .def_570 ) ) ) ) '}
.def_567 
6
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_565 ': '( = hp_0 1 ) ', '.def_567 ': '( not ( = endp_0 1 ) ) ', '.def_568 ': '( = np_0 0 ) ', '.def_570 ': '( not ( = ctp_0 1 ) ) ', '.def_574 ': '( and .def_567 ( and .def_568 ( and ( = hp_0 1 ) ( and .def_568 .def_570 ) ) ) ) '}
.def_568 
69
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_565 ': '( = hp_0 1 ) ', '.def_567 ': '( not ( = endp_0 1 ) ) ', '.def_568 ': '( = np_0 0 ) ', '.def_570 ': '( not ( = ctp_0 1 ) ) ', '.def_574 ': '( and ( not ( = endp_0 1 ) ) ( and .def_568 ( and ( = hp_0 1 ) ( and .def_568 .def_570 ) ) ) ) '}
35
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_565 ': '( = hp_0 1 ) ', '.def_567 ': '( not ( = endp_0 1 ) ) ', '.def_568 ': '( = np_0 0 ) ', '.def_570 ': '( not ( = ctp_0 1 ) ) ', '.def_574 ': '( and ( not ( = endp_0 1 ) ) ( and .def_568 ( and ( = hp_0 1 ) ( and .def_568 .def_570 ) ) ) ) '}
.def_570 
86
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_565 ': '( = hp_0 1 ) ', '.def_567 ': '( not ( = endp_0 1 ) ) ', '.def_568 ': '( = np_0 0 ) ', '.def_570 ': '( not ( = ctp_0 1 ) ) ', '.def_574 ': '( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) .def_570 ) ) ) ) '}
subs1 ( not ( = endp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endp_0 1 ) ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( not ( = hp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = hp_1 1 ) ) 
subs1 ( not ( = hp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = hp_1 1 ) ) 
subs1 ( not ( = ctp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctp_0 1 ) ) 
aux_vars_subs_dict  {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_565 ': '( = hp_0 1 ) ', '.def_567 ': '( not ( = endp_0 1 ) ) ', '.def_568 ': '( = np_0 0 ) ', '.def_570 ': '( not ( = ctp_0 1 ) ) ', '.def_574 ': '( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) ( not ( = ctp_0 1 ) ) ) ) ) ) '}
{26: 37, 20: 39, 9: 41, 7: 43, 64: 75, 53: 77, 51: 79, 106: 119, 100: 121, 89: 123, 87: 125, 146: 157, 135: 159, 133: 161, 188: 200, 182: 202, 171: 204, 169: 206, 272: 296, 257: 298, 242: 300, 227: 302, 216: 304, 214: 306, 343: 358, 431: 444, 425: 446, 506: 515, 517: 532, 502: 534, 493: 536, 484: 538, 540: 553, 478: 555, 463: 557, 448: 559, 419: 561, 404: 563, 389: 565, 374: 567, 360: 569, 337: 571, 323: 573, 308: 575, 208: 577, 163: 579, 127: 581, 81: 583, 45: 585, 1: 587}
{21: 32, 10: 34, 8: 36, 63: 76, 57: 78, 46: 80, 44: 82, 103: 114, 92: 116, 90: 118, 145: 157, 139: 159, 128: 161, 126: 163, 229: 253, 214: 255, 199: 257, 184: 259, 173: 261, 171: 263, 300: 315, 388: 401, 382: 403, 463: 472, 474: 489, 459: 491, 450: 493, 441: 495, 497: 510, 435: 512, 420: 514, 405: 516, 376: 518, 361: 520, 346: 522, 331: 524, 317: 526, 294: 528, 280: 530, 265: 532, 165: 534, 120: 536, 84: 538, 38: 540, 2: 542}
{28: 41, 22: 43, 11: 45, 9: 47, 68: 79, 57: 81, 55: 83, 110: 122, 104: 124, 93: 126, 91: 128, 194: 218, 179: 220, 164: 222, 149: 224, 138: 226, 136: 228, 265: 280, 353: 366, 347: 368, 428: 437, 439: 454, 424: 456, 415: 458, 406: 460, 462: 475, 400: 477, 385: 479, 370: 481, 341: 483, 326: 485, 311: 487, 296: 489, 282: 491, 259: 493, 245: 495, 230: 497, 130: 499, 85: 501, 49: 503, 3: 505}
{23: 34, 12: 36, 10: 38, 65: 77, 59: 79, 48: 81, 46: 83, 149: 173, 134: 175, 119: 177, 104: 179, 93: 181, 91: 183, 220: 235, 308: 321, 302: 323, 383: 392, 394: 409, 379: 411, 370: 413, 361: 415, 417: 430, 355: 432, 340: 434, 325: 436, 296: 438, 281: 440, 266: 442, 251: 444, 237: 446, 214: 448, 200: 450, 185: 452, 85: 454, 40: 456, 4: 458}
{30: 42, 24: 44, 13: 46, 11: 48, 114: 138, 99: 140, 84: 142, 69: 144, 58: 146, 56: 148, 185: 200, 273: 286, 267: 288, 348: 357, 359: 374, 344: 376, 335: 378, 326: 380, 382: 395, 320: 397, 305: 399, 290: 401, 261: 403, 246: 405, 231: 407, 216: 409, 202: 411, 179: 413, 165: 415, 150: 417, 50: 419, 5: 421}
{70: 94, 55: 96, 40: 98, 25: 100, 14: 102, 12: 104, 141: 156, 229: 242, 223: 244, 304: 313, 315: 330, 300: 332, 291: 334, 282: 336, 338: 351, 276: 353, 261: 355, 246: 357, 217: 359, 202: 361, 187: 363, 172: 365, 158: 367, 135: 369, 121: 371, 106: 373, 6: 375}
remove lets from formula
final_formula  ( and .def_565 ( or .def_574 ( and ( not .def_568 ) ( or .def_574 ( and .def_567 ( and .def_565 ( and .def_148 ( and ( not ( = endp_1 1 ) ) ( and .def_148 ( and .def_570 ( and ( = np_1 ( to_int ( * ( / 1 10 ) ( to_real np_0 ) ) ) ) ( <= ctp_1 1 ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hp_0 1 ) ( or ( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) ( not ( = ctp_0 1 ) ) ) ) ) ) ( and ( not ( = np_0 0 ) ) ( or ( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) ( not ( = ctp_0 1 ) ) ) ) ) ) ( and ( not ( = endp_0 1 ) ) ( and ( = hp_0 1 ) ( and ( not ( = hp_1 1 ) ) ( and ( not ( = endp_1 1 ) ) ( and ( not ( = hp_1 1 ) ) ( and ( not ( = ctp_0 1 ) ) ( and ( = np_1 ( to_int ( * ( / 1 10 ) ( to_real np_0 ) ) ) ) ( <= ctp_1 1 ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 32, 9: 34, 7: 36, 63: 77, 57: 79, 46: 81, 44: 83, 104: 116, 93: 118, 91: 120, 147: 160, 141: 162, 130: 164, 128: 166, 232: 256, 217: 258, 202: 260, 187: 262, 176: 264, 174: 266, 303: 318, 376: 388, 370: 390, 438: 447, 449: 465, 434: 467, 425: 469, 419: 471, 508: 517, 519: 535, 504: 537, 495: 539, 485: 541, 543: 557, 479: 559, 473: 561, 413: 563, 407: 565, 392: 567, 364: 569, 349: 571, 334: 573, 320: 575, 297: 577, 283: 579, 268: 581, 168: 583, 122: 585, 85: 587, 38: 589, 1: 591}
aux_vars_first_occ_dict {'.def_609 ': 11, '.def_611 ': 48, '.def_612 ': 95, '.def_614 ': 132, '.def_618 ': 178}
aux_vars_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) '}
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( not ( = endpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endpp_0 1 ) ) 
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( not ( = ctpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctpp_0 1 ) ) 
subs1 ( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) 
remove lets from formula
subs2 ( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) 
.def_609 
36
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) '}
.def_611 
6
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and .def_611 ( and .def_612 ( and ( = hpp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
.def_612 
71
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_612 ( and ( = hpp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
36
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_612 ( and ( = hpp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
.def_614 
90
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) .def_614 ) ) ) ) '}
subs1 ( not ( = endpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endpp_0 1 ) ) 
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( not ( = ctpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctpp_0 1 ) ) 
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) 
remove lets from formula
subs2 ( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) 
.def_609 
36
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) '}
.def_611 
6
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and .def_611 ( and .def_612 ( and ( = hpp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
.def_612 
71
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_612 ( and ( = hpp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
36
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_612 ( and ( = hpp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
.def_614 
90
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) .def_614 ) ) ) ) '}
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) 
remove lets from formula
subs2 ( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) 
.def_609 
36
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) '}
.def_611 
6
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and .def_611 ( and .def_612 ( and ( = hpp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
.def_612 
71
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_612 ( and ( = hpp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
36
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_612 ( and ( = hpp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
.def_614 
90
aux_vars_subs_dict {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) .def_614 ) ) ) ) '}
subs1 ( not ( = endpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endpp_0 1 ) ) 
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( not ( = ctpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctpp_0 1 ) ) 
aux_vars_subs_dict  {'.def_609 ': '( = hpp_0 1 ) ', '.def_611 ': '( not ( = endpp_0 1 ) ) ', '.def_612 ': '( = npp_0 0 ) ', '.def_614 ': '( not ( = ctpp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) '}
{20: 32, 9: 34, 7: 36, 63: 77, 57: 79, 46: 81, 44: 83, 104: 116, 93: 118, 91: 120, 147: 160, 141: 162, 130: 164, 128: 166, 232: 256, 217: 258, 202: 260, 187: 262, 176: 264, 174: 266, 303: 318, 376: 388, 370: 390, 438: 447, 449: 465, 434: 467, 425: 469, 419: 471, 508: 517, 519: 535, 504: 537, 495: 539, 485: 541, 543: 557, 479: 559, 473: 561, 413: 563, 407: 565, 392: 567, 364: 569, 349: 571, 334: 573, 320: 575, 297: 577, 283: 579, 268: 581, 168: 583, 122: 585, 85: 587, 38: 589, 1: 591}
{27: 41, 21: 43, 10: 45, 8: 47, 68: 80, 57: 82, 55: 84, 111: 124, 105: 126, 94: 128, 92: 130, 196: 220, 181: 222, 166: 224, 151: 226, 140: 228, 138: 230, 267: 282, 340: 352, 334: 354, 402: 411, 413: 429, 398: 431, 389: 433, 383: 435, 472: 481, 483: 499, 468: 501, 459: 503, 449: 505, 507: 521, 443: 523, 437: 525, 377: 527, 371: 529, 356: 531, 328: 533, 313: 535, 298: 537, 284: 539, 261: 541, 247: 543, 232: 545, 132: 547, 86: 549, 49: 551, 2: 553}
{22: 34, 11: 36, 9: 38, 65: 78, 59: 80, 48: 82, 46: 84, 150: 174, 135: 176, 120: 178, 105: 180, 94: 182, 92: 184, 221: 236, 294: 306, 288: 308, 356: 365, 367: 383, 352: 385, 343: 387, 337: 389, 426: 435, 437: 453, 422: 455, 413: 457, 403: 459, 461: 475, 397: 477, 391: 479, 331: 481, 325: 483, 310: 485, 282: 487, 267: 489, 252: 491, 238: 493, 215: 495, 201: 497, 186: 499, 86: 501, 40: 503, 3: 505}
{29: 42, 23: 44, 12: 46, 10: 48, 114: 138, 99: 140, 84: 142, 69: 144, 58: 146, 56: 148, 185: 200, 258: 270, 252: 272, 320: 329, 331: 347, 316: 349, 307: 351, 301: 353, 390: 399, 401: 417, 386: 419, 377: 421, 367: 423, 425: 439, 361: 441, 355: 443, 295: 445, 289: 447, 274: 449, 246: 451, 231: 453, 216: 455, 202: 457, 179: 459, 165: 461, 150: 463, 50: 465, 4: 467}
{69: 93, 54: 95, 39: 97, 24: 99, 13: 101, 11: 103, 140: 155, 213: 225, 207: 227, 275: 284, 286: 302, 271: 304, 262: 306, 256: 308, 345: 354, 356: 372, 341: 374, 332: 376, 322: 378, 380: 394, 316: 396, 310: 398, 250: 400, 244: 402, 229: 404, 201: 406, 186: 408, 171: 410, 157: 412, 134: 414, 120: 416, 105: 418, 5: 420}
remove lets from formula
final_formula  ( and .def_609 ( or .def_618 ( and ( not .def_612 ) ( or .def_618 ( and .def_611 ( and .def_609 ( and ( not ( = hpp_1 1 ) ) ( and .def_614 ( not ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ( not ( and ( = npp_1 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ( <= ctpp_1 1 ) ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hpp_0 1 ) ( or ( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) ( and ( not ( = npp_0 0 ) ) ( or ( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) ( and ( not ( = endpp_0 1 ) ) ( and ( = hpp_0 1 ) ( and ( not ( = hpp_1 1 ) ) ( and ( not ( = ctpp_0 1 ) ) ( not ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ( not ( and ( = npp_1 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ( <= ctpp_1 1 ) ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 33, 9: 35, 7: 37, 58: 71, 47: 73, 45: 75, 102: 117, 96: 119, 85: 121, 83: 123, 150: 164, 144: 166, 133: 168, 131: 170, 236: 260, 221: 262, 206: 264, 191: 266, 180: 268, 178: 270, 307: 322, 414: 423, 425: 442, 410: 444, 401: 446, 395: 448, 456: 471, 450: 473, 389: 475, 383: 477, 368: 479, 353: 481, 338: 483, 324: 485, 301: 487, 287: 489, 272: 491, 172: 493, 125: 495, 77: 497, 39: 499, 1: 501}
aux_vars_first_occ_dict {'.def_239 ': 11, '.def_240 ': 49, '.def_655 ': 87, '.def_657 ': 135, '.def_661 ': 182}
aux_vars_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_655 ': '( not ( = endppp_0 1 ) ) ', '.def_657 ': '( not ( = ctppp_0 1 ) ) ', '.def_661 ': '( and .def_655 ( and .def_240 ( and .def_239 ( and .def_240 .def_657 ) ) ) ) '}
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( not ( = endppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endppp_0 1 ) ) 
subs1 ( not ( = ctppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctppp_0 1 ) ) 
subs1 ( and .def_655 ( and .def_240 ( and .def_239 ( and .def_240 .def_657 ) ) ) ) 
remove lets from formula
subs2 ( and .def_655 ( and .def_240 ( and .def_239 ( and .def_240 .def_657 ) ) ) ) 
.def_239 
36
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_655 ': '( not ( = endppp_0 1 ) ) ', '.def_657 ': '( not ( = ctppp_0 1 ) ) '}
.def_240 
57
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_655 ': '( not ( = endppp_0 1 ) ) ', '.def_657 ': '( not ( = ctppp_0 1 ) ) ', '.def_661 ': '( and .def_655 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_657 ) ) ) ) '}
21
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_655 ': '( not ( = endppp_0 1 ) ) ', '.def_657 ': '( not ( = ctppp_0 1 ) ) ', '.def_661 ': '( and .def_655 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_657 ) ) ) ) '}
.def_655 
6
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_655 ': '( not ( = endppp_0 1 ) ) ', '.def_657 ': '( not ( = ctppp_0 1 ) ) ', '.def_661 ': '( and .def_655 ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_657 ) ) ) ) '}
.def_657 
94
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_655 ': '( not ( = endppp_0 1 ) ) ', '.def_657 ': '( not ( = ctppp_0 1 ) ) ', '.def_661 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_657 ) ) ) ) '}
subs1 ( not ( = endppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endppp_0 1 ) ) 
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( not ( = ctppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctppp_0 1 ) ) 
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( and .def_655 ( and .def_240 ( and .def_239 ( and .def_240 .def_657 ) ) ) ) 
remove lets from formula
subs2 ( and .def_655 ( and .def_240 ( and .def_239 ( and .def_240 .def_657 ) ) ) ) 
.def_239 
36
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_655 ': '( not ( = endppp_0 1 ) ) ', '.def_657 ': '( not ( = ctppp_0 1 ) ) ', '.def_661 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) '}
.def_240 
57
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_655 ': '( not ( = endppp_0 1 ) ) ', '.def_657 ': '( not ( = ctppp_0 1 ) ) ', '.def_661 ': '( and .def_655 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_657 ) ) ) ) '}
21
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_655 ': '( not ( = endppp_0 1 ) ) ', '.def_657 ': '( not ( = ctppp_0 1 ) ) ', '.def_661 ': '( and .def_655 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_657 ) ) ) ) '}
.def_655 
6
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_655 ': '( not ( = endppp_0 1 ) ) ', '.def_657 ': '( not ( = ctppp_0 1 ) ) ', '.def_661 ': '( and .def_655 ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_657 ) ) ) ) '}
.def_657 
94
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_655 ': '( not ( = endppp_0 1 ) ) ', '.def_657 ': '( not ( = ctppp_0 1 ) ) ', '.def_661 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_657 ) ) ) ) '}
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( and .def_655 ( and .def_240 ( and .def_239 ( and .def_240 .def_657 ) ) ) ) 
remove lets from formula
subs2 ( and .def_655 ( and .def_240 ( and .def_239 ( and .def_240 .def_657 ) ) ) ) 
.def_239 
36
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_655 ': '( not ( = endppp_0 1 ) ) ', '.def_657 ': '( not ( = ctppp_0 1 ) ) ', '.def_661 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) '}
.def_240 
57
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_655 ': '( not ( = endppp_0 1 ) ) ', '.def_657 ': '( not ( = ctppp_0 1 ) ) ', '.def_661 ': '( and .def_655 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_657 ) ) ) ) '}
21
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_655 ': '( not ( = endppp_0 1 ) ) ', '.def_657 ': '( not ( = ctppp_0 1 ) ) ', '.def_661 ': '( and .def_655 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_657 ) ) ) ) '}
.def_655 
6
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_655 ': '( not ( = endppp_0 1 ) ) ', '.def_657 ': '( not ( = ctppp_0 1 ) ) ', '.def_661 ': '( and .def_655 ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_657 ) ) ) ) '}
.def_657 
94
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_655 ': '( not ( = endppp_0 1 ) ) ', '.def_657 ': '( not ( = ctppp_0 1 ) ) ', '.def_661 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_657 ) ) ) ) '}
subs1 ( not ( = endppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endppp_0 1 ) ) 
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( not ( = ctppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctppp_0 1 ) ) 
aux_vars_subs_dict  {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_655 ': '( not ( = endppp_0 1 ) ) ', '.def_657 ': '( not ( = ctppp_0 1 ) ) ', '.def_661 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) '}
{20: 33, 9: 35, 7: 37, 58: 71, 47: 73, 45: 75, 102: 117, 96: 119, 85: 121, 83: 123, 150: 164, 144: 166, 133: 168, 131: 170, 236: 260, 221: 262, 206: 264, 191: 266, 180: 268, 178: 270, 307: 322, 414: 423, 425: 442, 410: 444, 401: 446, 395: 448, 456: 471, 450: 473, 389: 475, 383: 477, 368: 479, 353: 481, 338: 483, 324: 485, 301: 487, 287: 489, 272: 491, 172: 493, 125: 495, 77: 497, 39: 499, 1: 501}
{21: 34, 10: 36, 8: 38, 65: 80, 59: 82, 48: 84, 46: 86, 113: 127, 107: 129, 96: 131, 94: 133, 199: 223, 184: 225, 169: 227, 154: 229, 143: 231, 141: 233, 270: 285, 377: 386, 388: 405, 373: 407, 364: 409, 358: 411, 419: 434, 413: 436, 352: 438, 346: 440, 331: 442, 316: 444, 301: 446, 287: 448, 264: 450, 250: 452, 235: 454, 135: 456, 88: 458, 40: 460, 2: 462}
{28: 43, 22: 45, 11: 47, 9: 49, 76: 90, 70: 92, 59: 94, 57: 96, 162: 186, 147: 188, 132: 190, 117: 192, 106: 194, 104: 196, 233: 248, 340: 349, 351: 368, 336: 370, 327: 372, 321: 374, 382: 397, 376: 399, 315: 401, 309: 403, 294: 405, 279: 407, 264: 409, 250: 411, 227: 413, 213: 415, 198: 417, 98: 419, 51: 421, 3: 423}
{29: 43, 23: 45, 12: 47, 10: 49, 115: 139, 100: 141, 85: 143, 70: 145, 59: 147, 57: 149, 186: 201, 293: 302, 304: 321, 289: 323, 280: 325, 274: 327, 335: 350, 329: 352, 268: 354, 262: 356, 247: 358, 232: 360, 217: 362, 203: 364, 180: 366, 166: 368, 151: 370, 51: 372, 4: 374}
{69: 93, 54: 95, 39: 97, 24: 99, 13: 101, 11: 103, 140: 155, 247: 256, 258: 275, 243: 277, 234: 279, 228: 281, 289: 304, 283: 306, 222: 308, 216: 310, 201: 312, 186: 314, 171: 316, 157: 318, 134: 320, 120: 322, 105: 324, 5: 326}
remove lets from formula
final_formula  ( and .def_239 ( or .def_661 ( and ( not .def_240 ) ( or .def_661 ( and .def_655 ( and .def_239 ( and .def_657 ( not ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real nppp_0 ) ) ) ) ( not ( <= ctppp_1 1 ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hppp_0 1 ) ( or ( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) ( and ( not ( = nppp_0 0 ) ) ( or ( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) ( and ( not ( = endppp_0 1 ) ) ( and ( = hppp_0 1 ) ( and ( not ( = ctppp_0 1 ) ) ( not ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real nppp_0 ) ) ) ) ( not ( <= ctppp_1 1 ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 34, 9: 36, 7: 38, 59: 73, 48: 75, 46: 77, 98: 113, 87: 115, 85: 117, 154: 169, 139: 171, 124: 173, 216: 232, 255: 271, 249: 273, 234: 275, 211: 277, 196: 279, 190: 281, 175: 283, 119: 285, 79: 287, 40: 289, 1: 291}
aux_vars_first_occ_dict {'.def_306 ': 11, '.def_307 ': 50, '.def_690 ': 89}
aux_vars_dict {'.def_306 ': '( = hpppp_0 1 ) ', '.def_307 ': '( = npppp_0 0 ) ', '.def_690 ': '( = ctpppp_0 1 ) '}
subs1 ( = hpppp_0 1 ) 
remove lets from formula
subs2 ( = hpppp_0 1 ) 
subs1 ( = npppp_0 0 ) 
remove lets from formula
subs2 ( = npppp_0 0 ) 
subs1 ( = ctpppp_0 1 ) 
remove lets from formula
subs2 ( = ctpppp_0 1 ) 
subs1 ( = hpppp_0 1 ) 
remove lets from formula
subs2 ( = hpppp_0 1 ) 
subs1 ( = npppp_0 0 ) 
remove lets from formula
subs2 ( = npppp_0 0 ) 
subs1 ( = ctpppp_0 1 ) 
remove lets from formula
subs2 ( = ctpppp_0 1 ) 
subs1 ( = hpppp_0 1 ) 
remove lets from formula
subs2 ( = hpppp_0 1 ) 
subs1 ( = ctpppp_0 1 ) 
remove lets from formula
subs2 ( = ctpppp_0 1 ) 
subs1 ( = npppp_0 0 ) 
remove lets from formula
subs2 ( = npppp_0 0 ) 
aux_vars_subs_dict  {'.def_306 ': '( = hpppp_0 1 ) ', '.def_307 ': '( = npppp_0 0 ) ', '.def_690 ': '( = ctpppp_0 1 ) '}
{20: 34, 9: 36, 7: 38, 59: 73, 48: 75, 46: 77, 98: 113, 87: 115, 85: 117, 154: 169, 139: 171, 124: 173, 216: 232, 255: 271, 249: 273, 234: 275, 211: 277, 196: 279, 190: 281, 175: 283, 119: 285, 79: 287, 40: 289, 1: 291}
{21: 35, 10: 37, 8: 39, 60: 75, 49: 77, 47: 79, 116: 131, 101: 133, 86: 135, 178: 194, 217: 233, 211: 235, 196: 237, 173: 239, 158: 241, 152: 243, 137: 245, 81: 247, 41: 249, 2: 251}
{22: 37, 11: 39, 9: 41, 78: 93, 63: 95, 48: 97, 140: 156, 179: 195, 173: 197, 158: 199, 135: 201, 120: 203, 114: 205, 99: 207, 43: 209, 3: 211}
remove lets from formula
final_formula  ( or ( and .def_306 ( and .def_307 ( not .def_690 ) ) ) ( and .def_306 ( not ( and .def_690 ( or ( = endpppp_0 1 ) ( and .def_307 ( not ( <= ctpppp_1 1 ) ) ) ) ) ) ) ) 
[' ( or ( and ( = hpppp_0 1 ) ( and ( = npppp_0 0 ) ( not ( = ctpppp_0 1 ) ) ) ) ( and ( = hpppp_0 1 ) ( not ( and ( = ctpppp_0 1 ) ( or ( = endpppp_0 1 ) ( and ( = npppp_0 0 ) ( not ( <= ctpppp_1 1 ) ) ) ) ) ) ) ) ']
new_pred_smt_format []
Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[0]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_0_0, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
abs_end_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[0]


24 SMT queries performed.
after complete_trace [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[-1]


------------------------check_spuriousness-------------------------------
SEARCHING A CONCRETE CEX TRACE FROM ABOVE ABSTRACT CEX: 
--------------------------------------------------
Initial concrete state :  {'n_1': 1, 'ct_1_1': False, 'ct_0_1': True, 'abs_end_1': False, 'abs_h_1': False, 'ct_1_0': False, 'ct_0_0': True, 'abs_end_0': False, 'abs_h_0': True, 'pred_0_synth_msat_4': True, 'pred_0_synth_msat_3': False, 'pred_0_synth_msat_2': True, 'pred_0_synth_msat_1': False, 'ct0_eq_ct1': True, 'n0_eq_n1': True, 'h_1': 0, 'h_0': 1, 'n_0': 1, 'end_1': 0, 'ct_1': 0, 'end_0': 0, 'ct_0': 0}



Next concrete state :  {'end_1': 0, 'n_1': 0, 'ct_1': 1, 'ct_0': 0, 'h_0': 1, 'n_0': 1, 'end_0': 0, 'h_1': 0}



Next concrete state :  {'end_1': 1, 'n_1': 0, 'ct_1': 1, 'ct_0': 0, 'h_0': 1, 'n_0': 1, 'end_0': 0, 'h_1': 0}



Is the trace spurious?  True
Discovering predicate from a_src, a_tgt, c_src, c_tgt to eliminate spurious trace
----------------------pred_disc-------------------
Running quantifier elimination: 
New predicate is  (let ((a!1 (and (not (<= nU0 (- 1)))

                (not (= nU0 0))

                (not (= nU0 (div nU1 10)))

                (not (= nU0 nU1))

                (not (= nU1 0)))))

  (not a!1))

Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied. 24 14 True ['(declare-rel p_synth_5 (Int Int Int Int))\n (rule (=>   (and  (not  (<= (rel n 0)  (- 1 ) ) ) (not  (= (rel n 0) 0 ) ) (not  (= (rel n 0)  (div (rel n 1) 10 ) ) ) (not  (= (rel n 0) (rel n 1) ) ) (not  (= (rel n 1) 0 ) ) ) (p_synth_5 end n h ct)))']
Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied.
Pre-processing time:	0.077661 
Solver time:	18.158639
Total time:	18.2363
Iteration count:	24
Predicate count:	14
Successfully added new predicate to input file. !
Start next refinement loop: True



PDSC: Verifying ./Benchmarks_msat/puzzle_2.smt2
Namespace(file='./Benchmarks_msat/puzzle_2.smt2', log=False, msat=True, property=None, qe=False, sygus=False)
In if ladder True
Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, ]
--->[2]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, ]
--->[0]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[0]


28 SMT queries performed.
before complete_trace: [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[0]


after complete_trace [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[-1]


-----------------------------------check_spur-------------------------------
final init cond And(And(0 == ct_0, end_0 == 0),
    And(0 == ct_1, end_1 == 0),
    And(n_0 == n_1, h_0 == 1, h_1 == 0))
Initial concrete state  {'n_1': 1, 'ct_1_1': False, 'ct_0_1': True, 'abs_end_1': False, 'abs_h_1': False, 'ct_1_0': False, 'ct_0_0': True, 'abs_end_0': False, 'abs_h_0': True, 'p_synth_5': False, 'pred_0_synth_msat_4': True, 'pred_0_synth_msat_3': False, 'pred_0_synth_msat_2': True, 'pred_0_synth_msat_1': False, 'ct0_eq_ct1': True, 'n0_eq_n1': True, 'h_1': 0, 'h_0': 1, 'n_0': 1, 'end_1': 0, 'ct_1': 0, 'end_0': 0, 'ct_0': 0}
Next concrete state {'end_1': 0, 'n_1': 0, 'ct_1': 1, 'ct_0': 0, 'h_0': 1, 'n_0': 1, 'end_0': 0, 'h_1': 0}
Writing an smt file to be run using mathsat
Checking output from mathsat 5
hi
paren_dict {19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 95: 105, 89: 107, 79: 109, 77: 111, 138: 150, 132: 152, 121: 154, 119: 156, 183: 194, 177: 196, 166: 198, 164: 200, 264: 287, 250: 289, 236: 291, 221: 293, 210: 295, 208: 297, 398: 410, 392: 412, 471: 483, 457: 485, 442: 487, 428: 489, 414: 491, 386: 493, 371: 495, 356: 497, 342: 499, 328: 501, 313: 503, 299: 505, 202: 507, 158: 509, 113: 511, 71: 513, 37: 515, 1: 517}
aux_vars_first_occ_dict {'.def_21 ': 11, '.def_24 ': 47, '.def_81 ': 81, '.def_576 ': 123, '.def_578 ': 168, '.def_582 ': 212}
aux_vars_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_576 ': '( not ( = end_0 1 ) ) ', '.def_578 ': '( not ( = ct_0 1 ) ) ', '.def_582 ': '( and .def_576 ( and .def_21 ( and .def_24 ( and .def_21 .def_578 ) ) ) ) '}
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
subs1 ( not ( = end_0 1 ) ) 
remove lets from formula
subs2 ( not ( = end_0 1 ) ) 
subs1 ( not ( = ct_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ct_0 1 ) ) 
subs1 ( and .def_576 ( and .def_21 ( and .def_24 ( and .def_21 .def_578 ) ) ) ) 
remove lets from formula
subs2 ( and .def_576 ( and .def_21 ( and .def_24 ( and .def_21 .def_578 ) ) ) ) 
.def_21 
49
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_576 ': '( not ( = end_0 1 ) ) ', '.def_578 ': '( not ( = ct_0 1 ) ) '}
21
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_576 ': '( not ( = end_0 1 ) ) ', '.def_578 ': '( not ( = ct_0 1 ) ) '}
.def_24 
41
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_576 ': '( not ( = end_0 1 ) ) ', '.def_578 ': '( not ( = ct_0 1 ) ) ', '.def_582 ': '( and .def_576 ( and ( = n_0 n_1 ) ( and .def_24 ( and ( = n_0 n_1 ) .def_578 ) ) ) ) '}
.def_576 
6
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_576 ': '( not ( = end_0 1 ) ) ', '.def_578 ': '( not ( = ct_0 1 ) ) ', '.def_582 ': '( and .def_576 ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_578 ) ) ) ) '}
.def_578 
86
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_576 ': '( not ( = end_0 1 ) ) ', '.def_578 ': '( not ( = ct_0 1 ) ) ', '.def_582 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_578 ) ) ) ) '}
subs1 ( not ( = end_0 1 ) ) 
remove lets from formula
subs2 ( not ( = end_0 1 ) ) 
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( not ( = ct_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ct_0 1 ) ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( and .def_576 ( and .def_21 ( and .def_24 ( and .def_21 .def_578 ) ) ) ) 
remove lets from formula
subs2 ( and .def_576 ( and .def_21 ( and .def_24 ( and .def_21 .def_578 ) ) ) ) 
.def_21 
49
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_576 ': '( not ( = end_0 1 ) ) ', '.def_578 ': '( not ( = ct_0 1 ) ) ', '.def_582 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
21
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_576 ': '( not ( = end_0 1 ) ) ', '.def_578 ': '( not ( = ct_0 1 ) ) ', '.def_582 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
.def_24 
41
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_576 ': '( not ( = end_0 1 ) ) ', '.def_578 ': '( not ( = ct_0 1 ) ) ', '.def_582 ': '( and .def_576 ( and ( = n_0 n_1 ) ( and .def_24 ( and ( = n_0 n_1 ) .def_578 ) ) ) ) '}
.def_576 
6
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_576 ': '( not ( = end_0 1 ) ) ', '.def_578 ': '( not ( = ct_0 1 ) ) ', '.def_582 ': '( and .def_576 ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_578 ) ) ) ) '}
.def_578 
86
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_576 ': '( not ( = end_0 1 ) ) ', '.def_578 ': '( not ( = ct_0 1 ) ) ', '.def_582 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_578 ) ) ) ) '}
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
subs1 ( and .def_576 ( and .def_21 ( and .def_24 ( and .def_21 .def_578 ) ) ) ) 
remove lets from formula
subs2 ( and .def_576 ( and .def_21 ( and .def_24 ( and .def_21 .def_578 ) ) ) ) 
.def_21 
49
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_576 ': '( not ( = end_0 1 ) ) ', '.def_578 ': '( not ( = ct_0 1 ) ) ', '.def_582 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
21
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_576 ': '( not ( = end_0 1 ) ) ', '.def_578 ': '( not ( = ct_0 1 ) ) ', '.def_582 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
.def_24 
41
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_576 ': '( not ( = end_0 1 ) ) ', '.def_578 ': '( not ( = ct_0 1 ) ) ', '.def_582 ': '( and .def_576 ( and ( = n_0 n_1 ) ( and .def_24 ( and ( = n_0 n_1 ) .def_578 ) ) ) ) '}
.def_576 
6
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_576 ': '( not ( = end_0 1 ) ) ', '.def_578 ': '( not ( = ct_0 1 ) ) ', '.def_582 ': '( and .def_576 ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_578 ) ) ) ) '}
.def_578 
86
aux_vars_subs_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_576 ': '( not ( = end_0 1 ) ) ', '.def_578 ': '( not ( = ct_0 1 ) ) ', '.def_582 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) .def_578 ) ) ) ) '}
subs1 ( not ( = end_0 1 ) ) 
remove lets from formula
subs2 ( not ( = end_0 1 ) ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
subs1 ( not ( = ct_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ct_0 1 ) ) 
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
aux_vars_subs_dict  {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_576 ': '( not ( = end_0 1 ) ) ', '.def_578 ': '( not ( = ct_0 1 ) ) ', '.def_582 ': '( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) '}
{19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 95: 105, 89: 107, 79: 109, 77: 111, 138: 150, 132: 152, 121: 154, 119: 156, 183: 194, 177: 196, 166: 198, 164: 200, 264: 287, 250: 289, 236: 291, 221: 293, 210: 295, 208: 297, 398: 410, 392: 412, 471: 483, 457: 485, 442: 487, 428: 489, 414: 491, 386: 493, 371: 495, 356: 497, 342: 499, 328: 501, 313: 503, 299: 505, 202: 507, 158: 509, 113: 511, 71: 513, 37: 515, 1: 517}
{20: 30, 10: 32, 8: 34, 60: 70, 54: 72, 44: 74, 42: 76, 103: 115, 97: 117, 86: 119, 84: 121, 148: 159, 142: 161, 131: 163, 129: 165, 229: 252, 215: 254, 201: 256, 186: 258, 175: 260, 173: 262, 363: 375, 357: 377, 436: 448, 422: 450, 407: 452, 393: 454, 379: 456, 351: 458, 336: 460, 321: 462, 307: 464, 293: 466, 278: 468, 264: 470, 167: 472, 123: 474, 78: 476, 36: 478, 2: 480}
{27: 37, 21: 39, 11: 41, 9: 43, 70: 82, 64: 84, 53: 86, 51: 88, 115: 126, 109: 128, 98: 130, 96: 132, 196: 219, 182: 221, 168: 223, 153: 225, 142: 227, 140: 229, 330: 342, 324: 344, 403: 415, 389: 417, 374: 419, 360: 421, 346: 423, 318: 425, 303: 427, 288: 429, 274: 431, 260: 433, 245: 435, 231: 437, 134: 439, 90: 441, 45: 443, 3: 445}
{29: 41, 23: 43, 12: 45, 10: 47, 74: 85, 68: 87, 57: 89, 55: 91, 155: 178, 141: 180, 127: 182, 112: 184, 101: 186, 99: 188, 289: 301, 283: 303, 362: 374, 348: 376, 333: 378, 319: 380, 305: 382, 277: 384, 262: 386, 247: 388, 233: 390, 219: 392, 204: 394, 190: 396, 93: 398, 49: 400, 4: 402}
{30: 41, 24: 43, 13: 45, 11: 47, 111: 134, 97: 136, 83: 138, 68: 140, 57: 142, 55: 144, 245: 257, 239: 259, 318: 330, 304: 332, 289: 334, 275: 336, 261: 338, 233: 340, 218: 342, 203: 344, 189: 346, 175: 348, 160: 350, 146: 352, 49: 354, 5: 356}
{68: 91, 54: 93, 40: 95, 25: 97, 14: 99, 12: 101, 202: 214, 196: 216, 275: 287, 261: 289, 246: 291, 232: 293, 218: 295, 190: 297, 175: 299, 160: 301, 146: 303, 132: 305, 117: 307, 103: 309, 6: 311}
remove lets from formula
final_formula  ( and .def_24 ( and .def_582 ( and .def_21 ( and .def_81 ( and .def_582 ( and .def_576 ( and ( not ( = end_1 1 ) ) ( and .def_24 ( and .def_81 ( and .def_578 ( and .def_21 ( <= ct_1 0 ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = h_0 1 ) ( and ( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) ( and ( = n_0 n_1 ) ( and ( not ( = h_1 1 ) ) ( and ( and ( not ( = end_0 1 ) ) ( and ( = n_0 n_1 ) ( and ( = h_0 1 ) ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ) ) ) ( and ( not ( = end_0 1 ) ) ( and ( not ( = end_1 1 ) ) ( and ( = h_0 1 ) ( and ( not ( = h_1 1 ) ) ( and ( not ( = ct_0 1 ) ) ( and ( = n_0 n_1 ) ( <= ct_1 0 ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {26: 37, 20: 39, 9: 41, 7: 43, 64: 75, 53: 77, 51: 79, 106: 119, 100: 121, 89: 123, 87: 125, 146: 157, 135: 159, 133: 161, 188: 200, 182: 202, 171: 204, 169: 206, 272: 296, 257: 298, 242: 300, 227: 302, 216: 304, 214: 306, 343: 358, 431: 444, 425: 446, 506: 515, 517: 532, 502: 534, 493: 536, 484: 538, 540: 553, 478: 555, 463: 557, 448: 559, 419: 561, 404: 563, 389: 565, 374: 567, 360: 569, 337: 571, 323: 573, 308: 575, 208: 577, 163: 579, 127: 581, 81: 583, 45: 585, 1: 587}
aux_vars_first_occ_dict {'.def_148 ': 11, '.def_609 ': 55, '.def_611 ': 91, '.def_612 ': 137, '.def_614 ': 173, '.def_618 ': 218}
aux_vars_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_609 ': '( = hp_0 1 ) ', '.def_611 ': '( not ( = endp_0 1 ) ) ', '.def_612 ': '( = np_0 0 ) ', '.def_614 ': '( not ( = ctp_0 1 ) ) ', '.def_618 ': '( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) '}
subs1 ( not ( = hp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = hp_1 1 ) ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( not ( = endp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endp_0 1 ) ) 
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( not ( = ctp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctp_0 1 ) ) 
subs1 ( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) 
remove lets from formula
subs2 ( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) 
.def_609 
36
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_609 ': '( = hp_0 1 ) ', '.def_611 ': '( not ( = endp_0 1 ) ) ', '.def_612 ': '( = np_0 0 ) ', '.def_614 ': '( not ( = ctp_0 1 ) ) ', '.def_618 ': '( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) '}
.def_611 
6
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_609 ': '( = hp_0 1 ) ', '.def_611 ': '( not ( = endp_0 1 ) ) ', '.def_612 ': '( = np_0 0 ) ', '.def_614 ': '( not ( = ctp_0 1 ) ) ', '.def_618 ': '( and .def_611 ( and .def_612 ( and ( = hp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
.def_612 
69
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_609 ': '( = hp_0 1 ) ', '.def_611 ': '( not ( = endp_0 1 ) ) ', '.def_612 ': '( = np_0 0 ) ', '.def_614 ': '( not ( = ctp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endp_0 1 ) ) ( and .def_612 ( and ( = hp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
35
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_609 ': '( = hp_0 1 ) ', '.def_611 ': '( not ( = endp_0 1 ) ) ', '.def_612 ': '( = np_0 0 ) ', '.def_614 ': '( not ( = ctp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endp_0 1 ) ) ( and .def_612 ( and ( = hp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
.def_614 
86
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_609 ': '( = hp_0 1 ) ', '.def_611 ': '( not ( = endp_0 1 ) ) ', '.def_612 ': '( = np_0 0 ) ', '.def_614 ': '( not ( = ctp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) .def_614 ) ) ) ) '}
subs1 ( not ( = endp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endp_0 1 ) ) 
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( not ( = ctp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctp_0 1 ) ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) 
remove lets from formula
subs2 ( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) 
.def_609 
36
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_609 ': '( = hp_0 1 ) ', '.def_611 ': '( not ( = endp_0 1 ) ) ', '.def_612 ': '( = np_0 0 ) ', '.def_614 ': '( not ( = ctp_0 1 ) ) ', '.def_618 ': '( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) '}
.def_611 
6
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_609 ': '( = hp_0 1 ) ', '.def_611 ': '( not ( = endp_0 1 ) ) ', '.def_612 ': '( = np_0 0 ) ', '.def_614 ': '( not ( = ctp_0 1 ) ) ', '.def_618 ': '( and .def_611 ( and .def_612 ( and ( = hp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
.def_612 
69
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_609 ': '( = hp_0 1 ) ', '.def_611 ': '( not ( = endp_0 1 ) ) ', '.def_612 ': '( = np_0 0 ) ', '.def_614 ': '( not ( = ctp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endp_0 1 ) ) ( and .def_612 ( and ( = hp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
35
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_609 ': '( = hp_0 1 ) ', '.def_611 ': '( not ( = endp_0 1 ) ) ', '.def_612 ': '( = np_0 0 ) ', '.def_614 ': '( not ( = ctp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endp_0 1 ) ) ( and .def_612 ( and ( = hp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
.def_614 
86
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_609 ': '( = hp_0 1 ) ', '.def_611 ': '( not ( = endp_0 1 ) ) ', '.def_612 ': '( = np_0 0 ) ', '.def_614 ': '( not ( = ctp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) .def_614 ) ) ) ) '}
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) 
remove lets from formula
subs2 ( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) 
.def_609 
36
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_609 ': '( = hp_0 1 ) ', '.def_611 ': '( not ( = endp_0 1 ) ) ', '.def_612 ': '( = np_0 0 ) ', '.def_614 ': '( not ( = ctp_0 1 ) ) ', '.def_618 ': '( and .def_611 ( and .def_612 ( and .def_609 ( and .def_612 .def_614 ) ) ) ) '}
.def_611 
6
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_609 ': '( = hp_0 1 ) ', '.def_611 ': '( not ( = endp_0 1 ) ) ', '.def_612 ': '( = np_0 0 ) ', '.def_614 ': '( not ( = ctp_0 1 ) ) ', '.def_618 ': '( and .def_611 ( and .def_612 ( and ( = hp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
.def_612 
69
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_609 ': '( = hp_0 1 ) ', '.def_611 ': '( not ( = endp_0 1 ) ) ', '.def_612 ': '( = np_0 0 ) ', '.def_614 ': '( not ( = ctp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endp_0 1 ) ) ( and .def_612 ( and ( = hp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
35
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_609 ': '( = hp_0 1 ) ', '.def_611 ': '( not ( = endp_0 1 ) ) ', '.def_612 ': '( = np_0 0 ) ', '.def_614 ': '( not ( = ctp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endp_0 1 ) ) ( and .def_612 ( and ( = hp_0 1 ) ( and .def_612 .def_614 ) ) ) ) '}
.def_614 
86
aux_vars_subs_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_609 ': '( = hp_0 1 ) ', '.def_611 ': '( not ( = endp_0 1 ) ) ', '.def_612 ': '( = np_0 0 ) ', '.def_614 ': '( not ( = ctp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) .def_614 ) ) ) ) '}
subs1 ( not ( = endp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endp_0 1 ) ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( not ( = hp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = hp_1 1 ) ) 
subs1 ( not ( = hp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = hp_1 1 ) ) 
subs1 ( not ( = ctp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctp_0 1 ) ) 
aux_vars_subs_dict  {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_609 ': '( = hp_0 1 ) ', '.def_611 ': '( not ( = endp_0 1 ) ) ', '.def_612 ': '( = np_0 0 ) ', '.def_614 ': '( not ( = ctp_0 1 ) ) ', '.def_618 ': '( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) ( not ( = ctp_0 1 ) ) ) ) ) ) '}
{26: 37, 20: 39, 9: 41, 7: 43, 64: 75, 53: 77, 51: 79, 106: 119, 100: 121, 89: 123, 87: 125, 146: 157, 135: 159, 133: 161, 188: 200, 182: 202, 171: 204, 169: 206, 272: 296, 257: 298, 242: 300, 227: 302, 216: 304, 214: 306, 343: 358, 431: 444, 425: 446, 506: 515, 517: 532, 502: 534, 493: 536, 484: 538, 540: 553, 478: 555, 463: 557, 448: 559, 419: 561, 404: 563, 389: 565, 374: 567, 360: 569, 337: 571, 323: 573, 308: 575, 208: 577, 163: 579, 127: 581, 81: 583, 45: 585, 1: 587}
{21: 32, 10: 34, 8: 36, 63: 76, 57: 78, 46: 80, 44: 82, 103: 114, 92: 116, 90: 118, 145: 157, 139: 159, 128: 161, 126: 163, 229: 253, 214: 255, 199: 257, 184: 259, 173: 261, 171: 263, 300: 315, 388: 401, 382: 403, 463: 472, 474: 489, 459: 491, 450: 493, 441: 495, 497: 510, 435: 512, 420: 514, 405: 516, 376: 518, 361: 520, 346: 522, 331: 524, 317: 526, 294: 528, 280: 530, 265: 532, 165: 534, 120: 536, 84: 538, 38: 540, 2: 542}
{28: 41, 22: 43, 11: 45, 9: 47, 68: 79, 57: 81, 55: 83, 110: 122, 104: 124, 93: 126, 91: 128, 194: 218, 179: 220, 164: 222, 149: 224, 138: 226, 136: 228, 265: 280, 353: 366, 347: 368, 428: 437, 439: 454, 424: 456, 415: 458, 406: 460, 462: 475, 400: 477, 385: 479, 370: 481, 341: 483, 326: 485, 311: 487, 296: 489, 282: 491, 259: 493, 245: 495, 230: 497, 130: 499, 85: 501, 49: 503, 3: 505}
{23: 34, 12: 36, 10: 38, 65: 77, 59: 79, 48: 81, 46: 83, 149: 173, 134: 175, 119: 177, 104: 179, 93: 181, 91: 183, 220: 235, 308: 321, 302: 323, 383: 392, 394: 409, 379: 411, 370: 413, 361: 415, 417: 430, 355: 432, 340: 434, 325: 436, 296: 438, 281: 440, 266: 442, 251: 444, 237: 446, 214: 448, 200: 450, 185: 452, 85: 454, 40: 456, 4: 458}
{30: 42, 24: 44, 13: 46, 11: 48, 114: 138, 99: 140, 84: 142, 69: 144, 58: 146, 56: 148, 185: 200, 273: 286, 267: 288, 348: 357, 359: 374, 344: 376, 335: 378, 326: 380, 382: 395, 320: 397, 305: 399, 290: 401, 261: 403, 246: 405, 231: 407, 216: 409, 202: 411, 179: 413, 165: 415, 150: 417, 50: 419, 5: 421}
{70: 94, 55: 96, 40: 98, 25: 100, 14: 102, 12: 104, 141: 156, 229: 242, 223: 244, 304: 313, 315: 330, 300: 332, 291: 334, 282: 336, 338: 351, 276: 353, 261: 355, 246: 357, 217: 359, 202: 361, 187: 363, 172: 365, 158: 367, 135: 369, 121: 371, 106: 373, 6: 375}
remove lets from formula
final_formula  ( and .def_609 ( or .def_618 ( and ( not .def_612 ) ( or .def_618 ( and .def_611 ( and .def_609 ( and .def_148 ( and ( not ( = endp_1 1 ) ) ( and .def_148 ( and .def_614 ( and ( = np_1 ( to_int ( * ( / 1 10 ) ( to_real np_0 ) ) ) ) ( <= ctp_1 1 ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hp_0 1 ) ( or ( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) ( not ( = ctp_0 1 ) ) ) ) ) ) ( and ( not ( = np_0 0 ) ) ( or ( and ( not ( = endp_0 1 ) ) ( and ( = np_0 0 ) ( and ( = hp_0 1 ) ( and ( = np_0 0 ) ( not ( = ctp_0 1 ) ) ) ) ) ) ( and ( not ( = endp_0 1 ) ) ( and ( = hp_0 1 ) ( and ( not ( = hp_1 1 ) ) ( and ( not ( = endp_1 1 ) ) ( and ( not ( = hp_1 1 ) ) ( and ( not ( = ctp_0 1 ) ) ( and ( = np_1 ( to_int ( * ( / 1 10 ) ( to_real np_0 ) ) ) ) ( <= ctp_1 1 ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 32, 9: 34, 7: 36, 63: 77, 57: 79, 46: 81, 44: 83, 104: 116, 93: 118, 91: 120, 147: 160, 141: 162, 130: 164, 128: 166, 232: 256, 217: 258, 202: 260, 187: 262, 176: 264, 174: 266, 303: 318, 376: 388, 370: 390, 438: 447, 449: 465, 434: 467, 425: 469, 419: 471, 508: 517, 519: 535, 504: 537, 495: 539, 485: 541, 543: 557, 479: 559, 473: 561, 413: 563, 407: 565, 392: 567, 364: 569, 349: 571, 334: 573, 320: 575, 297: 577, 283: 579, 268: 581, 168: 583, 122: 585, 85: 587, 38: 589, 1: 591}
aux_vars_first_occ_dict {'.def_653 ': 11, '.def_655 ': 48, '.def_656 ': 95, '.def_658 ': 132, '.def_662 ': 178}
aux_vars_dict {'.def_653 ': '( = hpp_0 1 ) ', '.def_655 ': '( not ( = endpp_0 1 ) ) ', '.def_656 ': '( = npp_0 0 ) ', '.def_658 ': '( not ( = ctpp_0 1 ) ) ', '.def_662 ': '( and .def_655 ( and .def_656 ( and .def_653 ( and .def_656 .def_658 ) ) ) ) '}
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( not ( = endpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endpp_0 1 ) ) 
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( not ( = ctpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctpp_0 1 ) ) 
subs1 ( and .def_655 ( and .def_656 ( and .def_653 ( and .def_656 .def_658 ) ) ) ) 
remove lets from formula
subs2 ( and .def_655 ( and .def_656 ( and .def_653 ( and .def_656 .def_658 ) ) ) ) 
.def_653 
36
aux_vars_subs_dict {'.def_653 ': '( = hpp_0 1 ) ', '.def_655 ': '( not ( = endpp_0 1 ) ) ', '.def_656 ': '( = npp_0 0 ) ', '.def_658 ': '( not ( = ctpp_0 1 ) ) '}
.def_655 
6
aux_vars_subs_dict {'.def_653 ': '( = hpp_0 1 ) ', '.def_655 ': '( not ( = endpp_0 1 ) ) ', '.def_656 ': '( = npp_0 0 ) ', '.def_658 ': '( not ( = ctpp_0 1 ) ) ', '.def_662 ': '( and .def_655 ( and .def_656 ( and ( = hpp_0 1 ) ( and .def_656 .def_658 ) ) ) ) '}
.def_656 
71
aux_vars_subs_dict {'.def_653 ': '( = hpp_0 1 ) ', '.def_655 ': '( not ( = endpp_0 1 ) ) ', '.def_656 ': '( = npp_0 0 ) ', '.def_658 ': '( not ( = ctpp_0 1 ) ) ', '.def_662 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_656 ( and ( = hpp_0 1 ) ( and .def_656 .def_658 ) ) ) ) '}
36
aux_vars_subs_dict {'.def_653 ': '( = hpp_0 1 ) ', '.def_655 ': '( not ( = endpp_0 1 ) ) ', '.def_656 ': '( = npp_0 0 ) ', '.def_658 ': '( not ( = ctpp_0 1 ) ) ', '.def_662 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_656 ( and ( = hpp_0 1 ) ( and .def_656 .def_658 ) ) ) ) '}
.def_658 
90
aux_vars_subs_dict {'.def_653 ': '( = hpp_0 1 ) ', '.def_655 ': '( not ( = endpp_0 1 ) ) ', '.def_656 ': '( = npp_0 0 ) ', '.def_658 ': '( not ( = ctpp_0 1 ) ) ', '.def_662 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) .def_658 ) ) ) ) '}
subs1 ( not ( = endpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endpp_0 1 ) ) 
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( not ( = ctpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctpp_0 1 ) ) 
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( and .def_655 ( and .def_656 ( and .def_653 ( and .def_656 .def_658 ) ) ) ) 
remove lets from formula
subs2 ( and .def_655 ( and .def_656 ( and .def_653 ( and .def_656 .def_658 ) ) ) ) 
.def_653 
36
aux_vars_subs_dict {'.def_653 ': '( = hpp_0 1 ) ', '.def_655 ': '( not ( = endpp_0 1 ) ) ', '.def_656 ': '( = npp_0 0 ) ', '.def_658 ': '( not ( = ctpp_0 1 ) ) ', '.def_662 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) '}
.def_655 
6
aux_vars_subs_dict {'.def_653 ': '( = hpp_0 1 ) ', '.def_655 ': '( not ( = endpp_0 1 ) ) ', '.def_656 ': '( = npp_0 0 ) ', '.def_658 ': '( not ( = ctpp_0 1 ) ) ', '.def_662 ': '( and .def_655 ( and .def_656 ( and ( = hpp_0 1 ) ( and .def_656 .def_658 ) ) ) ) '}
.def_656 
71
aux_vars_subs_dict {'.def_653 ': '( = hpp_0 1 ) ', '.def_655 ': '( not ( = endpp_0 1 ) ) ', '.def_656 ': '( = npp_0 0 ) ', '.def_658 ': '( not ( = ctpp_0 1 ) ) ', '.def_662 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_656 ( and ( = hpp_0 1 ) ( and .def_656 .def_658 ) ) ) ) '}
36
aux_vars_subs_dict {'.def_653 ': '( = hpp_0 1 ) ', '.def_655 ': '( not ( = endpp_0 1 ) ) ', '.def_656 ': '( = npp_0 0 ) ', '.def_658 ': '( not ( = ctpp_0 1 ) ) ', '.def_662 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_656 ( and ( = hpp_0 1 ) ( and .def_656 .def_658 ) ) ) ) '}
.def_658 
90
aux_vars_subs_dict {'.def_653 ': '( = hpp_0 1 ) ', '.def_655 ': '( not ( = endpp_0 1 ) ) ', '.def_656 ': '( = npp_0 0 ) ', '.def_658 ': '( not ( = ctpp_0 1 ) ) ', '.def_662 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) .def_658 ) ) ) ) '}
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( and .def_655 ( and .def_656 ( and .def_653 ( and .def_656 .def_658 ) ) ) ) 
remove lets from formula
subs2 ( and .def_655 ( and .def_656 ( and .def_653 ( and .def_656 .def_658 ) ) ) ) 
.def_653 
36
aux_vars_subs_dict {'.def_653 ': '( = hpp_0 1 ) ', '.def_655 ': '( not ( = endpp_0 1 ) ) ', '.def_656 ': '( = npp_0 0 ) ', '.def_658 ': '( not ( = ctpp_0 1 ) ) ', '.def_662 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) '}
.def_655 
6
aux_vars_subs_dict {'.def_653 ': '( = hpp_0 1 ) ', '.def_655 ': '( not ( = endpp_0 1 ) ) ', '.def_656 ': '( = npp_0 0 ) ', '.def_658 ': '( not ( = ctpp_0 1 ) ) ', '.def_662 ': '( and .def_655 ( and .def_656 ( and ( = hpp_0 1 ) ( and .def_656 .def_658 ) ) ) ) '}
.def_656 
71
aux_vars_subs_dict {'.def_653 ': '( = hpp_0 1 ) ', '.def_655 ': '( not ( = endpp_0 1 ) ) ', '.def_656 ': '( = npp_0 0 ) ', '.def_658 ': '( not ( = ctpp_0 1 ) ) ', '.def_662 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_656 ( and ( = hpp_0 1 ) ( and .def_656 .def_658 ) ) ) ) '}
36
aux_vars_subs_dict {'.def_653 ': '( = hpp_0 1 ) ', '.def_655 ': '( not ( = endpp_0 1 ) ) ', '.def_656 ': '( = npp_0 0 ) ', '.def_658 ': '( not ( = ctpp_0 1 ) ) ', '.def_662 ': '( and ( not ( = endpp_0 1 ) ) ( and .def_656 ( and ( = hpp_0 1 ) ( and .def_656 .def_658 ) ) ) ) '}
.def_658 
90
aux_vars_subs_dict {'.def_653 ': '( = hpp_0 1 ) ', '.def_655 ': '( not ( = endpp_0 1 ) ) ', '.def_656 ': '( = npp_0 0 ) ', '.def_658 ': '( not ( = ctpp_0 1 ) ) ', '.def_662 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) .def_658 ) ) ) ) '}
subs1 ( not ( = endpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endpp_0 1 ) ) 
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( not ( = ctpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctpp_0 1 ) ) 
aux_vars_subs_dict  {'.def_653 ': '( = hpp_0 1 ) ', '.def_655 ': '( not ( = endpp_0 1 ) ) ', '.def_656 ': '( = npp_0 0 ) ', '.def_658 ': '( not ( = ctpp_0 1 ) ) ', '.def_662 ': '( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) '}
{20: 32, 9: 34, 7: 36, 63: 77, 57: 79, 46: 81, 44: 83, 104: 116, 93: 118, 91: 120, 147: 160, 141: 162, 130: 164, 128: 166, 232: 256, 217: 258, 202: 260, 187: 262, 176: 264, 174: 266, 303: 318, 376: 388, 370: 390, 438: 447, 449: 465, 434: 467, 425: 469, 419: 471, 508: 517, 519: 535, 504: 537, 495: 539, 485: 541, 543: 557, 479: 559, 473: 561, 413: 563, 407: 565, 392: 567, 364: 569, 349: 571, 334: 573, 320: 575, 297: 577, 283: 579, 268: 581, 168: 583, 122: 585, 85: 587, 38: 589, 1: 591}
{27: 41, 21: 43, 10: 45, 8: 47, 68: 80, 57: 82, 55: 84, 111: 124, 105: 126, 94: 128, 92: 130, 196: 220, 181: 222, 166: 224, 151: 226, 140: 228, 138: 230, 267: 282, 340: 352, 334: 354, 402: 411, 413: 429, 398: 431, 389: 433, 383: 435, 472: 481, 483: 499, 468: 501, 459: 503, 449: 505, 507: 521, 443: 523, 437: 525, 377: 527, 371: 529, 356: 531, 328: 533, 313: 535, 298: 537, 284: 539, 261: 541, 247: 543, 232: 545, 132: 547, 86: 549, 49: 551, 2: 553}
{22: 34, 11: 36, 9: 38, 65: 78, 59: 80, 48: 82, 46: 84, 150: 174, 135: 176, 120: 178, 105: 180, 94: 182, 92: 184, 221: 236, 294: 306, 288: 308, 356: 365, 367: 383, 352: 385, 343: 387, 337: 389, 426: 435, 437: 453, 422: 455, 413: 457, 403: 459, 461: 475, 397: 477, 391: 479, 331: 481, 325: 483, 310: 485, 282: 487, 267: 489, 252: 491, 238: 493, 215: 495, 201: 497, 186: 499, 86: 501, 40: 503, 3: 505}
{29: 42, 23: 44, 12: 46, 10: 48, 114: 138, 99: 140, 84: 142, 69: 144, 58: 146, 56: 148, 185: 200, 258: 270, 252: 272, 320: 329, 331: 347, 316: 349, 307: 351, 301: 353, 390: 399, 401: 417, 386: 419, 377: 421, 367: 423, 425: 439, 361: 441, 355: 443, 295: 445, 289: 447, 274: 449, 246: 451, 231: 453, 216: 455, 202: 457, 179: 459, 165: 461, 150: 463, 50: 465, 4: 467}
{69: 93, 54: 95, 39: 97, 24: 99, 13: 101, 11: 103, 140: 155, 213: 225, 207: 227, 275: 284, 286: 302, 271: 304, 262: 306, 256: 308, 345: 354, 356: 372, 341: 374, 332: 376, 322: 378, 380: 394, 316: 396, 310: 398, 250: 400, 244: 402, 229: 404, 201: 406, 186: 408, 171: 410, 157: 412, 134: 414, 120: 416, 105: 418, 5: 420}
remove lets from formula
final_formula  ( and .def_653 ( or .def_662 ( and ( not .def_656 ) ( or .def_662 ( and .def_655 ( and .def_653 ( and ( not ( = hpp_1 1 ) ) ( and .def_658 ( not ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ( not ( and ( = npp_1 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ( <= ctpp_1 1 ) ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hpp_0 1 ) ( or ( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) ( and ( not ( = npp_0 0 ) ) ( or ( and ( not ( = endpp_0 1 ) ) ( and ( = npp_0 0 ) ( and ( = hpp_0 1 ) ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ) ) ) ( and ( not ( = endpp_0 1 ) ) ( and ( = hpp_0 1 ) ( and ( not ( = hpp_1 1 ) ) ( and ( not ( = ctpp_0 1 ) ) ( not ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ( not ( and ( = npp_1 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ( <= ctpp_1 1 ) ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 33, 9: 35, 7: 37, 58: 71, 47: 73, 45: 75, 102: 117, 96: 119, 85: 121, 83: 123, 150: 164, 144: 166, 133: 168, 131: 170, 236: 260, 221: 262, 206: 264, 191: 266, 180: 268, 178: 270, 307: 322, 414: 423, 425: 442, 410: 444, 401: 446, 395: 448, 456: 471, 450: 473, 389: 475, 383: 477, 368: 479, 353: 481, 338: 483, 324: 485, 301: 487, 287: 489, 272: 491, 172: 493, 125: 495, 77: 497, 39: 499, 1: 501}
aux_vars_first_occ_dict {'.def_239 ': 11, '.def_240 ': 49, '.def_699 ': 87, '.def_701 ': 135, '.def_705 ': 182}
aux_vars_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_699 ': '( not ( = endppp_0 1 ) ) ', '.def_701 ': '( not ( = ctppp_0 1 ) ) ', '.def_705 ': '( and .def_699 ( and .def_240 ( and .def_239 ( and .def_240 .def_701 ) ) ) ) '}
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( not ( = endppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endppp_0 1 ) ) 
subs1 ( not ( = ctppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctppp_0 1 ) ) 
subs1 ( and .def_699 ( and .def_240 ( and .def_239 ( and .def_240 .def_701 ) ) ) ) 
remove lets from formula
subs2 ( and .def_699 ( and .def_240 ( and .def_239 ( and .def_240 .def_701 ) ) ) ) 
.def_239 
36
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_699 ': '( not ( = endppp_0 1 ) ) ', '.def_701 ': '( not ( = ctppp_0 1 ) ) '}
.def_240 
57
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_699 ': '( not ( = endppp_0 1 ) ) ', '.def_701 ': '( not ( = ctppp_0 1 ) ) ', '.def_705 ': '( and .def_699 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_701 ) ) ) ) '}
21
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_699 ': '( not ( = endppp_0 1 ) ) ', '.def_701 ': '( not ( = ctppp_0 1 ) ) ', '.def_705 ': '( and .def_699 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_701 ) ) ) ) '}
.def_699 
6
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_699 ': '( not ( = endppp_0 1 ) ) ', '.def_701 ': '( not ( = ctppp_0 1 ) ) ', '.def_705 ': '( and .def_699 ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_701 ) ) ) ) '}
.def_701 
94
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_699 ': '( not ( = endppp_0 1 ) ) ', '.def_701 ': '( not ( = ctppp_0 1 ) ) ', '.def_705 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_701 ) ) ) ) '}
subs1 ( not ( = endppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endppp_0 1 ) ) 
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( not ( = ctppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctppp_0 1 ) ) 
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( and .def_699 ( and .def_240 ( and .def_239 ( and .def_240 .def_701 ) ) ) ) 
remove lets from formula
subs2 ( and .def_699 ( and .def_240 ( and .def_239 ( and .def_240 .def_701 ) ) ) ) 
.def_239 
36
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_699 ': '( not ( = endppp_0 1 ) ) ', '.def_701 ': '( not ( = ctppp_0 1 ) ) ', '.def_705 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) '}
.def_240 
57
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_699 ': '( not ( = endppp_0 1 ) ) ', '.def_701 ': '( not ( = ctppp_0 1 ) ) ', '.def_705 ': '( and .def_699 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_701 ) ) ) ) '}
21
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_699 ': '( not ( = endppp_0 1 ) ) ', '.def_701 ': '( not ( = ctppp_0 1 ) ) ', '.def_705 ': '( and .def_699 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_701 ) ) ) ) '}
.def_699 
6
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_699 ': '( not ( = endppp_0 1 ) ) ', '.def_701 ': '( not ( = ctppp_0 1 ) ) ', '.def_705 ': '( and .def_699 ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_701 ) ) ) ) '}
.def_701 
94
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_699 ': '( not ( = endppp_0 1 ) ) ', '.def_701 ': '( not ( = ctppp_0 1 ) ) ', '.def_705 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_701 ) ) ) ) '}
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( and .def_699 ( and .def_240 ( and .def_239 ( and .def_240 .def_701 ) ) ) ) 
remove lets from formula
subs2 ( and .def_699 ( and .def_240 ( and .def_239 ( and .def_240 .def_701 ) ) ) ) 
.def_239 
36
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_699 ': '( not ( = endppp_0 1 ) ) ', '.def_701 ': '( not ( = ctppp_0 1 ) ) ', '.def_705 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) '}
.def_240 
57
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_699 ': '( not ( = endppp_0 1 ) ) ', '.def_701 ': '( not ( = ctppp_0 1 ) ) ', '.def_705 ': '( and .def_699 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_701 ) ) ) ) '}
21
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_699 ': '( not ( = endppp_0 1 ) ) ', '.def_701 ': '( not ( = ctppp_0 1 ) ) ', '.def_705 ': '( and .def_699 ( and .def_240 ( and ( = hppp_0 1 ) ( and .def_240 .def_701 ) ) ) ) '}
.def_699 
6
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_699 ': '( not ( = endppp_0 1 ) ) ', '.def_701 ': '( not ( = ctppp_0 1 ) ) ', '.def_705 ': '( and .def_699 ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_701 ) ) ) ) '}
.def_701 
94
aux_vars_subs_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_699 ': '( not ( = endppp_0 1 ) ) ', '.def_701 ': '( not ( = ctppp_0 1 ) ) ', '.def_705 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) .def_701 ) ) ) ) '}
subs1 ( not ( = endppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = endppp_0 1 ) ) 
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( not ( = ctppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctppp_0 1 ) ) 
aux_vars_subs_dict  {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_699 ': '( not ( = endppp_0 1 ) ) ', '.def_701 ': '( not ( = ctppp_0 1 ) ) ', '.def_705 ': '( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) '}
{20: 33, 9: 35, 7: 37, 58: 71, 47: 73, 45: 75, 102: 117, 96: 119, 85: 121, 83: 123, 150: 164, 144: 166, 133: 168, 131: 170, 236: 260, 221: 262, 206: 264, 191: 266, 180: 268, 178: 270, 307: 322, 414: 423, 425: 442, 410: 444, 401: 446, 395: 448, 456: 471, 450: 473, 389: 475, 383: 477, 368: 479, 353: 481, 338: 483, 324: 485, 301: 487, 287: 489, 272: 491, 172: 493, 125: 495, 77: 497, 39: 499, 1: 501}
{21: 34, 10: 36, 8: 38, 65: 80, 59: 82, 48: 84, 46: 86, 113: 127, 107: 129, 96: 131, 94: 133, 199: 223, 184: 225, 169: 227, 154: 229, 143: 231, 141: 233, 270: 285, 377: 386, 388: 405, 373: 407, 364: 409, 358: 411, 419: 434, 413: 436, 352: 438, 346: 440, 331: 442, 316: 444, 301: 446, 287: 448, 264: 450, 250: 452, 235: 454, 135: 456, 88: 458, 40: 460, 2: 462}
{28: 43, 22: 45, 11: 47, 9: 49, 76: 90, 70: 92, 59: 94, 57: 96, 162: 186, 147: 188, 132: 190, 117: 192, 106: 194, 104: 196, 233: 248, 340: 349, 351: 368, 336: 370, 327: 372, 321: 374, 382: 397, 376: 399, 315: 401, 309: 403, 294: 405, 279: 407, 264: 409, 250: 411, 227: 413, 213: 415, 198: 417, 98: 419, 51: 421, 3: 423}
{29: 43, 23: 45, 12: 47, 10: 49, 115: 139, 100: 141, 85: 143, 70: 145, 59: 147, 57: 149, 186: 201, 293: 302, 304: 321, 289: 323, 280: 325, 274: 327, 335: 350, 329: 352, 268: 354, 262: 356, 247: 358, 232: 360, 217: 362, 203: 364, 180: 366, 166: 368, 151: 370, 51: 372, 4: 374}
{69: 93, 54: 95, 39: 97, 24: 99, 13: 101, 11: 103, 140: 155, 247: 256, 258: 275, 243: 277, 234: 279, 228: 281, 289: 304, 283: 306, 222: 308, 216: 310, 201: 312, 186: 314, 171: 316, 157: 318, 134: 320, 120: 322, 105: 324, 5: 326}
remove lets from formula
final_formula  ( and .def_239 ( or .def_705 ( and ( not .def_240 ) ( or .def_705 ( and .def_699 ( and .def_239 ( and .def_701 ( not ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real nppp_0 ) ) ) ) ( not ( <= ctppp_1 1 ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hppp_0 1 ) ( or ( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) ( and ( not ( = nppp_0 0 ) ) ( or ( and ( not ( = endppp_0 1 ) ) ( and ( = nppp_0 0 ) ( and ( = hppp_0 1 ) ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ) ) ) ( and ( not ( = endppp_0 1 ) ) ( and ( = hppp_0 1 ) ( and ( not ( = ctppp_0 1 ) ) ( not ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real nppp_0 ) ) ) ) ( not ( <= ctppp_1 1 ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 34, 9: 36, 7: 38, 59: 73, 48: 75, 46: 77, 98: 113, 87: 115, 85: 117, 154: 169, 139: 171, 124: 173, 216: 232, 255: 271, 249: 273, 234: 275, 211: 277, 196: 279, 190: 281, 175: 283, 119: 285, 79: 287, 40: 289, 1: 291}
aux_vars_first_occ_dict {'.def_306 ': 11, '.def_307 ': 50, '.def_734 ': 89}
aux_vars_dict {'.def_306 ': '( = hpppp_0 1 ) ', '.def_307 ': '( = npppp_0 0 ) ', '.def_734 ': '( = ctpppp_0 1 ) '}
subs1 ( = hpppp_0 1 ) 
remove lets from formula
subs2 ( = hpppp_0 1 ) 
subs1 ( = npppp_0 0 ) 
remove lets from formula
subs2 ( = npppp_0 0 ) 
subs1 ( = ctpppp_0 1 ) 
remove lets from formula
subs2 ( = ctpppp_0 1 ) 
subs1 ( = hpppp_0 1 ) 
remove lets from formula
subs2 ( = hpppp_0 1 ) 
subs1 ( = npppp_0 0 ) 
remove lets from formula
subs2 ( = npppp_0 0 ) 
subs1 ( = ctpppp_0 1 ) 
remove lets from formula
subs2 ( = ctpppp_0 1 ) 
subs1 ( = hpppp_0 1 ) 
remove lets from formula
subs2 ( = hpppp_0 1 ) 
subs1 ( = ctpppp_0 1 ) 
remove lets from formula
subs2 ( = ctpppp_0 1 ) 
subs1 ( = npppp_0 0 ) 
remove lets from formula
subs2 ( = npppp_0 0 ) 
aux_vars_subs_dict  {'.def_306 ': '( = hpppp_0 1 ) ', '.def_307 ': '( = npppp_0 0 ) ', '.def_734 ': '( = ctpppp_0 1 ) '}
{20: 34, 9: 36, 7: 38, 59: 73, 48: 75, 46: 77, 98: 113, 87: 115, 85: 117, 154: 169, 139: 171, 124: 173, 216: 232, 255: 271, 249: 273, 234: 275, 211: 277, 196: 279, 190: 281, 175: 283, 119: 285, 79: 287, 40: 289, 1: 291}
{21: 35, 10: 37, 8: 39, 60: 75, 49: 77, 47: 79, 116: 131, 101: 133, 86: 135, 178: 194, 217: 233, 211: 235, 196: 237, 173: 239, 158: 241, 152: 243, 137: 245, 81: 247, 41: 249, 2: 251}
{22: 37, 11: 39, 9: 41, 78: 93, 63: 95, 48: 97, 140: 156, 179: 195, 173: 197, 158: 199, 135: 201, 120: 203, 114: 205, 99: 207, 43: 209, 3: 211}
remove lets from formula
final_formula  ( or ( and .def_306 ( and .def_307 ( not .def_734 ) ) ) ( and .def_306 ( not ( and .def_734 ( or ( = endpppp_0 1 ) ( and .def_307 ( not ( <= ctpppp_1 1 ) ) ) ) ) ) ) ) 
[' ( or ( and ( = hpppp_0 1 ) ( and ( = npppp_0 0 ) ( not ( = ctpppp_0 1 ) ) ) ) ( and ( = hpppp_0 1 ) ( not ( and ( = ctpppp_0 1 ) ( or ( = endpppp_0 1 ) ( and ( = npppp_0 0 ) ( not ( <= ctpppp_1 1 ) ) ) ) ) ) ) ) ']
new_pred_smt_format []
Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_end_1, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, ]
--->[2]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, ]
--->[0]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_0_0, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
p_synth_5, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
n0_eq_n1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
abs_end_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[0]


28 SMT queries performed.
after complete_trace [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[-1]


------------------------check_spuriousness-------------------------------
SEARCHING A CONCRETE CEX TRACE FROM ABOVE ABSTRACT CEX: 
--------------------------------------------------
Initial concrete state :  {'n_1': 1, 'ct_1_1': False, 'ct_0_1': True, 'abs_end_1': False, 'abs_h_1': False, 'ct_1_0': False, 'ct_0_0': True, 'abs_end_0': False, 'abs_h_0': True, 'p_synth_5': False, 'pred_0_synth_msat_4': True, 'pred_0_synth_msat_3': False, 'pred_0_synth_msat_2': True, 'pred_0_synth_msat_1': False, 'ct0_eq_ct1': True, 'n0_eq_n1': True, 'h_1': 0, 'h_0': 1, 'n_0': 1, 'end_1': 0, 'ct_1': 0, 'end_0': 0, 'ct_0': 0}



Next concrete state :  {'end_1': 0, 'n_1': 0, 'ct_1': 1, 'ct_0': 0, 'h_0': 1, 'n_0': 1, 'end_0': 0, 'h_1': 0}



Is the trace spurious?  True
Discovering predicate from a_src, a_tgt, c_src, c_tgt to eliminate spurious trace
----------------------pred_disc-------------------
Running quantifier elimination: 
New predicate is  (let ((a!1 (and (= nU0 nU1) (not (<= nU0 (- 1))) (not (= (div nU1 10) 0)))))

  (not a!1))

Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied. 28 15 True ['(declare-rel p_synth_6 (Int Int Int Int))\n (rule (=>   (and  (= (rel n 0) (rel n 1) )  (not  (<= (rel n 0)  (- 1 ) ) )  (not  (=  (div (rel n 1) 10 ) 0 ) ) ) (p_synth_6 end n h ct)))']
Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied.
Pre-processing time:	0.115847 
Solver time:	25.932399
Total time:	26.048246
Iteration count:	28
Predicate count:	15
Successfully added new predicate to input file. !
Start next refinement loop: True



PDSC: Verifying ./Benchmarks_msat/puzzle_2.smt2
Namespace(file='./Benchmarks_msat/puzzle_2.smt2', log=False, msat=True, property=None, qe=False, sygus=False)
In if ladder True
Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
n0_eq_n1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[2]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[0]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_0_0, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[0]


37 SMT queries performed.
before complete_trace: [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[0]


after complete_trace [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[-1]


-----------------------------------check_spur-------------------------------
final init cond And(And(0 == ct_0, end_0 == 0),
    And(0 == ct_1, end_1 == 0),
    And(n_0 == n_1, h_0 == 1, h_1 == 0))
Initial concrete state  {'n_1': 10, 'ct_1_1': False, 'ct_0_1': True, 'abs_end_1': False, 'abs_h_1': False, 'ct_1_0': False, 'ct_0_0': True, 'abs_end_0': False, 'abs_h_0': True, 'p_synth_6': True, 'p_synth_5': False, 'pred_0_synth_msat_4': True, 'pred_0_synth_msat_3': False, 'pred_0_synth_msat_2': True, 'pred_0_synth_msat_1': False, 'ct0_eq_ct1': True, 'n0_eq_n1': True, 'h_1': 0, 'h_0': 1, 'n_0': 10, 'end_1': 0, 'ct_1': 0, 'end_0': 0, 'ct_0': 0}
Next concrete state {'end_1': 0, 'n_1': 1, 'ct_1': 1, 'ct_0': 0, 'h_0': 1, 'n_0': 10, 'end_0': 0, 'h_1': 0}
Next concrete state {'end_1': 0, 'n_1': 0, 'ct_1': 2, 'ct_0': 0, 'h_0': 1, 'n_0': 10, 'end_0': 0, 'h_1': 0}
Next concrete state {'end_1': 1, 'n_1': 0, 'ct_1': 2, 'ct_0': 0, 'h_0': 1, 'n_0': 10, 'end_0': 0, 'h_1': 0}
Next concrete state {'end_0': 0, 'n_0': 1, 'ct_0': 0, 'ct_1': 2, 'h_1': 0, 'n_1': 0, 'end_1': 1, 'h_0': 1}
Writing an smt file to be run using mathsat
Checking output from mathsat 5
hi
paren_dict {19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 95: 105, 89: 107, 79: 109, 77: 111, 138: 149, 132: 151, 121: 153, 119: 155, 183: 195, 177: 197, 225: 237, 219: 239, 275: 298, 357: 369, 343: 371, 328: 373, 314: 375, 300: 377, 269: 379, 255: 381, 241: 383, 213: 385, 199: 387, 171: 389, 157: 391, 113: 393, 71: 395, 37: 397, 1: 399}
aux_vars_first_occ_dict {'.def_21 ': 11, '.def_24 ': 47, '.def_81 ': 81, '.def_582 ': 123}
aux_vars_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_582 ': '( not ( = ct_0 1 ) ) '}
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
subs1 ( not ( = ct_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ct_0 1 ) ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( not ( = ct_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ct_0 1 ) ) 
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
subs1 ( not ( = ct_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ct_0 1 ) ) 
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
aux_vars_subs_dict  {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_582 ': '( not ( = ct_0 1 ) ) '}
{19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 95: 105, 89: 107, 79: 109, 77: 111, 138: 149, 132: 151, 121: 153, 119: 155, 183: 195, 177: 197, 225: 237, 219: 239, 275: 298, 357: 369, 343: 371, 328: 373, 314: 375, 300: 377, 269: 379, 255: 381, 241: 383, 213: 385, 199: 387, 171: 389, 157: 391, 113: 393, 71: 395, 37: 397, 1: 399}
{20: 30, 10: 32, 8: 34, 60: 70, 54: 72, 44: 74, 42: 76, 103: 114, 97: 116, 86: 118, 84: 120, 148: 160, 142: 162, 190: 202, 184: 204, 240: 263, 322: 334, 308: 336, 293: 338, 279: 340, 265: 342, 234: 344, 220: 346, 206: 348, 178: 350, 164: 352, 136: 354, 122: 356, 78: 358, 36: 360, 2: 362}
{27: 37, 21: 39, 11: 41, 9: 43, 70: 81, 64: 83, 53: 85, 51: 87, 115: 127, 109: 129, 157: 169, 151: 171, 207: 230, 289: 301, 275: 303, 260: 305, 246: 307, 232: 309, 201: 311, 187: 313, 173: 315, 145: 317, 131: 319, 103: 321, 89: 323, 45: 325, 3: 327}
{29: 40, 23: 42, 12: 44, 10: 46, 74: 86, 68: 88, 116: 128, 110: 130, 166: 189, 248: 260, 234: 262, 219: 264, 205: 266, 191: 268, 160: 270, 146: 272, 132: 274, 104: 276, 90: 278, 62: 280, 48: 282, 4: 284}
remove lets from formula
final_formula  ( and .def_24 ( and ( not ( = end_1 1 ) ) ( and .def_81 ( and ( not ( = end_0 1 ) ) ( and .def_81 ( and .def_24 ( and ( and .def_21 .def_582 ) ( and .def_21 ( and .def_81 ( and .def_582 ( and .def_21 ( <= ct_1 0 ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = h_0 1 ) ( and ( not ( = end_1 1 ) ) ( and ( not ( = h_1 1 ) ) ( and ( not ( = end_0 1 ) ) ( and ( not ( = h_1 1 ) ) ( and ( = h_0 1 ) ( and ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ( and ( = n_0 n_1 ) ( and ( not ( = h_1 1 ) ) ( and ( not ( = ct_0 1 ) ) ( and ( = n_0 n_1 ) ( <= ct_1 0 ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {26: 37, 20: 39, 9: 41, 7: 43, 64: 75, 53: 77, 51: 79, 100: 111, 89: 113, 87: 115, 142: 154, 136: 156, 125: 158, 123: 160, 189: 202, 183: 204, 241: 265, 273: 288, 302: 315, 296: 317, 377: 386, 388: 403, 373: 405, 364: 407, 355: 409, 411: 424, 349: 426, 334: 428, 319: 430, 290: 432, 267: 434, 236: 436, 221: 438, 206: 440, 177: 442, 162: 444, 117: 446, 81: 448, 45: 450, 1: 452}
aux_vars_first_occ_dict {'.def_148 ': 11, '.def_609 ': 55, '.def_612 ': 91, '.def_614 ': 127}
aux_vars_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_609 ': '( = hp_0 1 ) ', '.def_612 ': '( = np_0 0 ) ', '.def_614 ': '( not ( = ctp_0 1 ) ) '}
subs1 ( not ( = hp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = hp_1 1 ) ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( not ( = ctp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctp_0 1 ) ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( not ( = hp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = hp_1 1 ) ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( not ( = ctp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctp_0 1 ) ) 
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( not ( = hp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = hp_1 1 ) ) 
subs1 ( not ( = ctp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctp_0 1 ) ) 
aux_vars_subs_dict  {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_609 ': '( = hp_0 1 ) ', '.def_612 ': '( = np_0 0 ) ', '.def_614 ': '( not ( = ctp_0 1 ) ) '}
{26: 37, 20: 39, 9: 41, 7: 43, 64: 75, 53: 77, 51: 79, 100: 111, 89: 113, 87: 115, 142: 154, 136: 156, 125: 158, 123: 160, 189: 202, 183: 204, 241: 265, 273: 288, 302: 315, 296: 317, 377: 386, 388: 403, 373: 405, 364: 407, 355: 409, 411: 424, 349: 426, 334: 428, 319: 430, 290: 432, 267: 434, 236: 436, 221: 438, 206: 440, 177: 442, 162: 444, 117: 446, 81: 448, 45: 450, 1: 452}
{21: 32, 10: 34, 8: 36, 57: 68, 46: 70, 44: 72, 99: 111, 93: 113, 82: 115, 80: 117, 146: 159, 140: 161, 198: 222, 230: 245, 259: 272, 253: 274, 334: 343, 345: 360, 330: 362, 321: 364, 312: 366, 368: 381, 306: 383, 291: 385, 276: 387, 247: 389, 224: 391, 193: 393, 178: 395, 163: 397, 134: 399, 119: 401, 74: 403, 38: 405, 2: 407}
{22: 33, 11: 35, 9: 37, 64: 76, 58: 78, 47: 80, 45: 82, 111: 124, 105: 126, 163: 187, 195: 210, 224: 237, 218: 239, 299: 308, 310: 325, 295: 327, 286: 329, 277: 331, 333: 346, 271: 348, 256: 350, 241: 352, 212: 354, 189: 356, 158: 358, 143: 360, 128: 362, 99: 364, 84: 366, 39: 368, 3: 370}
{29: 41, 23: 43, 12: 45, 10: 47, 76: 89, 70: 91, 128: 152, 160: 175, 189: 202, 183: 204, 264: 273, 275: 290, 260: 292, 251: 294, 242: 296, 298: 311, 236: 313, 221: 315, 206: 317, 177: 319, 154: 321, 123: 323, 108: 325, 93: 327, 64: 329, 49: 331, 4: 333}
remove lets from formula
final_formula  ( and .def_609 ( and ( not ( = endp_0 1 ) ) ( and .def_148 ( and .def_609 ( or ( and .def_612 .def_614 ) ( and ( not .def_612 ) ( and ( not ( = endp_1 1 ) ) ( and .def_148 ( and .def_614 ( and ( = np_1 ( to_int ( * ( / 1 10 ) ( to_real np_0 ) ) ) ) ( <= ctp_1 1 ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hp_0 1 ) ( and ( not ( = endp_0 1 ) ) ( and ( not ( = hp_1 1 ) ) ( and ( = hp_0 1 ) ( or ( and ( = np_0 0 ) ( not ( = ctp_0 1 ) ) ) ( and ( not ( = np_0 0 ) ) ( and ( not ( = endp_1 1 ) ) ( and ( not ( = hp_1 1 ) ) ( and ( not ( = ctp_0 1 ) ) ( and ( = np_1 ( to_int ( * ( / 1 10 ) ( to_real np_0 ) ) ) ) ( <= ctp_1 1 ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 32, 9: 34, 7: 36, 57: 69, 46: 71, 44: 73, 100: 113, 94: 115, 83: 117, 81: 119, 148: 162, 142: 164, 186: 210, 218: 233, 247: 259, 241: 261, 309: 318, 320: 336, 305: 338, 296: 340, 290: 342, 379: 388, 390: 406, 375: 408, 366: 410, 356: 412, 414: 428, 350: 430, 344: 432, 284: 434, 278: 436, 263: 438, 235: 440, 212: 442, 181: 444, 166: 446, 136: 448, 121: 450, 75: 452, 38: 454, 1: 456}
aux_vars_first_occ_dict {'.def_647 ': 11, '.def_650 ': 48, '.def_652 ': 85}
aux_vars_dict {'.def_647 ': '( = hpp_0 1 ) ', '.def_650 ': '( = npp_0 0 ) ', '.def_652 ': '( not ( = ctpp_0 1 ) ) '}
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( not ( = ctpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctpp_0 1 ) ) 
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( not ( = ctpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctpp_0 1 ) ) 
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( not ( = ctpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctpp_0 1 ) ) 
aux_vars_subs_dict  {'.def_647 ': '( = hpp_0 1 ) ', '.def_650 ': '( = npp_0 0 ) ', '.def_652 ': '( not ( = ctpp_0 1 ) ) '}
{20: 32, 9: 34, 7: 36, 57: 69, 46: 71, 44: 73, 100: 113, 94: 115, 83: 117, 81: 119, 148: 162, 142: 164, 186: 210, 218: 233, 247: 259, 241: 261, 309: 318, 320: 336, 305: 338, 296: 340, 290: 342, 379: 388, 390: 406, 375: 408, 366: 410, 356: 412, 414: 428, 350: 430, 344: 432, 284: 434, 278: 436, 263: 438, 235: 440, 212: 442, 181: 444, 166: 446, 136: 448, 121: 450, 75: 452, 38: 454, 1: 456}
{21: 33, 10: 35, 8: 37, 64: 77, 58: 79, 47: 81, 45: 83, 112: 126, 106: 128, 150: 174, 182: 197, 211: 223, 205: 225, 273: 282, 284: 300, 269: 302, 260: 304, 254: 306, 343: 352, 354: 370, 339: 372, 330: 374, 320: 376, 378: 392, 314: 394, 308: 396, 248: 398, 242: 400, 227: 402, 199: 404, 176: 406, 145: 408, 130: 410, 100: 412, 85: 414, 39: 416, 2: 418}
{28: 41, 22: 43, 11: 45, 9: 47, 76: 90, 70: 92, 114: 138, 146: 161, 175: 187, 169: 189, 237: 246, 248: 264, 233: 266, 224: 268, 218: 270, 307: 316, 318: 334, 303: 336, 294: 338, 284: 340, 342: 356, 278: 358, 272: 360, 212: 362, 206: 364, 191: 366, 163: 368, 140: 370, 109: 372, 94: 374, 64: 376, 49: 378, 3: 380}
remove lets from formula
final_formula  ( and .def_647 ( and ( not ( = endpp_0 1 ) ) ( and .def_647 ( or ( and .def_650 .def_652 ) ( and ( not .def_650 ) ( and ( not ( = hpp_1 1 ) ) ( and .def_652 ( not ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ( not ( and ( = npp_1 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ( <= ctpp_1 1 ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hpp_0 1 ) ( and ( not ( = endpp_0 1 ) ) ( and ( = hpp_0 1 ) ( or ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ( and ( not ( = npp_0 0 ) ) ( and ( not ( = hpp_1 1 ) ) ( and ( not ( = ctpp_0 1 ) ) ( not ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ( not ( and ( = npp_1 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ( <= ctpp_1 1 ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 33, 9: 35, 7: 37, 58: 71, 47: 73, 45: 75, 102: 116, 96: 118, 85: 120, 83: 122, 151: 166, 145: 168, 190: 214, 222: 237, 285: 294, 296: 313, 281: 315, 272: 317, 266: 319, 327: 342, 321: 344, 260: 346, 254: 348, 239: 350, 216: 352, 185: 354, 170: 356, 139: 358, 124: 360, 77: 362, 39: 364, 1: 366}
aux_vars_first_occ_dict {'.def_239 ': 11, '.def_240 ': 49, '.def_689 ': 87}
aux_vars_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_689 ': '( not ( = ctppp_0 1 ) ) '}
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( not ( = ctppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctppp_0 1 ) ) 
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( not ( = ctppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctppp_0 1 ) ) 
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( not ( = ctppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctppp_0 1 ) ) 
aux_vars_subs_dict  {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_689 ': '( not ( = ctppp_0 1 ) ) '}
{20: 33, 9: 35, 7: 37, 58: 71, 47: 73, 45: 75, 102: 116, 96: 118, 85: 120, 83: 122, 151: 166, 145: 168, 190: 214, 222: 237, 285: 294, 296: 313, 281: 315, 272: 317, 266: 319, 327: 342, 321: 344, 260: 346, 254: 348, 239: 350, 216: 352, 185: 354, 170: 356, 139: 358, 124: 360, 77: 362, 39: 364, 1: 366}
{21: 34, 10: 36, 8: 38, 65: 79, 59: 81, 48: 83, 46: 85, 114: 129, 108: 131, 153: 177, 185: 200, 248: 257, 259: 276, 244: 278, 235: 280, 229: 282, 290: 305, 284: 307, 223: 309, 217: 311, 202: 313, 179: 315, 148: 317, 133: 319, 102: 321, 87: 323, 40: 325, 2: 327}
{28: 42, 22: 44, 11: 46, 9: 48, 77: 92, 71: 94, 116: 140, 148: 163, 211: 220, 222: 239, 207: 241, 198: 243, 192: 245, 253: 268, 247: 270, 186: 272, 180: 274, 165: 276, 142: 278, 111: 280, 96: 282, 65: 284, 50: 286, 3: 288}
remove lets from formula
final_formula  ( and .def_239 ( and ( not ( = endppp_0 1 ) ) ( and .def_239 ( or ( and .def_240 .def_689 ) ( and ( not .def_240 ) ( and .def_689 ( not ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real nppp_0 ) ) ) ) ( not ( <= ctppp_1 1 ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hppp_0 1 ) ( and ( not ( = endppp_0 1 ) ) ( and ( = hppp_0 1 ) ( or ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ( and ( not ( = nppp_0 0 ) ) ( and ( not ( = ctppp_0 1 ) ) ( not ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real nppp_0 ) ) ) ) ( not ( <= ctppp_1 1 ) ) ) ) ) ) ) ) ) ) ']
new_pred_smt_format []
Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
n0_eq_n1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
n0_eq_n1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[2]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[0]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_0_0, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
abs_end_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_end_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_end_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_0_0, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[0]


37 SMT queries performed.
after complete_trace [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[-1]


------------------------check_spuriousness-------------------------------
SEARCHING A CONCRETE CEX TRACE FROM ABOVE ABSTRACT CEX: 
--------------------------------------------------
Initial concrete state :  {'n_1': 10, 'ct_1_1': False, 'ct_0_1': True, 'abs_end_1': False, 'abs_h_1': False, 'ct_1_0': False, 'ct_0_0': True, 'abs_end_0': False, 'abs_h_0': True, 'p_synth_6': True, 'p_synth_5': False, 'pred_0_synth_msat_4': True, 'pred_0_synth_msat_3': False, 'pred_0_synth_msat_2': True, 'pred_0_synth_msat_1': False, 'ct0_eq_ct1': True, 'n0_eq_n1': True, 'h_1': 0, 'h_0': 1, 'n_0': 10, 'end_1': 0, 'ct_1': 0, 'end_0': 0, 'ct_0': 0}



Next concrete state :  {'end_1': 0, 'n_1': 1, 'ct_1': 1, 'ct_0': 0, 'h_0': 1, 'n_0': 10, 'end_0': 0, 'h_1': 0}



Next concrete state :  {'end_1': 0, 'n_1': 0, 'ct_1': 2, 'ct_0': 0, 'h_0': 1, 'n_0': 10, 'end_0': 0, 'h_1': 0}



Next concrete state :  {'end_1': 1, 'n_1': 0, 'ct_1': 2, 'ct_0': 0, 'h_0': 1, 'n_0': 10, 'end_0': 0, 'h_1': 0}



Next concrete state :  {'end_0': 0, 'n_0': 1, 'ct_0': 0, 'ct_1': 2, 'h_1': 0, 'n_1': 0, 'end_1': 1, 'h_0': 1}



Is the trace spurious?  True
Discovering predicate from a_src, a_tgt, c_src, c_tgt to eliminate spurious trace
----------------------pred_disc-------------------
Running quantifier elimination: 
New predicate is  (let ((a!1 (and (= 0 (div nU0 10)) (= nU1 0) (<= (+ nU1 (* (- 1) nU0)) (- 1)))))

  (not a!1))

Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied. 37 16 True ['(declare-rel p_synth_7 (Int Int Int Int))\n (rule (=>   (and  (= 0  (div (rel n 0) 10 ) )  (= (rel n 1) 0 )  (<=  (+ (rel n 1)  (*  (- 1 ) (rel n 0) ) )  (- 1 ) ) ) (p_synth_7 end n h ct)))']
Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied.
Pre-processing time:	0.128569 
Solver time:	40.047309
Total time:	40.175878
Iteration count:	37
Predicate count:	16
Successfully added new predicate to input file. !
Start next refinement loop: True



PDSC: Verifying ./Benchmarks_msat/puzzle_2.smt2
Namespace(file='./Benchmarks_msat/puzzle_2.smt2', log=False, msat=True, property=None, qe=False, sygus=False)
In if ladder True
Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
n0_eq_n1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[2]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[0]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
p_synth_7, ]
--->[2]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
p_synth_7, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, ]
--->[2]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
p_synth_7, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, ]
--->[0]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, ]
--->[2]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
p_synth_7, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[0]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[0]

[abs_h_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[0]

[abs_h_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[1]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[0]


55 SMT queries performed.
before complete_trace: [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[1]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[0]


after complete_trace [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[1]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
p_synth_7, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[-1]


-----------------------------------check_spur-------------------------------
final init cond And(And(0 == ct_0, end_0 == 0),
    And(0 == ct_1, end_1 == 0),
    And(n_0 == n_1, h_0 == 1, h_1 == 0))
Initial concrete state  {'n_1': 10, 'ct_1_1': False, 'ct_0_1': True, 'abs_end_1': False, 'abs_h_1': False, 'ct_1_0': False, 'ct_0_0': True, 'abs_end_0': False, 'abs_h_0': True, 'p_synth_7': False, 'p_synth_6': True, 'p_synth_5': False, 'pred_0_synth_msat_4': True, 'pred_0_synth_msat_3': False, 'pred_0_synth_msat_2': True, 'pred_0_synth_msat_1': False, 'ct0_eq_ct1': True, 'n0_eq_n1': True, 'h_1': 0, 'h_0': 1, 'n_0': 10, 'end_1': 0, 'ct_1': 0, 'end_0': 0, 'ct_0': 0}
Next concrete state {'end_1': 0, 'n_1': 1, 'ct_1': 1, 'ct_0': 0, 'h_0': 1, 'n_0': 10, 'end_0': 0, 'h_1': 0}
Next concrete state {'end_1': 0, 'n_1': 0, 'ct_1': 2, 'ct_0': 0, 'h_0': 1, 'n_0': 10, 'end_0': 0, 'h_1': 0}
Writing an smt file to be run using mathsat
Checking output from mathsat 5
hi
paren_dict {19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 95: 105, 89: 107, 79: 109, 77: 111, 138: 149, 132: 151, 121: 153, 119: 155, 183: 195, 177: 197, 225: 237, 219: 239, 275: 298, 357: 369, 343: 371, 328: 373, 314: 375, 300: 377, 269: 379, 255: 381, 241: 383, 213: 385, 199: 387, 171: 389, 157: 391, 113: 393, 71: 395, 37: 397, 1: 399}
aux_vars_first_occ_dict {'.def_21 ': 11, '.def_24 ': 47, '.def_81 ': 81, '.def_623 ': 123}
aux_vars_dict {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_623 ': '( not ( = ct_0 1 ) ) '}
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
subs1 ( not ( = ct_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ct_0 1 ) ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
subs1 ( = h_0 1 ) 
remove lets from formula
subs2 ( = h_0 1 ) 
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( not ( = ct_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ct_0 1 ) ) 
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
subs1 ( not ( = h_1 1 ) ) 
remove lets from formula
subs2 ( not ( = h_1 1 ) ) 
subs1 ( not ( = ct_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ct_0 1 ) ) 
subs1 ( = n_0 n_1 ) 
remove lets from formula
subs2 ( = n_0 n_1 ) 
aux_vars_subs_dict  {'.def_21 ': '( = n_0 n_1 ) ', '.def_24 ': '( = h_0 1 ) ', '.def_81 ': '( not ( = h_1 1 ) ) ', '.def_623 ': '( not ( = ct_0 1 ) ) '}
{19: 31, 9: 33, 7: 35, 55: 65, 45: 67, 43: 69, 95: 105, 89: 107, 79: 109, 77: 111, 138: 149, 132: 151, 121: 153, 119: 155, 183: 195, 177: 197, 225: 237, 219: 239, 275: 298, 357: 369, 343: 371, 328: 373, 314: 375, 300: 377, 269: 379, 255: 381, 241: 383, 213: 385, 199: 387, 171: 389, 157: 391, 113: 393, 71: 395, 37: 397, 1: 399}
{20: 30, 10: 32, 8: 34, 60: 70, 54: 72, 44: 74, 42: 76, 103: 114, 97: 116, 86: 118, 84: 120, 148: 160, 142: 162, 190: 202, 184: 204, 240: 263, 322: 334, 308: 336, 293: 338, 279: 340, 265: 342, 234: 344, 220: 346, 206: 348, 178: 350, 164: 352, 136: 354, 122: 356, 78: 358, 36: 360, 2: 362}
{27: 37, 21: 39, 11: 41, 9: 43, 70: 81, 64: 83, 53: 85, 51: 87, 115: 127, 109: 129, 157: 169, 151: 171, 207: 230, 289: 301, 275: 303, 260: 305, 246: 307, 232: 309, 201: 311, 187: 313, 173: 315, 145: 317, 131: 319, 103: 321, 89: 323, 45: 325, 3: 327}
{29: 40, 23: 42, 12: 44, 10: 46, 74: 86, 68: 88, 116: 128, 110: 130, 166: 189, 248: 260, 234: 262, 219: 264, 205: 266, 191: 268, 160: 270, 146: 272, 132: 274, 104: 276, 90: 278, 62: 280, 48: 282, 4: 284}
remove lets from formula
final_formula  ( and .def_24 ( and ( not ( = end_1 1 ) ) ( and .def_81 ( and ( not ( = end_0 1 ) ) ( and .def_81 ( and .def_24 ( and ( and .def_21 .def_623 ) ( and .def_21 ( and .def_81 ( and .def_623 ( and .def_21 ( <= ct_1 0 ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = h_0 1 ) ( and ( not ( = end_1 1 ) ) ( and ( not ( = h_1 1 ) ) ( and ( not ( = end_0 1 ) ) ( and ( not ( = h_1 1 ) ) ( and ( = h_0 1 ) ( and ( and ( = n_0 n_1 ) ( not ( = ct_0 1 ) ) ) ( and ( = n_0 n_1 ) ( and ( not ( = h_1 1 ) ) ( and ( not ( = ct_0 1 ) ) ( and ( = n_0 n_1 ) ( <= ct_1 0 ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {26: 37, 20: 39, 9: 41, 7: 43, 64: 75, 53: 77, 51: 79, 100: 111, 89: 113, 87: 115, 142: 154, 136: 156, 125: 158, 123: 160, 189: 202, 183: 204, 241: 265, 273: 288, 302: 315, 296: 317, 377: 386, 388: 403, 373: 405, 364: 407, 355: 409, 411: 424, 349: 426, 334: 428, 319: 430, 290: 432, 267: 434, 236: 436, 221: 438, 206: 440, 177: 442, 162: 444, 117: 446, 81: 448, 45: 450, 1: 452}
aux_vars_first_occ_dict {'.def_148 ': 11, '.def_650 ': 55, '.def_653 ': 91, '.def_655 ': 127}
aux_vars_dict {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_650 ': '( = hp_0 1 ) ', '.def_653 ': '( = np_0 0 ) ', '.def_655 ': '( not ( = ctp_0 1 ) ) '}
subs1 ( not ( = hp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = hp_1 1 ) ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( not ( = ctp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctp_0 1 ) ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( not ( = hp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = hp_1 1 ) ) 
subs1 ( = hp_0 1 ) 
remove lets from formula
subs2 ( = hp_0 1 ) 
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( not ( = ctp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctp_0 1 ) ) 
subs1 ( = np_0 0 ) 
remove lets from formula
subs2 ( = np_0 0 ) 
subs1 ( not ( = hp_1 1 ) ) 
remove lets from formula
subs2 ( not ( = hp_1 1 ) ) 
subs1 ( not ( = ctp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctp_0 1 ) ) 
aux_vars_subs_dict  {'.def_148 ': '( not ( = hp_1 1 ) ) ', '.def_650 ': '( = hp_0 1 ) ', '.def_653 ': '( = np_0 0 ) ', '.def_655 ': '( not ( = ctp_0 1 ) ) '}
{26: 37, 20: 39, 9: 41, 7: 43, 64: 75, 53: 77, 51: 79, 100: 111, 89: 113, 87: 115, 142: 154, 136: 156, 125: 158, 123: 160, 189: 202, 183: 204, 241: 265, 273: 288, 302: 315, 296: 317, 377: 386, 388: 403, 373: 405, 364: 407, 355: 409, 411: 424, 349: 426, 334: 428, 319: 430, 290: 432, 267: 434, 236: 436, 221: 438, 206: 440, 177: 442, 162: 444, 117: 446, 81: 448, 45: 450, 1: 452}
{21: 32, 10: 34, 8: 36, 57: 68, 46: 70, 44: 72, 99: 111, 93: 113, 82: 115, 80: 117, 146: 159, 140: 161, 198: 222, 230: 245, 259: 272, 253: 274, 334: 343, 345: 360, 330: 362, 321: 364, 312: 366, 368: 381, 306: 383, 291: 385, 276: 387, 247: 389, 224: 391, 193: 393, 178: 395, 163: 397, 134: 399, 119: 401, 74: 403, 38: 405, 2: 407}
{22: 33, 11: 35, 9: 37, 64: 76, 58: 78, 47: 80, 45: 82, 111: 124, 105: 126, 163: 187, 195: 210, 224: 237, 218: 239, 299: 308, 310: 325, 295: 327, 286: 329, 277: 331, 333: 346, 271: 348, 256: 350, 241: 352, 212: 354, 189: 356, 158: 358, 143: 360, 128: 362, 99: 364, 84: 366, 39: 368, 3: 370}
{29: 41, 23: 43, 12: 45, 10: 47, 76: 89, 70: 91, 128: 152, 160: 175, 189: 202, 183: 204, 264: 273, 275: 290, 260: 292, 251: 294, 242: 296, 298: 311, 236: 313, 221: 315, 206: 317, 177: 319, 154: 321, 123: 323, 108: 325, 93: 327, 64: 329, 49: 331, 4: 333}
remove lets from formula
final_formula  ( and .def_650 ( and ( not ( = endp_0 1 ) ) ( and .def_148 ( and .def_650 ( or ( and .def_653 .def_655 ) ( and ( not .def_653 ) ( and ( not ( = endp_1 1 ) ) ( and .def_148 ( and .def_655 ( and ( = np_1 ( to_int ( * ( / 1 10 ) ( to_real np_0 ) ) ) ) ( <= ctp_1 1 ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hp_0 1 ) ( and ( not ( = endp_0 1 ) ) ( and ( not ( = hp_1 1 ) ) ( and ( = hp_0 1 ) ( or ( and ( = np_0 0 ) ( not ( = ctp_0 1 ) ) ) ( and ( not ( = np_0 0 ) ) ( and ( not ( = endp_1 1 ) ) ( and ( not ( = hp_1 1 ) ) ( and ( not ( = ctp_0 1 ) ) ( and ( = np_1 ( to_int ( * ( / 1 10 ) ( to_real np_0 ) ) ) ) ( <= ctp_1 1 ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 32, 9: 34, 7: 36, 57: 69, 46: 71, 44: 73, 100: 113, 94: 115, 83: 117, 81: 119, 148: 162, 142: 164, 186: 210, 218: 233, 247: 259, 241: 261, 309: 318, 320: 336, 305: 338, 296: 340, 290: 342, 379: 388, 390: 406, 375: 408, 366: 410, 356: 412, 414: 428, 350: 430, 344: 432, 284: 434, 278: 436, 263: 438, 235: 440, 212: 442, 181: 444, 166: 446, 136: 448, 121: 450, 75: 452, 38: 454, 1: 456}
aux_vars_first_occ_dict {'.def_688 ': 11, '.def_691 ': 48, '.def_693 ': 85}
aux_vars_dict {'.def_688 ': '( = hpp_0 1 ) ', '.def_691 ': '( = npp_0 0 ) ', '.def_693 ': '( not ( = ctpp_0 1 ) ) '}
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( not ( = ctpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctpp_0 1 ) ) 
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( = hpp_0 1 ) 
remove lets from formula
subs2 ( = hpp_0 1 ) 
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( not ( = ctpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctpp_0 1 ) ) 
subs1 ( = npp_0 0 ) 
remove lets from formula
subs2 ( = npp_0 0 ) 
subs1 ( not ( = ctpp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctpp_0 1 ) ) 
aux_vars_subs_dict  {'.def_688 ': '( = hpp_0 1 ) ', '.def_691 ': '( = npp_0 0 ) ', '.def_693 ': '( not ( = ctpp_0 1 ) ) '}
{20: 32, 9: 34, 7: 36, 57: 69, 46: 71, 44: 73, 100: 113, 94: 115, 83: 117, 81: 119, 148: 162, 142: 164, 186: 210, 218: 233, 247: 259, 241: 261, 309: 318, 320: 336, 305: 338, 296: 340, 290: 342, 379: 388, 390: 406, 375: 408, 366: 410, 356: 412, 414: 428, 350: 430, 344: 432, 284: 434, 278: 436, 263: 438, 235: 440, 212: 442, 181: 444, 166: 446, 136: 448, 121: 450, 75: 452, 38: 454, 1: 456}
{21: 33, 10: 35, 8: 37, 64: 77, 58: 79, 47: 81, 45: 83, 112: 126, 106: 128, 150: 174, 182: 197, 211: 223, 205: 225, 273: 282, 284: 300, 269: 302, 260: 304, 254: 306, 343: 352, 354: 370, 339: 372, 330: 374, 320: 376, 378: 392, 314: 394, 308: 396, 248: 398, 242: 400, 227: 402, 199: 404, 176: 406, 145: 408, 130: 410, 100: 412, 85: 414, 39: 416, 2: 418}
{28: 41, 22: 43, 11: 45, 9: 47, 76: 90, 70: 92, 114: 138, 146: 161, 175: 187, 169: 189, 237: 246, 248: 264, 233: 266, 224: 268, 218: 270, 307: 316, 318: 334, 303: 336, 294: 338, 284: 340, 342: 356, 278: 358, 272: 360, 212: 362, 206: 364, 191: 366, 163: 368, 140: 370, 109: 372, 94: 374, 64: 376, 49: 378, 3: 380}
remove lets from formula
final_formula  ( and .def_688 ( and ( not ( = endpp_0 1 ) ) ( and .def_688 ( or ( and .def_691 .def_693 ) ( and ( not .def_691 ) ( and ( not ( = hpp_1 1 ) ) ( and .def_693 ( not ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ( not ( and ( = npp_1 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ( <= ctpp_1 1 ) ) ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hpp_0 1 ) ( and ( not ( = endpp_0 1 ) ) ( and ( = hpp_0 1 ) ( or ( and ( = npp_0 0 ) ( not ( = ctpp_0 1 ) ) ) ( and ( not ( = npp_0 0 ) ) ( and ( not ( = hpp_1 1 ) ) ( and ( not ( = ctpp_0 1 ) ) ( not ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ( not ( and ( = npp_1 ( to_int ( * ( / 1 10 ) ( to_real npp_0 ) ) ) ) ( <= ctpp_1 1 ) ) ) ) ) ) ) ) ) ) ) ) ']
hi
paren_dict {20: 33, 9: 35, 7: 37, 58: 71, 47: 73, 45: 75, 102: 116, 96: 118, 85: 120, 83: 122, 151: 166, 145: 168, 190: 214, 222: 237, 285: 294, 296: 313, 281: 315, 272: 317, 266: 319, 327: 342, 321: 344, 260: 346, 254: 348, 239: 350, 216: 352, 185: 354, 170: 356, 139: 358, 124: 360, 77: 362, 39: 364, 1: 366}
aux_vars_first_occ_dict {'.def_239 ': 11, '.def_240 ': 49, '.def_730 ': 87}
aux_vars_dict {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_730 ': '( not ( = ctppp_0 1 ) ) '}
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( not ( = ctppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctppp_0 1 ) ) 
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( = hppp_0 1 ) 
remove lets from formula
subs2 ( = hppp_0 1 ) 
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( not ( = ctppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctppp_0 1 ) ) 
subs1 ( = nppp_0 0 ) 
remove lets from formula
subs2 ( = nppp_0 0 ) 
subs1 ( not ( = ctppp_0 1 ) ) 
remove lets from formula
subs2 ( not ( = ctppp_0 1 ) ) 
aux_vars_subs_dict  {'.def_239 ': '( = hppp_0 1 ) ', '.def_240 ': '( = nppp_0 0 ) ', '.def_730 ': '( not ( = ctppp_0 1 ) ) '}
{20: 33, 9: 35, 7: 37, 58: 71, 47: 73, 45: 75, 102: 116, 96: 118, 85: 120, 83: 122, 151: 166, 145: 168, 190: 214, 222: 237, 285: 294, 296: 313, 281: 315, 272: 317, 266: 319, 327: 342, 321: 344, 260: 346, 254: 348, 239: 350, 216: 352, 185: 354, 170: 356, 139: 358, 124: 360, 77: 362, 39: 364, 1: 366}
{21: 34, 10: 36, 8: 38, 65: 79, 59: 81, 48: 83, 46: 85, 114: 129, 108: 131, 153: 177, 185: 200, 248: 257, 259: 276, 244: 278, 235: 280, 229: 282, 290: 305, 284: 307, 223: 309, 217: 311, 202: 313, 179: 315, 148: 317, 133: 319, 102: 321, 87: 323, 40: 325, 2: 327}
{28: 42, 22: 44, 11: 46, 9: 48, 77: 92, 71: 94, 116: 140, 148: 163, 211: 220, 222: 239, 207: 241, 198: 243, 192: 245, 253: 268, 247: 270, 186: 272, 180: 274, 165: 276, 142: 278, 111: 280, 96: 282, 65: 284, 50: 286, 3: 288}
remove lets from formula
final_formula  ( and .def_239 ( and ( not ( = endppp_0 1 ) ) ( and .def_239 ( or ( and .def_240 .def_730 ) ( and ( not .def_240 ) ( and .def_730 ( not ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real nppp_0 ) ) ) ) ( not ( <= ctppp_1 1 ) ) ) ) ) ) ) ) ) ) 
[' ( and ( = hppp_0 1 ) ( and ( not ( = endppp_0 1 ) ) ( and ( = hppp_0 1 ) ( or ( and ( = nppp_0 0 ) ( not ( = ctppp_0 1 ) ) ) ( and ( not ( = nppp_0 0 ) ) ( and ( not ( = ctppp_0 1 ) ) ( not ( and ( = 0 ( to_int ( * ( / 1 10 ) ( to_real nppp_0 ) ) ) ) ( not ( <= ctppp_1 1 ) ) ) ) ) ) ) ) ) ) ']
new_pred_smt_format []
Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
n0_eq_n1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
n0_eq_n1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[2]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
p_synth_7, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[0]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_0_0, 
p_synth_7, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
p_synth_7, ]
--->[2]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
abs_end_1, 
p_synth_7, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
p_synth_7, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
abs_end_1, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, ]
--->[2]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
p_synth_7, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, ]
--->[0]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_end_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_end_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct0_eq_ct1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, ]
--->[2]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
p_synth_7, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
abs_end_1, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[0]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_end_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[0]

[abs_h_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[0]

[abs_h_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[1]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[0]


55 SMT queries performed.
after complete_trace [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[1]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
p_synth_7, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[-1]


------------------------check_spuriousness-------------------------------
SEARCHING A CONCRETE CEX TRACE FROM ABOVE ABSTRACT CEX: 
--------------------------------------------------
Initial concrete state :  {'n_1': 10, 'ct_1_1': False, 'ct_0_1': True, 'abs_end_1': False, 'abs_h_1': False, 'ct_1_0': False, 'ct_0_0': True, 'abs_end_0': False, 'abs_h_0': True, 'p_synth_7': False, 'p_synth_6': True, 'p_synth_5': False, 'pred_0_synth_msat_4': True, 'pred_0_synth_msat_3': False, 'pred_0_synth_msat_2': True, 'pred_0_synth_msat_1': False, 'ct0_eq_ct1': True, 'n0_eq_n1': True, 'h_1': 0, 'h_0': 1, 'n_0': 10, 'end_1': 0, 'ct_1': 0, 'end_0': 0, 'ct_0': 0}



Next concrete state :  {'end_1': 0, 'n_1': 1, 'ct_1': 1, 'ct_0': 0, 'h_0': 1, 'n_0': 10, 'end_0': 0, 'h_1': 0}



Next concrete state :  {'end_1': 0, 'n_1': 0, 'ct_1': 2, 'ct_0': 0, 'h_0': 1, 'n_0': 10, 'end_0': 0, 'h_1': 0}



Is the trace spurious?  True
Discovering predicate from a_src, a_tgt, c_src, c_tgt to eliminate spurious trace
----------------------pred_disc-------------------
Running quantifier elimination: 
New predicate is  (not (and (>= nU0 1)

          (= (div nU1 10) 0)

          (not (= nU1 0))

          (= (div nU0 10) 0)

          (not (= nU0 nU1))))

Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied. 55 17 True ['(declare-rel p_synth_8 (Int Int Int Int))\n (rule (=>   (and  (>= (rel n 0) 1 )\n\n           (=  (div (rel n 1) 10 ) 0 )\n\n           (not  (= (rel n 1) 0 ) )\n\n           (=  (div (rel n 0) 10 ) 0 )\n\n           (not  (= (rel n 0) (rel n 1) ) ) )  (p_synth_8 end n h ct)))']
Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied.
Pre-processing time:	0.140427 
Solver time:	74.684506
Total time:	74.824933
Iteration count:	55
Predicate count:	17
Successfully added new predicate to input file. !
Start next refinement loop: True



PDSC: Verifying ./Benchmarks_msat/puzzle_2.smt2
Namespace(file='./Benchmarks_msat/puzzle_2.smt2', log=False, msat=True, property=None, qe=False, sygus=False)
In if ladder True
Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
n0_eq_n1, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
n0_eq_n1, ]
--->[0]

[abs_h_0, 
ct_1_0, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[2]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[0]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
p_synth_7, ]
--->[2]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
p_synth_7, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[1]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[0]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[2]

[abs_h_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[0]

[abs_h_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[2]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[0]

[abs_h_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[2]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[2]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_7, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[2]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[0]

[abs_h_0, 
ct_1_0, 
ct_0_1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_1_0, 
ct_1_1, 
ct0_eq_ct1, 
pred_0_synth_msat_1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_0_1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[0]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
n0_eq_n1, 
pred_0_synth_msat_4, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[1]

[abs_h_0, 
ct_0_0, 
p_synth_5, ]
--->[2]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[2]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
p_synth_7, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[0]

[abs_h_0, 
ct_0_0, 
p_synth_7, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[1]

[abs_h_0, 
ct_0_0, 
p_synth_5, 
p_synth_8, ]
--->[2]

[abs_h_0, 
ct_1_0, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[2]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
p_synth_7, ]
--->[0]


Counter-example trace:
[abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[0]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
p_synth_7, ]
--->[0]


53 SMT queries performed.
before complete_trace: [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[0]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
p_synth_7, ]
--->[0]


after complete_trace [abs_h_0, 
ct_0_0, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, 
pred_0_synth_msat_2, 
pred_0_synth_msat_4, 
p_synth_6, ]
--->[1]

[abs_h_0, 
ct_0_0, 
ct_1_1, 
pred_0_synth_msat_4, 
p_synth_5, ]
--->[1]

[abs_h_0, 
ct_0_0, ]
--->[1]

[abs_h_0, 
ct_0_0, 
abs_end_1, ]
--->[0]

[abs_h_0, 
ct_0_0, 
abs_end_1, 
p_synth_7, ]
--->[0]

[abs_h_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[0]

[abs_h_0, 
abs_end_0, 
ct_1_0, 
abs_end_1, 
n0_eq_n1, 
pred_0_synth_msat_1, ]
--->[-1]


-----------------------------------check_spur-------------------------------
final init cond And(And(0 == ct_0, end_0 == 0),
    And(0 == ct_1, end_1 == 0),
    And(n_0 == n_1, h_0 == 1, h_1 == 0))
Initial concrete state  {'n_1': 10, 'ct_1_1': False, 'ct_0_1': True, 'abs_end_1': False, 'abs_h_1': False, 'ct_1_0': False, 'ct_0_0': True, 'abs_end_0': False, 'abs_h_0': True, 'p_synth_8': False, 'p_synth_7': False, 'p_synth_6': True, 'p_synth_5': False, 'pred_0_synth_msat_4': True, 'pred_0_synth_msat_3': False, 'pred_0_synth_msat_2': True, 'pred_0_synth_msat_1': False, 'ct0_eq_ct1': True, 'n0_eq_n1': True, 'h_1': 0, 'h_0': 1, 'n_0': 10, 'end_1': 0, 'ct_1': 0, 'end_0': 0, 'ct_0': 0}
Next concrete state {'end_1': 0, 'n_1': 1, 'ct_1': 1, 'ct_0': 0, 'h_0': 1, 'n_0': 10, 'end_0': 0, 'h_1': 0}
Next concrete state {'end_1': 0, 'n_1': 0, 'ct_1': 2, 'ct_0': 0, 'h_0': 1, 'n_0': 10, 'end_0': 0, 'h_1': 0}
Next concrete state {'end_1': 1, 'n_1': 0, 'ct_1': 2, 'ct_0': 0, 'h_0': 1, 'n_0': 10, 'end_0': 0, 'h_1': 0}
Next concrete state {'end_0': 0, 'n_0': 1, 'ct_0': 0, 'ct_1': 2, 'h_1': 0, 'n_1': 0, 'end_1': 1, 'h_0': 1}
Next concrete state {'end_0': 0, 'n_0': 0, 'ct_0': 1, 'ct_1': 2, 'h_1': 0, 'n_1': 0, 'end_1': 1, 'h_0': 1}
Next concrete state {'end_0': 1, 'n_0': 0, 'ct_0': 1, 'ct_1': 2, 'h_1': 0, 'n_1': 0, 'end_1': 1, 'h_0': 1}
Trace is not spurious
Real cex. Program Unsafe.
Pre-processing time:	0.16146 
Solver time:	37.427806
Total time:	37.589265999999995
Iteration count:	53
Predicate count:	18
Start next refinement loop: False



Total time taken : 225.838144
Number of predicates guessed: 8.0
