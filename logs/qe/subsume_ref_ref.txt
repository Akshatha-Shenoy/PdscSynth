PDSC: Verifying ./Benchmarks_qe/subsume_ref_ref.smt2
Namespace(file='./Benchmarks_qe/subsume_ref_ref.smt2', log=False, msat=False, property=None, qe=True, sygus=False)
Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, ]
--->[2]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_h_1, 
x0_eq_x1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
count_0_1, ]
--->[2]

[abs_h_0, 
abs_h_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
abs_h_1, 
count_0_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
count_0_1, ]
--->[1]

[abs_h_0, 
abs_h_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, ]
--->[2]

[abs_h_0, 
abs_h_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
count_0_0, 
abs_h_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, ]
--->[0]


6 SMT queries performed.
after complete_trace [abs_h_0, 
count_0_0, 
abs_h_1, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
abs_h_1, ]
--->[0]

[abs_h_0, 
abs_h_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
abs_h_1, ]
--->[-1]


------------------------check_spuriousness-------------------------------
SEARCHING A CONCRETE CEX TRACE FROM ABOVE ABSTRACT CEX: 
--------------------------------------------------
Initial concrete state :  {'count_0_1': True, 'abs_h_1': True, 'count_0_0': True, 'abs_h_0': True, 'x0_eq_x1': True, 'h_1': 1, 'h_0': 1, 'x_1': 0, 'x_0': 0, 'count_1': 0, 'count_0': 0}



Next concrete state :  {'count_1': 1, 'x_1': 8, 'count_0': 0, 'h_0': 1, 'x_0': 0, 'h_1': 1}



Next concrete state :  {'count_0': 1, 'x_0': 8, 'count_1': 1, 'h_1': 1, 'x_1': 8, 'h_0': 1}



Next concrete state :  {'x_1': 8, 'count_0': 1, 'x_0': 8, 'count_1': 1, 'h_1': 1, 'h_0': 1}



Is the trace spurious?  True
Discovering predicate from a_src, a_tgt, c_src, c_tgt to eliminate spurious trace
----------------------pred_disc-------------------
Running quantifier elimination: 
New predicate is  (let ((a!1 (and (= xU0 xU1) (or (= 0 (mod xU0 7)) (= xU0 1009) (= xU1 383)))))

  (not a!1))

Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied.
Pre-processing time:	0.045527 
Solver time:	2.347881
Total time:	2.393408
Iteration count:	6
Predicate count:	5
Successfully added new predicate to input file. !
PDSC: Verifying ./Benchmarks_qe/subsume_ref_ref.smt2
Namespace(file='./Benchmarks_qe/subsume_ref_ref.smt2', log=False, msat=False, property=None, qe=True, sygus=False)
1 SMT queries performed.
Proved by invariant:
And(abs_h_0,
    abs_h_1,
    x0_eq_x1,
    Or(Not(p_synth_1), count_0_1),
    Or(Not(p_synth_1), count_0_0))
Pre-processing time:	0.05866 
Solver time:	0.043414
Total time:	0.102074
Iteration count:	1
Predicate count:	6
Start next refinement loop: False



Total time taken : 2.495735
Number of predicates guessed: 1.0
