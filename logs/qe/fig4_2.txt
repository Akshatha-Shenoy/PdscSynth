PDSC: Verifying ./Benchmarks_qe/fig4_2.smt2
Namespace(file='./Benchmarks_qe/fig4_2.smt2', log=False, msat=False, property=None, qe=True, sygus=False)
Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
count_1_0, 
count_1_1, ]
--->[2]


Blocking composition assignment 2 for state
 [abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
count_1_0, 
count_0_1, ]
--->[2]

[abs_h_0, 
count_1_0, 
count_1_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
count_1_0, 
count_0_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
count_1_0, 
count_0_1, ]
--->[1]

[abs_h_0, 
count_1_0, 
count_1_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
count_1_1, ]
--->[2]

[abs_h_0, 
count_1_0, 
count_1_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
count_0_0, 
count_1_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
count_1_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
count_1_0, 
count_1_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
count_0_0, 
count_1_1, 
x0_eq_x1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
count_1_1, ]
--->[0]

[abs_h_0, 
count_1_0, 
count_1_1, ]
--->[0]


6 SMT queries performed.
after complete_trace [abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
count_1_1, ]
--->[0]

[abs_h_0, 
count_1_0, 
count_1_1, ]
--->[-1]


------------------------check_spuriousness-------------------------------
SEARCHING A CONCRETE CEX TRACE FROM ABOVE ABSTRACT CEX: 
--------------------------------------------------
Initial concrete state :  {'count_1_1': False, 'count_0_1': True, 'abs_h_1': False, 'count_1_0': False, 'count_0_0': True, 'abs_h_0': True, 'x0_eq_x1': True, 'h_1': 0, 'h_0': 1, 'x_1': 0, 'x_0': 0, 'count_1': 0, 'count_0': 0}



Next concrete state :  {'count_1': 1, 'h_1': 0, 'count_0': 0, 'h_0': 1, 'x_0': 0, 'x_1': 42}



Next concrete state :  {'count_0': 1, 'h_0': 1, 'count_1': 1, 'h_1': 0, 'x_1': 42, 'x_0': 42}



Is the trace spurious?  True
Discovering predicate from a_src, a_tgt, c_src, c_tgt to eliminate spurious trace
----------------------pred_disc-------------------
Running quantifier elimination: 
New predicate is  (let ((a!1 (and (not (= xU0 xU1)) (not (= (* (- 1) xU0) (+ (- 42) xU1))))))

  (not a!1))

Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied.
Pre-processing time:	0.048731 
Solver time:	2.448739
Total time:	2.4974700000000003
Iteration count:	6
Predicate count:	7
Successfully added new predicate to input file. !
PDSC: Verifying ./Benchmarks_qe/fig4_2.smt2
Namespace(file='./Benchmarks_qe/fig4_2.smt2', log=False, msat=False, property=None, qe=True, sygus=False)
Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
count_1_0, 
count_1_1, 
p_synth_1, ]
--->[2]


Blocking composition assignment 2 for state
 [abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
count_1_0, 
count_0_1, ]
--->[2]

[abs_h_0, 
count_1_0, 
count_1_1, 
p_synth_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
count_1_0, 
count_0_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
count_1_0, 
count_0_1, ]
--->[1]

[abs_h_0, 
count_1_0, 
count_1_1, 
p_synth_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
count_1_1, 
p_synth_1, ]
--->[2]

[abs_h_0, 
count_1_0, 
count_1_1, 
p_synth_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
count_0_0, 
count_1_1, 
p_synth_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
count_1_1, 
p_synth_1, ]
--->[0]

[abs_h_0, 
count_1_0, 
count_1_1, 
p_synth_1, ]
--->[0]


5 SMT queries performed.
after complete_trace [abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
count_1_1, 
p_synth_1, ]
--->[0]

[abs_h_0, 
count_1_0, 
count_1_1, 
p_synth_1, ]
--->[-1]


------------------------check_spuriousness-------------------------------
SEARCHING A CONCRETE CEX TRACE FROM ABOVE ABSTRACT CEX: 
--------------------------------------------------
Initial concrete state :  {'count_1_1': False, 'count_0_1': True, 'abs_h_1': False, 'count_1_0': False, 'count_0_0': True, 'abs_h_0': True, 'p_synth_1': False, 'x0_eq_x1': True, 'h_1': 0, 'h_0': 1, 'x_1': 0, 'x_0': 0, 'count_1': 0, 'count_0': 0}



Next concrete state :  {'count_1': 1, 'h_1': 0, 'count_0': 0, 'h_0': 1, 'x_0': 0, 'x_1': 42}



Is the trace spurious?  True
Discovering predicate from a_src, a_tgt, c_src, c_tgt to eliminate spurious trace
----------------------pred_disc-------------------
Running quantifier elimination: 
New predicate is  (not (and (= xU0 xU1) (not (= xU0 0)) (not (= xU0 42))))

Failed to find semantic self-composition. Either the property is violated or not enough predicates were supplied.
Pre-processing time:	0.062114 
Solver time:	2.765837
Total time:	2.8279509999999997
Iteration count:	5
Predicate count:	8
Successfully added new predicate to input file. !
Start next refinement loop: True



PDSC: Verifying ./Benchmarks_qe/fig4_2.smt2
Namespace(file='./Benchmarks_qe/fig4_2.smt2', log=False, msat=False, property=None, qe=True, sygus=False)
Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, 
p_synth_2, ]
--->[2]

[abs_h_0, 
count_1_0, 
count_1_1, 
p_synth_1, ]
--->[2]


Blocking composition assignment 2 for state
 [abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, 
p_synth_2, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
count_1_0, 
count_1_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, 
p_synth_2, ]
--->[0]

[abs_h_0, 
count_1_0, 
count_0_1, ]
--->[2]

[abs_h_0, 
count_1_0, 
count_1_1, 
p_synth_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
count_1_0, 
count_0_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, 
p_synth_2, ]
--->[0]

[abs_h_0, 
count_1_0, 
count_0_1, ]
--->[1]

[abs_h_0, 
count_1_0, 
count_1_1, 
p_synth_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, 
p_synth_2, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
count_1_0, 
count_0_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, 
p_synth_2, ]
--->[1]

[abs_h_0, 
count_0_0, 
count_1_1, 
p_synth_1, ]
--->[2]

[abs_h_0, 
count_1_0, 
count_1_1, 
p_synth_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
count_0_0, 
count_1_1, 
p_synth_1, ]


Exploring next composition.. 


Abstract Counter-example trace for current composition:
[abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, 
p_synth_2, ]
--->[1]

[abs_h_0, 
count_0_0, 
count_1_1, 
p_synth_1, ]
--->[0]

[abs_h_0, 
count_1_0, 
count_1_1, 
p_synth_1, ]
--->[0]


7 SMT queries performed.
after complete_trace [abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, 
p_synth_2, ]
--->[1]

[abs_h_0, 
count_0_0, 
count_1_1, 
p_synth_1, ]
--->[0]

[abs_h_0, 
count_1_0, 
count_1_1, 
p_synth_1, ]
--->[-1]


------------------------check_spuriousness-------------------------------
SEARCHING A CONCRETE CEX TRACE FROM ABOVE ABSTRACT CEX: 
--------------------------------------------------
Initial concrete state :  {'x_1': -1, 'count_1_1': False, 'count_0_1': True, 'abs_h_1': False, 'count_1_0': False, 'count_0_0': True, 'abs_h_0': True, 'p_synth_2': True, 'p_synth_1': False, 'x0_eq_x1': True, 'h_1': 0, 'h_0': 1, 'x_0': -1, 'count_1': 0, 'count_0': 0}



Next concrete state :  {'count_1': 1, 'h_1': 0, 'count_0': 0, 'h_0': 1, 'x_0': -1, 'x_1': 42}



Next concrete state :  {'count_0': 1, 'h_0': 1, 'count_1': 1, 'h_1': 0, 'x_1': 42, 'x_0': 43}



Is the trace spurious?  False
Real cex. Program is unsafe.
Start next refinement loop: False



Total time taken : 5.992538
Number of predicates guessed: 2.0
