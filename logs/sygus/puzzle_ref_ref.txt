PDSC: Verifying ./Benchmarks_sygus/puzzle_ref_ref.smt2
Namespace(file='./Benchmarks_sygus/puzzle_ref_ref.smt2', log=False, msat=False, property=None, qe=False, sygus=True)
Exploring new composition...


Current composition gives an abstract counter-example trace:
[m_eq_n_0, 
abs_h_0, 
ct_0_0, 
m_eq_n_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[m_eq_n_0, 
abs_h_0, 
abs_end_0, 
ct_0_0, 
m_eq_n_1, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[m_eq_n_0, 
abs_h_0, 
abs_end_0, 
ct_0_0, 
ct_1_1, ]
--->[2]

[m_eq_n_0, 
abs_h_0, 
abs_end_0, 
ct_0_0, 
abs_end_1, 
ct_1_1, ]
--->[2]


Blocking composition assignment 2 for state
 [m_eq_n_0, 
abs_h_0, 
abs_end_0, 
ct_0_0, 
ct_1_1, ]


Exploring new composition...


Current composition gives an abstract counter-example trace:
[m_eq_n_0, 
abs_h_0, 
ct_0_0, 
m_eq_n_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[m_eq_n_0, 
abs_h_0, 
abs_end_0, 
ct_0_0, 
m_eq_n_1, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[m_eq_n_0, 
abs_h_0, 
ct_1_0, 
m_eq_n_1, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, ]
--->[2]

[m_eq_n_0, 
abs_h_0, 
abs_end_0, 
ct_1_0, 
m_eq_n_1, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, ]
--->[0]


Blocking composition assignment 2 for state
 [m_eq_n_0, 
abs_h_0, 
ct_1_0, 
m_eq_n_1, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, ]


Exploring new composition...


Current composition gives an abstract counter-example trace:
[m_eq_n_0, 
abs_h_0, 
ct_0_0, 
m_eq_n_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[m_eq_n_0, 
abs_h_0, 
abs_end_0, 
ct_0_0, 
m_eq_n_1, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[m_eq_n_0, 
abs_h_0, 
ct_1_0, 
m_eq_n_1, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, ]
--->[0]

[m_eq_n_0, 
abs_h_0, 
abs_end_0, 
ct_1_0, 
m_eq_n_1, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, ]
--->[0]


Blocking composition assignment 2 for state
 [m_eq_n_0, 
abs_h_0, 
abs_end_0, 
ct_0_0, 
m_eq_n_1, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]


Exploring new composition...


Current composition gives an abstract counter-example trace:
[m_eq_n_0, 
abs_h_0, 
ct_0_0, 
m_eq_n_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[m_eq_n_0, 
abs_h_0, 
abs_end_0, 
ct_0_0, 
m_eq_n_1, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[m_eq_n_0, 
abs_h_0, 
ct_1_0, 
m_eq_n_1, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, ]
--->[0]


Blocking composition assignment 2 for state
 [m_eq_n_0, 
abs_h_0, 
ct_0_0, 
m_eq_n_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]


Exploring new composition...


Current composition gives an abstract counter-example trace:
[m_eq_n_0, 
abs_h_0, 
ct_0_0, 
m_eq_n_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[0]

[m_eq_n_0, 
abs_h_0, 
ct_1_0, 
m_eq_n_1, 
ct_0_1, 
n0_eq_n1, ]
--->[2]

[m_eq_n_0, 
abs_h_0, 
abs_end_0, 
ct_1_0, 
m_eq_n_1, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, ]
--->[0]


Blocking composition assignment 2 for state
 [m_eq_n_0, 
abs_h_0, 
ct_1_0, 
m_eq_n_1, 
ct_0_1, 
n0_eq_n1, ]


Exploring new composition...


Current composition gives an abstract counter-example trace:
[m_eq_n_0, 
abs_h_0, 
ct_0_0, 
m_eq_n_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[0]

[m_eq_n_0, 
abs_h_0, 
abs_end_0, 
ct_0_0, 
m_eq_n_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[m_eq_n_0, 
abs_h_0, 
abs_end_0, 
ct_0_0, 
m_eq_n_1, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[0]


Blocking composition assignment 2 for state
 [m_eq_n_0, 
abs_h_0, 
abs_end_0, 
ct_0_0, 
m_eq_n_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]


Exploring new composition...


Current composition gives an abstract counter-example trace:
[m_eq_n_0, 
abs_h_0, 
ct_0_0, 
m_eq_n_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[0]

[m_eq_n_0, 
abs_h_0, 
abs_end_0, 
ct_0_0, 
m_eq_n_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[1]

[m_eq_n_0, 
abs_h_0, 
abs_end_0, 
ct_0_0, 
m_eq_n_1, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[0]


Blocking composition assignment 0 for state
 [m_eq_n_0, 
abs_h_0, 
ct_0_0, 
m_eq_n_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]


Exploring new composition...


Current composition gives an abstract counter-example trace:
[m_eq_n_0, 
abs_h_0, 
ct_0_0, 
m_eq_n_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[1]

[m_eq_n_0, 
abs_h_0, 
ct_0_0, 
m_eq_n_1, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[2]

[m_eq_n_0, 
abs_h_0, 
ct_1_0, 
m_eq_n_1, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, ]
--->[0]


Blocking composition assignment 2 for state
 [m_eq_n_0, 
abs_h_0, 
ct_0_0, 
m_eq_n_1, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]


Exploring new composition...


Current composition gives an abstract counter-example trace:
[m_eq_n_0, 
abs_h_0, 
ct_0_0, 
m_eq_n_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[1]

[m_eq_n_0, 
abs_h_0, 
ct_0_0, 
m_eq_n_1, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, 
ct0_eq_ct1, ]
--->[0]

[m_eq_n_0, 
abs_h_0, 
ct_1_0, 
m_eq_n_1, 
abs_end_1, 
ct_0_1, 
n0_eq_n1, ]
--->[0]


9 SMT queries performed.
-----------------check_spuriousness-------------------------------



SEARCHING A CONCRETE CEX TRACE FROM ABOVE ABSTRACT CEX: 
--------------------------------------------------
Initial State {'ct_1_1': False, 'ct_0_1': True, 'abs_end_1': False, 'abs_h_1': False, 'm_eq_n_1': True, 'ct_1_0': False, 'ct_0_0': True, 'abs_end_0': False, 'abs_h_0': True, 'm_eq_n_0': True, 'ct0_eq_ct1': True, 'n0_eq_n1': True, 'h_1': 0, 'h_0': 1, 'end_1': 0, 'n_1': 0, 'm_1': 0, 'ct_1': 0, 'end_0': 0, 'm_0': 0, 'n_0': 0, 'ct_0': 0}


Next concrete state : {'end_1': 1, 'n_1': 0, 'm_1': 0, 'ct_1': 0, 'ct_0': 0, 'h_0': 1, 'm_0': 0, 'n_0': 0, 'end_0': 0, 'h_1': 0}


Next concrete state : {'end_0': 1, 'n_0': 0, 'm_0': 0, 'ct_0': 0, 'ct_1': 0, 'h_1': 0, 'm_1': 0, 'n_1': 0, 'end_1': 1, 'h_0': 1}





Is the abstract trace spurious? True
---------------pred_disc--------------
Discover predicate using a_src, a_tgt, c_src, c_tgt to eliminate the spurious cex.. 












No predicate discovered in the grammar. SyGuS technique cannot refine further, unable to prove the program safe/unsafe.
Total time taken : 3.976396
Number of predicates guessed: 0.0
