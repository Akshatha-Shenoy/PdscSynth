PDSC: Verifying ./Benchmarks_sygus/sum_to_n_error.smt2
Namespace(file='./Benchmarks_sygus/sum_to_n_error.smt2', log=False, msat=False, property=None, qe=False, sygus=True)
Exploring new composition...


Current composition gives an abstract counter-example trace:
[
i_lt_n_0, 
n_gt_0_0, 
i_eq_n_1, 
n_gt_0_1, 
i0_eq_1, 
i1_eq_2, 
sum0_eq_sum1, 
n0_eq_n1, ]
--->[2]

[i_eq_n_0, 
n_gt_0_0, 
i_eq_n_1, 
n_gt_0_1, 
i1_eq_2, 
n0_eq_n1, ]
--->[2]


Blocking composition assignment 2 for state
 [
i_lt_n_0, 
n_gt_0_0, 
i_eq_n_1, 
n_gt_0_1, 
i0_eq_1, 
i1_eq_2, 
sum0_eq_sum1, 
n0_eq_n1, ]


Exploring new composition...


Current composition gives an abstract counter-example trace:
[
i_lt_n_0, 
n_gt_0_0, 
i_eq_n_1, 
n_gt_0_1, 
i0_eq_1, 
i1_eq_2, 
sum0_eq_sum1, 
n0_eq_n1, ]
--->[0]

[i_eq_n_0, 
n_gt_0_0, 
i_eq_n_1, 
n_gt_0_1, 
i1_eq_2, 
n0_eq_n1, ]
--->[0]


2 SMT queries performed.
-----------------check_spuriousness-------------------------------



SEARCHING A CONCRETE CEX TRACE FROM ABOVE ABSTRACT CEX: 
--------------------------------------------------
Initial State {'n_1': 2, 'n_gt_0_1': True, 'i_lt_n_1': False, 'i_eq_n_1': True, 'n_gt_0_0': True, 'i_lt_n_0': True, 'i_eq_n_0': False, 'n0_eq_n1': True, 'sum0_eq_sum1': True, 'i1_eq_2': True, 'i0_eq_1': True, 'n_0': 2, 'i_1': 2, 'i_0': 1, 'sum_1': 0, 'sum_0': 0}


Next concrete state : {'i_0': 2, 'sum_0': 1, 'sum_1': 0, 'n_1': 2, 'i_1': 2, 'n_0': 2}





Is the abstract trace spurious? False
Real cex. Program is unsafe.
Total time taken : 0.278168
Number of predicates guessed: 0.0
