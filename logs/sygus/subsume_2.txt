PDSC: Verifying ./Benchmarks_sygus/subsume_2.smt2
Namespace(file='./Benchmarks_sygus/subsume_2.smt2', log=False, msat=False, property=None, qe=False, sygus=True)
Exploring new composition...


Current composition gives an abstract counter-example trace:
[abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]
--->[2]

[abs_h_0, 
count_1_0, 
count_1_1, ]
--->[2]


Blocking composition assignment 2 for state
 [abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]


Exploring new composition...


Current composition gives an abstract counter-example trace:
[abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
count_1_0, 
count_0_1, ]
--->[2]

[abs_h_0, 
count_1_0, 
count_1_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
count_1_0, 
count_0_1, ]


Exploring new composition...


Current composition gives an abstract counter-example trace:
[abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]
--->[0]

[abs_h_0, 
count_1_0, 
count_0_1, ]
--->[1]

[abs_h_0, 
count_1_0, 
count_1_1, ]
--->[0]


Blocking composition assignment 0 for state
 [abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]


Exploring new composition...


Current composition gives an abstract counter-example trace:
[abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
count_1_1, ]
--->[2]

[abs_h_0, 
count_1_0, 
count_1_1, ]
--->[0]


Blocking composition assignment 2 for state
 [abs_h_0, 
count_0_0, 
count_1_1, ]


Exploring new composition...


Current composition gives an abstract counter-example trace:
[abs_h_0, 
count_0_0, 
count_0_1, 
x0_eq_x1, ]
--->[1]

[abs_h_0, 
count_0_0, 
count_1_1, ]
--->[0]

[abs_h_0, 
count_1_0, 
count_1_1, ]
--->[0]


5 SMT queries performed.
-----------------check_spuriousness-------------------------------



SEARCHING A CONCRETE CEX TRACE FROM ABOVE ABSTRACT CEX: 
--------------------------------------------------
Initial State {'count_1_1': False, 'count_0_1': True, 'abs_h_1': False, 'count_1_0': False, 'count_0_0': True, 'abs_h_0': True, 'x0_eq_x1': True, 'h_1': 0, 'h_0': 1, 'x_1': 0, 'x_0': 0, 'count_1': 0, 'count_0': 0}


Next concrete state : {'count_1': 1, 'x_1': 8, 'count_0': 0, 'h_0': 1, 'x_0': 0, 'h_1': 0}


Next concrete state : {'count_0': 1, 'x_0': 8, 'count_1': 1, 'h_1': 0, 'x_1': 8, 'h_0': 1}





Is the abstract trace spurious? True
---------------pred_disc--------------
Discover predicate using a_src, a_tgt, c_src, c_tgt to eliminate the spurious cex.. 












No predicate discovered in the grammar. SyGuS technique cannot refine further, unable to prove the program safe/unsafe.
Total time taken : 1.893182
Number of predicates guessed: 0.0
